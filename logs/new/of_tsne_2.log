2020-03-25 01:02:17,605 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 01:19:30,995 - __main__ - INFO - (0) - CV_RESULTS_: {'mean_fit_time': array([53.23423791, 54.05749281, 54.08105628, 54.10603627, 54.42263937,
       53.42222476]), 'std_fit_time': array([0.29101994, 0.35733264, 0.21322977, 0.0259074 , 0.30740331,
       0.43287295]), 'mean_score_time': array([0.18368419, 0.18788727, 0.17916028, 0.18559202, 0.18918522,
       0.17784715]), 'std_score_time': array([0.00331076, 0.00451449, 0.00163916, 0.0034499 , 0.00507112,
       0.0005463 ]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01239298, -0.        , -0.00210565, -0.01239298, -0.        ,
       -0.00210565]), 'split1_test_score': array([-0.025     , -0.025     , -0.02261485, -0.025     , -0.025     ,
       -0.02261485]), 'split2_test_score': array([-0.00000000e+00, -1.63607809e-05, -1.09778879e-02, -0.00000000e+00,
       -1.63607809e-05, -1.09778879e-02]), 'mean_test_score': array([-0.01246433, -0.00833879, -0.01189946, -0.01246433, -0.00833879,
       -0.01189946]), 'std_test_score': array([0.01020633, 0.01178126, 0.00839817, 0.01020633, 0.01178126,
       0.00839817]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 01:19:31,000 - __main__ - INFO - (0) - BEST_SCORE_: -0.008338786926951976
2020-03-25 01:19:31,006 - __main__ - INFO - (0) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 01:19:34,894 - __main__ - INFO - (1) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 01:36:41,694 - __main__ - INFO - (1) - CV_RESULTS_: {'mean_fit_time': array([53.87699207, 54.15673343, 53.51255457, 53.32429012, 53.42503762,
       53.08608882]), 'std_fit_time': array([0.187371  , 0.13790786, 0.14747354, 0.10240857, 0.0264759 ,
       0.08169614]), 'mean_score_time': array([0.18267854, 0.18794775, 0.17848404, 0.18454846, 0.186903  ,
       0.18053293]), 'std_score_time': array([0.0014375 , 0.00340632, 0.00211438, 0.00262558, 0.00443066,
       0.00136451]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-2.04228135e-02, -9.63087385e-05, -0.00000000e+00, -2.04228135e-02,
       -9.63087385e-05, -0.00000000e+00]), 'split1_test_score': array([-0.00016007, -0.        , -0.        , -0.00016007, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.00073093, -0.        , -0.        , -0.00073093, -0.        ,
       -0.        ]), 'mean_test_score': array([-7.10460457e-03, -3.21029128e-05,  0.00000000e+00, -7.10460457e-03,
       -3.21029128e-05,  0.00000000e+00]), 'std_test_score': array([9.42027901e-03, 4.54003747e-05, 0.00000000e+00, 9.42027901e-03,
       4.54003747e-05, 0.00000000e+00]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 01:36:41,699 - __main__ - INFO - (1) - BEST_SCORE_: 0.0
2020-03-25 01:36:41,703 - __main__ - INFO - (1) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 01:36:45,502 - __main__ - INFO - (2) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 01:53:54,809 - __main__ - INFO - (2) - CV_RESULTS_: {'mean_fit_time': array([53.43350951, 53.32077376, 53.18631124, 53.3336308 , 53.77946273,
       54.58389211]), 'std_fit_time': array([0.34413265, 0.08393851, 0.09235928, 0.31318733, 0.15031173,
       0.17127066]), 'mean_score_time': array([0.19182976, 0.18507139, 0.17721709, 0.18885756, 0.18740114,
       0.17842642]), 'std_score_time': array([0.01144492, 0.00121803, 0.00085422, 0.00976708, 0.00256358,
       0.00018242]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0., -0., -0., -0., -0., -0.]), 'split1_test_score': array([-6.09335054e-05, -0.00000000e+00, -0.00000000e+00, -6.09335054e-05,
       -0.00000000e+00, -0.00000000e+00]), 'split2_test_score': array([-0.025     , -0.02524857, -0.02618288, -0.025     , -0.02524857,
       -0.02618288]), 'mean_test_score': array([-0.00835364, -0.00841619, -0.00872763, -0.00835364, -0.00841619,
       -0.00872763]), 'std_test_score': array([0.01177078, 0.01190229, 0.01234273, 0.01177078, 0.01190229,
       0.01234273]), 'rank_test_score': array([1, 3, 5, 1, 3, 5], dtype=int32)}
2020-03-25 01:53:54,814 - __main__ - INFO - (2) - BEST_SCORE_: -0.008353644868141443
2020-03-25 01:53:54,818 - __main__ - INFO - (2) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-25 01:53:58,720 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 02:11:24,496 - __main__ - INFO - (3) - CV_RESULTS_: {'mean_fit_time': array([54.72408263, 54.7032609 , 54.56606627, 54.64171902, 54.9458274 ,
       53.8352015 ]), 'std_fit_time': array([0.18391798, 0.10455549, 0.05453018, 0.30743112, 0.20680463,
       0.49359509]), 'mean_score_time': array([0.18610533, 0.18705241, 0.18089175, 0.18414974, 0.1945796 ,
       0.18252802]), 'std_score_time': array([0.00116781, 0.0014248 , 0.00071701, 0.00118906, 0.00907962,
       0.00156428]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.0209313 , -0.00930763, -0.00908044, -0.0209313 , -0.00930763,
       -0.00908044]), 'split1_test_score': array([-0.025     , -0.025     , -0.02720763, -0.025     , -0.025     ,
       -0.02720763]), 'split2_test_score': array([-0.025     , -0.025     , -0.03821928, -0.025     , -0.025     ,
       -0.03821928]), 'mean_test_score': array([-0.02364377, -0.01976921, -0.02483578, -0.02364377, -0.01976921,
       -0.02483578]), 'std_test_score': array([0.00191801, 0.00739745, 0.01201353, 0.00191801, 0.00739745,
       0.01201353]), 'rank_test_score': array([3, 1, 5, 3, 1, 5], dtype=int32)}
2020-03-25 02:11:24,501 - __main__ - INFO - (3) - BEST_SCORE_: -0.019769211025381327
2020-03-25 02:11:24,507 - __main__ - INFO - (3) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 02:11:28,375 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 02:28:33,733 - __main__ - INFO - (4) - CV_RESULTS_: {'mean_fit_time': array([53.57994946, 53.55617428, 53.29252688, 53.58315937, 53.63615672,
       53.17435241]), 'std_fit_time': array([0.08945548, 0.13171769, 0.21665363, 0.06545605, 0.22906405,
       0.1340773 ]), 'mean_score_time': array([0.1827755 , 0.18761023, 0.18059953, 0.18233943, 0.18726476,
       0.17783642]), 'std_score_time': array([0.00329112, 0.00200406, 0.00184272, 0.00125264, 0.00301054,
       0.00149737]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.025     , -0.025     , -0.01040998, -0.025     , -0.025     ,
       -0.01040998]), 'split1_test_score': array([-0.025, -0.025, -0.025, -0.025, -0.025, -0.025]), 'split2_test_score': array([-0.025, -0.   , -0.   , -0.025, -0.   , -0.   ]), 'mean_test_score': array([-0.025     , -0.01666667, -0.01180333, -0.025     , -0.01666667,
       -0.01180333]), 'std_test_score': array([3.46944695e-18, 1.17851130e-02, 1.02536517e-02, 3.46944695e-18,
       1.17851130e-02, 1.02536517e-02]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 02:28:33,738 - __main__ - INFO - (4) - BEST_SCORE_: -0.011803327288735165
2020-03-25 02:28:33,740 - __main__ - INFO - (4) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 02:28:37,550 - __main__ - INFO - (5) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 02:45:51,974 - __main__ - INFO - (5) - CV_RESULTS_: {'mean_fit_time': array([53.81169264, 53.84646042, 53.72450193, 54.22347188, 54.48888135,
       53.71742384]), 'std_fit_time': array([0.17988521, 0.2903983 , 0.44002986, 0.28683165, 0.3414217 ,
       0.30316261]), 'mean_score_time': array([0.18377384, 0.18699471, 0.18249464, 0.18356999, 0.19186672,
       0.18182977]), 'std_score_time': array([0.00048234, 0.00062703, 0.00423469, 0.00171551, 0.00472626,
       0.00439898]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00145765, -0.00042124, -0.        , -0.00145765, -0.00042124,
       -0.        ]), 'split1_test_score': array([-0.00547564, -0.        , -0.        , -0.00547564, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.01591421, -0.        , -0.        , -0.01591421, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.00761583, -0.00014041,  0.        , -0.00761583, -0.00014041,
        0.        ]), 'std_test_score': array([0.0060928 , 0.00019857, 0.        , 0.0060928 , 0.00019857,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 02:45:51,979 - __main__ - INFO - (5) - BEST_SCORE_: 0.0
2020-03-25 02:45:51,981 - __main__ - INFO - (5) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 02:45:55,810 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 03:02:55,578 - __main__ - INFO - (6) - CV_RESULTS_: {'mean_fit_time': array([53.20800169, 53.28641232, 52.94404507, 53.36276515, 53.08505742,
       53.10678236]), 'std_fit_time': array([0.09198029, 0.00520359, 0.05742934, 0.72325749, 0.04251064,
       0.08926869]), 'mean_score_time': array([0.1822451 , 0.18760085, 0.17821797, 0.18200946, 0.18505335,
       0.17785438]), 'std_score_time': array([0.00115952, 0.0059896 , 0.00218919, 0.00164631, 0.00057368,
       0.00204442]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0., -0., -0., -0., -0., -0.]), 'split1_test_score': array([-0.02457307, -0.00611264, -0.00047947, -0.02457307, -0.00611264,
       -0.00047947]), 'split2_test_score': array([-0.00049162, -0.00022104, -0.00022821, -0.00049162, -0.00022104,
       -0.00022821]), 'mean_test_score': array([-0.0083549 , -0.00211122, -0.00023589, -0.0083549 , -0.00211122,
       -0.00023589]), 'std_test_score': array([0.01146974, 0.00283086, 0.00019582, 0.01146974, 0.00283086,
       0.00019582]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 03:02:55,583 - __main__ - INFO - (6) - BEST_SCORE_: -0.00023589178158104894
2020-03-25 03:02:55,584 - __main__ - INFO - (6) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 03:02:59,380 - __main__ - INFO - (7) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 03:20:07,756 - __main__ - INFO - (7) - CV_RESULTS_: {'mean_fit_time': array([53.2282517 , 54.07875721, 53.93484092, 54.02026304, 53.4735438 ,
       53.09928433]), 'std_fit_time': array([0.21278595, 0.21004056, 0.20576281, 0.10513479, 0.10938238,
       0.04975104]), 'mean_score_time': array([0.1834174 , 0.18840988, 0.17926915, 0.18310134, 0.18803072,
       0.1813976 ]), 'std_score_time': array([0.0024897 , 0.00061207, 0.0011152 , 0.00103432, 0.00079385,
       0.00403394]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00474795, -0.        , -0.0003025 , -0.00474795, -0.        ,
       -0.0003025 ]), 'split1_test_score': array([-0.02182233, -0.        , -0.0025745 , -0.02182233, -0.        ,
       -0.0025745 ]), 'split2_test_score': array([-0.02072362, -0.00028812, -0.        , -0.02072362, -0.00028812,
       -0.        ]), 'mean_test_score': array([-1.57646328e-02, -9.60402968e-05, -9.58997184e-04, -1.57646328e-02,
       -9.60402968e-05, -9.58997184e-04]), 'std_test_score': array([0.00780288, 0.00013582, 0.00114899, 0.00780288, 0.00013582,
       0.00114899]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 03:20:07,761 - __main__ - INFO - (7) - BEST_SCORE_: -9.604029682663805e-05
2020-03-25 03:20:07,762 - __main__ - INFO - (7) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 03:20:11,610 - __main__ - INFO - (8) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 03:37:32,390 - __main__ - INFO - (8) - CV_RESULTS_: {'mean_fit_time': array([53.31090554, 54.15779392, 54.17493598, 55.54238987, 55.4706502 ,
       53.26361728]), 'std_fit_time': array([0.19277569, 0.53738738, 1.12215487, 0.08004228, 0.87894258,
       0.14740521]), 'mean_score_time': array([0.18256625, 0.18929307, 0.18089485, 0.18616136, 0.19036698,
       0.18039751]), 'std_score_time': array([0.00091509, 0.00255995, 0.00222246, 0.00119032, 0.00632629,
       0.00027244]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00183351, -0.        , -0.        , -0.00183351, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.0245928 , -0.01625001, -0.0071078 , -0.0245928 , -0.01625001,
       -0.0071078 ]), 'split2_test_score': array([-0.02055779, -0.        , -0.        , -0.02055779, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.01566137, -0.00541667, -0.00236927, -0.01566137, -0.00541667,
       -0.00236927]), 'std_test_score': array([0.00991556, 0.00766033, 0.00335065, 0.00991556, 0.00766033,
       0.00335065]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 03:37:32,395 - __main__ - INFO - (8) - BEST_SCORE_: -0.0023692675634313645
2020-03-25 03:37:32,400 - __main__ - INFO - (8) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 03:37:36,222 - __main__ - INFO - (9) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 03:54:56,485 - __main__ - INFO - (9) - CV_RESULTS_: {'mean_fit_time': array([53.43171382, 53.65442189, 54.73315914, 54.90005954, 55.21337144,
       53.85352516]), 'std_fit_time': array([0.11031606, 0.34165744, 0.6335633 , 0.01048446, 0.23330713,
       0.93692347]), 'mean_score_time': array([0.18579165, 0.18543871, 0.18495011, 0.18239594, 0.18512909,
       0.17984374]), 'std_score_time': array([0.00371175, 0.00092904, 0.00130556, 0.00227423, 0.00045073,
       0.00055896]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.000000e+00, -0.000000e+00, -2.397627e-07, -0.000000e+00,
       -0.000000e+00, -2.397627e-07]), 'split1_test_score': array([-0.0291157 , -0.03661183, -0.03907262, -0.0291157 , -0.03661183,
       -0.03907262]), 'split2_test_score': array([-0.025, -0.   , -0.   , -0.025, -0.   , -0.   ]), 'mean_test_score': array([-0.01803857, -0.01220394, -0.01302429, -0.01803857, -0.01220394,
       -0.01302429]), 'std_test_score': array([0.01286539, 0.01725898, 0.01841895, 0.01286539, 0.01725898,
       0.01841895]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 03:54:56,490 - __main__ - INFO - (9) - BEST_SCORE_: -0.012203941754174196
2020-03-25 03:54:56,495 - __main__ - INFO - (9) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 09:45:00,959 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 10:02:23,318 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([54.22761448, 54.15253679, 53.89108229, 54.47764762, 55.02093609,
       54.25970538]), 'std_fit_time': array([0.37067801, 0.20000747, 0.44143324, 0.20040606, 0.50868776,
       0.16767285]), 'mean_score_time': array([0.18455021, 0.18941816, 0.18169936, 0.18803461, 0.19008327,
       0.18213844]), 'std_score_time': array([0.00131673, 0.00034308, 0.00044474, 0.00155976, 0.0014581 ,
       0.00216091]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-3.44071072e-03, -2.20966957e-07, -3.63239922e-05, -3.44071072e-03,
       -2.20966957e-07, -3.63239922e-05]), 'split1_test_score': array([-0.00807713, -0.        , -0.        , -0.00807713, -0.        ,
       -0.        ]), 'split2_test_score': array([-1.14394280e-02, -2.30454136e-07, -3.66604961e-05, -1.14394280e-02,
       -2.30454136e-07, -3.66604961e-05]), 'mean_test_score': array([-7.65242229e-03, -1.50473697e-07, -2.43281628e-05, -7.65242229e-03,
       -1.50473697e-07, -2.43281628e-05]), 'std_test_score': array([3.27924288e-03, 1.06471442e-07, 1.72031574e-05, 3.27924288e-03,
       1.06471442e-07, 1.72031574e-05]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 10:02:23,323 - __main__ - INFO - (10) - BEST_SCORE_: -1.504736974358709e-07
2020-03-25 10:02:23,324 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 10:02:27,386 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 10:20:00,386 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([55.2645212 , 55.11048134, 54.82875021, 54.6365246 , 55.16895453,
       54.50091823]), 'std_fit_time': array([0.43164042, 0.07800642, 0.07300363, 0.25652428, 0.059918  ,
       0.22494474]), 'mean_score_time': array([0.18882251, 0.19232567, 0.18312701, 0.18566569, 0.19491903,
       0.18279107]), 'std_score_time': array([0.00279106, 0.00432456, 0.00069048, 0.00094101, 0.00598536,
       0.00212505]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.02171253, -0.00467784, -0.00037207, -0.02171253, -0.00467784,
       -0.00037207]), 'split1_test_score': array([-0.01108779, -0.00050911, -0.00894439, -0.01108779, -0.00050911,
       -0.00894439]), 'split2_test_score': array([-0.02115363, -0.00950156, -0.00245111, -0.02115363, -0.00950156,
       -0.00245111]), 'mean_test_score': array([-0.01798465, -0.00489617, -0.00392252, -0.01798465, -0.00489617,
       -0.00392252]), 'std_test_score': array([0.00488215, 0.0036744 , 0.00365102, 0.00488215, 0.0036744 ,
       0.00365102]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 10:20:00,391 - __main__ - INFO - (11) - BEST_SCORE_: -0.003922521291957938
2020-03-25 10:20:00,393 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 10:20:04,556 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 10:38:49,837 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([55.37319183, 61.1020906 , 59.87765265, 58.99381264, 59.68765696,
       58.11129157]), 'std_fit_time': array([0.22933755, 1.66942599, 1.60567701, 1.25781775, 0.58114263,
       1.90065206]), 'mean_score_time': array([0.18827732, 0.19971204, 0.18813101, 0.19620705, 0.20239552,
       0.19383629]), 'std_score_time': array([0.00134584, 0.00501056, 0.00576457, 0.00580009, 0.01369728,
       0.00257816]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01425342, -0.025     , -0.00060391, -0.01425342, -0.025     ,
       -0.00060391]), 'split1_test_score': array([-0.00017661, -0.        , -0.        , -0.00017661, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.025, -0.025, -0.025, -0.025, -0.025, -0.025]), 'mean_test_score': array([-0.01314334, -0.01666667, -0.00853464, -0.01314334, -0.01666667,
       -0.00853464]), 'std_test_score': array([0.01016446, 0.01178511, 0.01164538, 0.01016446, 0.01178511,
       0.01164538]), 'rank_test_score': array([3, 5, 1, 3, 5, 1], dtype=int32)}
2020-03-25 10:38:49,843 - __main__ - INFO - (12) - BEST_SCORE_: -0.008534636589648056
2020-03-25 10:38:49,844 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 10:38:54,115 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 10:57:30,250 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([59.8454744 , 58.57611052, 57.13312801, 57.95066309, 57.53818289,
       57.79078245]), 'std_fit_time': array([0.34908359, 1.3695951 , 0.92171888, 0.68832833, 1.10455822,
       0.15030883]), 'mean_score_time': array([0.19407598, 0.19673697, 0.18610382, 0.19583718, 0.19633301,
       0.19337066]), 'std_score_time': array([0.00540408, 0.00523039, 0.00366753, 0.00091741, 0.00428484,
       0.00386579]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00477904, -0.        , -0.        , -0.00477904, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.01339379, -0.        , -0.        , -0.01339379, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.00423922, -0.        , -0.        , -0.00423922, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.00747069,  0.        ,  0.        , -0.00747069,  0.        ,
        0.        ]), 'std_test_score': array([0.00419406, 0.        , 0.        , 0.00419406, 0.        ,
       0.        ]), 'rank_test_score': array([5, 1, 1, 5, 1, 1], dtype=int32)}
2020-03-25 10:57:30,256 - __main__ - INFO - (13) - BEST_SCORE_: 0.0
2020-03-25 10:57:30,259 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 10:57:34,512 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 11:16:00,391 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([57.90129868, 57.82271457, 58.75215459, 57.03169052, 59.0166471 ,
       56.22905811]), 'std_fit_time': array([1.44885397, 0.53593661, 0.21144415, 0.77978292, 2.49006991,
       0.7754532 ]), 'mean_score_time': array([0.19814301, 0.1992538 , 0.1932803 , 0.19060882, 0.19595091,
       0.18730426]), 'std_score_time': array([0.00622649, 0.00508144, 0.00274071, 0.00335123, 0.00626061,
       0.00478047]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00393725, -0.        , -0.        , -0.00393725, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.01160136, -0.00026368, -0.00091776, -0.01160136, -0.00026368,
       -0.00091776]), 'split2_test_score': array([-0.00416975, -0.        , -0.        , -0.00416975, -0.        ,
       -0.        ]), 'mean_test_score': array([-6.56945177e-03, -8.78917687e-05, -3.05921615e-04, -6.56945177e-03,
       -8.78917687e-05, -3.05921615e-04]), 'std_test_score': array([0.00355936, 0.0001243 , 0.00043264, 0.00355936, 0.0001243 ,
       0.00043264]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 11:16:00,396 - __main__ - INFO - (14) - BEST_SCORE_: -8.78917686559837e-05
2020-03-25 11:16:00,402 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 11:16:04,421 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 11:33:28,784 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([54.5461638 , 54.90252884, 53.92432618, 54.07337817, 54.855673  ,
       54.1478699 ]), 'std_fit_time': array([0.08529779, 0.02329446, 0.16349093, 0.08872506, 0.55793821,
       0.10711415]), 'mean_score_time': array([0.18682194, 0.19784252, 0.18432236, 0.18631935, 0.19365295,
       0.18219765]), 'std_score_time': array([0.00221444, 0.00489672, 0.00298316, 0.00158185, 0.00776648,
       0.00172272]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0., -0., -0., -0., -0., -0.]), 'split1_test_score': array([-0., -0., -0., -0., -0., -0.]), 'split2_test_score': array([-1.47710092e-05, -0.00000000e+00, -1.61197920e-02, -1.47710092e-05,
       -0.00000000e+00, -1.61197920e-02]), 'mean_test_score': array([-4.92366975e-06,  0.00000000e+00, -5.37326399e-03, -4.92366975e-06,
        0.00000000e+00, -5.37326399e-03]), 'std_test_score': array([6.96312053e-06, 0.00000000e+00, 7.59894281e-03, 6.96312053e-06,
       0.00000000e+00, 7.59894281e-03]), 'rank_test_score': array([3, 1, 5, 3, 1, 5], dtype=int32)}
2020-03-25 11:33:28,790 - __main__ - INFO - (15) - BEST_SCORE_: 0.0
2020-03-25 11:33:28,798 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 11:33:32,773 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 11:51:04,668 - __main__ - INFO - (16) - CV_RESULTS_: {'mean_fit_time': array([54.41185292, 54.93900959, 55.02046498, 54.93306311, 54.86840661,
       54.88931441]), 'std_fit_time': array([0.03154522, 0.35830697, 0.14661434, 0.2758116 , 0.3763081 ,
       0.12000577]), 'mean_score_time': array([0.18538761, 0.18972389, 0.18464518, 0.18866984, 0.19024086,
       0.18556849]), 'std_score_time': array([0.00179718, 0.00171192, 0.00205984, 0.00546077, 0.00158379,
       0.000883  ]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-8.94889101e-07, -5.66646832e-08, -0.00000000e+00, -8.94889101e-07,
       -5.66646832e-08, -0.00000000e+00]), 'split1_test_score': array([-0.02214892, -0.00043278, -0.        , -0.02214892, -0.00043278,
       -0.        ]), 'split2_test_score': array([-0.00112865, -0.        , -0.        , -0.00112865, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.00775949, -0.00014428,  0.        , -0.00775949, -0.00014428,
        0.        ]), 'std_test_score': array([0.01018528, 0.000204  , 0.        , 0.01018528, 0.000204  ,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 11:51:04,673 - __main__ - INFO - (16) - BEST_SCORE_: 0.0
2020-03-25 11:51:04,680 - __main__ - INFO - (16) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 11:51:08,713 - __main__ - INFO - (17) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 12:08:39,344 - __main__ - INFO - (17) - CV_RESULTS_: {'mean_fit_time': array([54.70201023, 54.85653798, 54.93590824, 54.64450518, 54.84222372,
       54.57080396]), 'std_fit_time': array([0.18731059, 0.09173627, 0.11271589, 0.40111281, 0.17064353,
       0.05663606]), 'mean_score_time': array([0.18696968, 0.19192147, 0.18668167, 0.18656556, 0.19302607,
       0.18712711]), 'std_score_time': array([0.00132469, 0.00060288, 0.00576213, 0.000729  , 0.00190139,
       0.00669581]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01292386, -0.00137289, -0.00093255, -0.01292386, -0.00137289,
       -0.00093255]), 'split1_test_score': array([-0.0193836 , -0.00029188, -0.        , -0.0193836 , -0.00029188,
       -0.        ]), 'split2_test_score': array([-0.00024672, -0.        , -0.        , -0.00024672, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.01085139, -0.00055492, -0.00031085, -0.01085139, -0.00055492,
       -0.00031085]), 'std_test_score': array([0.00794885, 0.00059054, 0.00043961, 0.00794885, 0.00059054,
       0.00043961]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 12:08:39,349 - __main__ - INFO - (17) - BEST_SCORE_: -0.0003108489520428734
2020-03-25 12:08:39,350 - __main__ - INFO - (17) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 12:08:43,343 - __main__ - INFO - (18) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 12:26:35,312 - __main__ - INFO - (18) - CV_RESULTS_: {'mean_fit_time': array([55.53412779, 55.44364246, 55.20533625, 55.42357405, 55.56511275,
       56.75728289]), 'std_fit_time': array([0.44972235, 0.0699046 , 0.31087675, 0.30326713, 0.25914623,
       2.73317162]), 'mean_score_time': array([0.18821875, 0.19029482, 0.18492031, 0.19179829, 0.19308988,
       0.18597595]), 'std_score_time': array([0.00122625, 0.00117095, 0.00145745, 0.00560764, 0.00358561,
       0.00231007]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00678323, -0.        , -0.        , -0.00678323, -0.        ,
       -0.        ]), 'split1_test_score': array([-1.04584909e-02, -3.42996146e-04, -6.95940406e-06, -1.04584909e-02,
       -3.42996146e-04, -6.95940406e-06]), 'split2_test_score': array([-0.01696513, -0.00187687, -0.00031787, -0.01696513, -0.00187687,
       -0.00031787]), 'mean_test_score': array([-0.01140228, -0.00073995, -0.00010828, -0.01140228, -0.00073995,
       -0.00010828]), 'std_test_score': array([0.00420997, 0.00081602, 0.00014823, 0.00420997, 0.00081602,
       0.00014823]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 12:26:35,318 - __main__ - INFO - (18) - BEST_SCORE_: -0.00010827560889436641
2020-03-25 12:26:35,322 - __main__ - INFO - (18) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 12:26:39,572 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 12:44:51,927 - __main__ - INFO - (19) - CV_RESULTS_: {'mean_fit_time': array([58.14047019, 56.94320194, 56.83659641, 56.96862467, 57.09327674,
       56.17651844]), 'std_fit_time': array([0.2627095 , 1.76598495, 0.85618341, 0.16882998, 0.53440188,
       0.3170644 ]), 'mean_score_time': array([0.19093124, 0.19163593, 0.19066095, 0.20664795, 0.19229635,
       0.18603579]), 'std_score_time': array([0.00399477, 0.00469245, 0.00550738, 0.01324199, 0.00043253,
       0.00174159]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00340161, -0.        , -0.        , -0.00340161, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.00897725, -0.00358764, -0.        , -0.00897725, -0.00358764,
       -0.        ]), 'split2_test_score': array([-0.0000000e+00, -9.7288195e-09, -0.0000000e+00, -0.0000000e+00,
       -9.7288195e-09, -0.0000000e+00]), 'mean_test_score': array([-0.00412629, -0.00119588,  0.        , -0.00412629, -0.00119588,
        0.        ]), 'std_test_score': array([0.0037006 , 0.00169123, 0.        , 0.0037006 , 0.00169123,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 12:44:51,933 - __main__ - INFO - (19) - BEST_SCORE_: 0.0
2020-03-25 12:44:51,934 - __main__ - INFO - (19) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 12:44:55,996 - __main__ - INFO - (20) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 13:02:53,572 - __main__ - INFO - (20) - CV_RESULTS_: {'mean_fit_time': array([56.36557364, 56.1510458 , 55.87735295, 56.45766544, 55.92511932,
       56.2533617 ]), 'std_fit_time': array([0.24849545, 0.46605227, 0.26776994, 0.2070126 , 0.27985769,
       0.20449792]), 'mean_score_time': array([0.18759147, 0.19179916, 0.1834422 , 0.18848173, 0.18989023,
       0.18448559]), 'std_score_time': array([0.00042531, 0.00255871, 0.00141919, 0.00189981, 0.00173209,
       0.00213335]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00501016, -0.00070416, -0.00036256, -0.00501016, -0.00070416,
       -0.00036256]), 'split1_test_score': array([-0.00327863, -0.00057095, -0.        , -0.00327863, -0.00057095,
       -0.        ]), 'split2_test_score': array([-0.00366728, -0.00078209, -0.        , -0.00366728, -0.00078209,
       -0.        ]), 'mean_test_score': array([-0.00398536, -0.00068574, -0.00012085, -0.00398536, -0.00068574,
       -0.00012085]), 'std_test_score': array([7.41815444e-04, 8.71745784e-05, 1.70914555e-04, 7.41815444e-04,
       8.71745784e-05, 1.70914555e-04]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 13:02:53,577 - __main__ - INFO - (20) - BEST_SCORE_: -0.0001208548406896512
2020-03-25 13:02:53,580 - __main__ - INFO - (20) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 13:02:57,668 - __main__ - INFO - (21) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 13:20:48,236 - __main__ - INFO - (21) - CV_RESULTS_: {'mean_fit_time': array([56.12923511, 55.78487817, 55.50024541, 55.84933647, 55.69715261,
       55.76626062]), 'std_fit_time': array([0.07948383, 0.22615149, 0.10158881, 0.09589168, 0.02435126,
       0.05256524]), 'mean_score_time': array([0.18863225, 0.19184709, 0.18730156, 0.18742768, 0.19055144,
       0.18500511]), 'std_score_time': array([0.00096438, 0.00107156, 0.00445055, 0.00057714, 0.00173683,
       0.00249833]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01437235, -0.        , -0.        , -0.01437235, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.00302481, -0.        , -0.        , -0.00302481, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.025, -0.025, -0.025, -0.025, -0.025, -0.025]), 'mean_test_score': array([-0.01413239, -0.00833333, -0.00833333, -0.01413239, -0.00833333,
       -0.00833333]), 'std_test_score': array([0.00897294, 0.01178511, 0.01178511, 0.00897294, 0.01178511,
       0.01178511]), 'rank_test_score': array([5, 1, 1, 5, 1, 1], dtype=int32)}
2020-03-25 13:20:48,243 - __main__ - INFO - (21) - BEST_SCORE_: -0.008333333333333333
2020-03-25 13:20:48,246 - __main__ - INFO - (21) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 13:20:52,341 - __main__ - INFO - (22) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 13:38:53,427 - __main__ - INFO - (22) - CV_RESULTS_: {'mean_fit_time': array([56.02757637, 55.86060333, 56.11942458, 56.23878821, 55.94093569,
       56.28877147]), 'std_fit_time': array([0.22568603, 0.09228334, 0.22627607, 0.63782732, 0.39878913,
       0.38326546]), 'mean_score_time': array([0.18656802, 0.19025699, 0.18651676, 0.19447295, 0.19274211,
       0.18311071]), 'std_score_time': array([0.00114698, 0.00071602, 0.00510225, 0.01142235, 0.00337049,
       0.00193186]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01143069, -0.        , -0.00028769, -0.01143069, -0.        ,
       -0.00028769]), 'split1_test_score': array([-0.02767645, -0.02933182, -0.02550793, -0.02767645, -0.02933182,
       -0.02550793]), 'split2_test_score': array([-0.00453357, -0.        , -0.00670467, -0.00453357, -0.        ,
       -0.00670467]), 'mean_test_score': array([-0.01454691, -0.00977727, -0.01083343, -0.01454691, -0.00977727,
       -0.01083343]), 'std_test_score': array([0.00970159, 0.01382715, 0.01070203, 0.00970159, 0.01382715,
       0.01070203]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 13:38:53,432 - __main__ - INFO - (22) - BEST_SCORE_: -0.00977727445931595
2020-03-25 13:38:53,433 - __main__ - INFO - (22) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 13:38:57,732 - __main__ - INFO - (23) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 13:57:45,519 - __main__ - INFO - (23) - CV_RESULTS_: {'mean_fit_time': array([60.35427173, 58.77322721, 59.27001866, 56.08863393, 56.87261415,
       61.03308407]), 'std_fit_time': array([1.797193  , 0.3613922 , 2.46797675, 0.2195553 , 0.41276049,
       2.25930097]), 'mean_score_time': array([0.19931817, 0.19501813, 0.18661769, 0.18835155, 0.19423302,
       0.19500128]), 'std_score_time': array([0.00235095, 0.00420163, 0.00527864, 0.00253257, 0.00489825,
       0.0038359 ]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01694535, -0.        , -0.        , -0.01694535, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.00074474, -0.        , -0.        , -0.00074474, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.01730592, -0.        , -0.        , -0.01730592, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.01166534,  0.        ,  0.        , -0.01166534,  0.        ,
        0.        ]), 'std_test_score': array([0.00772343, 0.        , 0.        , 0.00772343, 0.        ,
       0.        ]), 'rank_test_score': array([5, 1, 1, 5, 1, 1], dtype=int32)}
2020-03-25 13:57:45,524 - __main__ - INFO - (23) - BEST_SCORE_: 0.0
2020-03-25 13:57:45,525 - __main__ - INFO - (23) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 13:57:49,839 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 14:17:00,794 - __main__ - INFO - (24) - CV_RESULTS_: {'mean_fit_time': array([60.43183001, 58.99962171, 59.94555632, 61.59506798, 60.67320641,
       58.31326604]), 'std_fit_time': array([0.86072957, 0.21654646, 0.60440061, 0.89301102, 0.56577617,
       0.47348959]), 'mean_score_time': array([0.19653281, 0.20295827, 0.19048866, 0.19841448, 0.19837658,
       0.19050606]), 'std_score_time': array([0.00393225, 0.00291579, 0.0033979 , 0.00662997, 0.0026183 ,
       0.00266948]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00197249, -0.        , -0.        , -0.00197249, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.01463463, -0.        , -0.        , -0.01463463, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.00596018, -0.        , -0.        , -0.00596018, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.00752243,  0.        ,  0.        , -0.00752243,  0.        ,
        0.        ]), 'std_test_score': array([0.00528601, 0.        , 0.        , 0.00528601, 0.        ,
       0.        ]), 'rank_test_score': array([5, 1, 1, 5, 1, 1], dtype=int32)}
2020-03-25 14:17:00,799 - __main__ - INFO - (24) - BEST_SCORE_: 0.0
2020-03-25 14:17:00,800 - __main__ - INFO - (24) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 14:17:05,136 - __main__ - INFO - (25) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 14:36:35,875 - __main__ - INFO - (25) - CV_RESULTS_: {'mean_fit_time': array([61.95236413, 59.82019019, 60.65541681, 60.9473683 , 61.36325669,
       61.56204271]), 'std_fit_time': array([0.83774884, 1.48080509, 0.18496903, 0.69009027, 1.51221271,
       2.37921697]), 'mean_score_time': array([0.19565352, 0.1996096 , 0.19789998, 0.19913483, 0.20831068,
       0.19740717]), 'std_score_time': array([0.00363165, 0.00302824, 0.0070622 , 0.00505933, 0.00296525,
       0.00415595]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.025     , -0.02543729, -0.025     , -0.025     , -0.02543729,
       -0.025     ]), 'split1_test_score': array([-0.025     , -0.025     , -0.00878108, -0.025     , -0.025     ,
       -0.00878108]), 'split2_test_score': array([-0.025, -0.025, -0.   , -0.025, -0.025, -0.   ]), 'mean_test_score': array([-0.025     , -0.02514576, -0.01126036, -0.025     , -0.02514576,
       -0.01126036]), 'std_test_score': array([3.46944695e-18, 2.06140931e-04, 1.03556785e-02, 3.46944695e-18,
       2.06140931e-04, 1.03556785e-02]), 'rank_test_score': array([3, 5, 1, 3, 5, 1], dtype=int32)}
2020-03-25 14:36:35,880 - __main__ - INFO - (25) - BEST_SCORE_: -0.011260360824940365
2020-03-25 14:36:35,883 - __main__ - INFO - (25) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 14:36:40,198 - __main__ - INFO - (26) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 14:56:06,986 - __main__ - INFO - (26) - CV_RESULTS_: {'mean_fit_time': array([61.36878888, 60.80016875, 62.48475933, 62.0589114 , 59.39159497,
       60.45308503]), 'std_fit_time': array([0.52816193, 0.86739398, 0.28412265, 0.35029705, 0.70138426,
       2.2117383 ]), 'mean_score_time': array([0.1985476 , 0.2057546 , 0.19462029, 0.20110726, 0.21220454,
       0.20355463]), 'std_score_time': array([0.00234144, 0.00690442, 0.00490423, 0.00831618, 0.01799256,
       0.00750451]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01308242, -0.        , -0.        , -0.01308242, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.00595567, -0.        , -0.        , -0.00595567, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.02250345, -0.        , -0.        , -0.02250345, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.01384718,  0.        ,  0.        , -0.01384718,  0.        ,
        0.        ]), 'std_test_score': array([0.00677721, 0.        , 0.        , 0.00677721, 0.        ,
       0.        ]), 'rank_test_score': array([5, 1, 1, 5, 1, 1], dtype=int32)}
2020-03-25 14:56:06,991 - __main__ - INFO - (26) - BEST_SCORE_: 0.0
2020-03-25 14:56:06,993 - __main__ - INFO - (26) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 14:56:11,060 - __main__ - INFO - (27) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 15:13:57,317 - __main__ - INFO - (27) - CV_RESULTS_: {'mean_fit_time': array([56.06582808, 56.07350524, 55.27392705, 55.09939814, 55.74741228,
       55.37336016]), 'std_fit_time': array([0.09765143, 0.19556765, 0.16570692, 0.20325271, 0.22724527,
       0.24571587]), 'mean_score_time': array([0.18837539, 0.19088976, 0.18453081, 0.18646749, 0.19091805,
       0.18317032]), 'std_score_time': array([0.00148482, 0.00311829, 0.00216916, 0.00161252, 0.00191577,
       0.00096059]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00530856, -0.        , -0.        , -0.00530856, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.00534247, -0.00110895, -0.        , -0.00534247, -0.00110895,
       -0.        ]), 'split2_test_score': array([-0., -0., -0., -0., -0., -0.]), 'mean_test_score': array([-0.00355034, -0.00036965,  0.        , -0.00355034, -0.00036965,
        0.        ]), 'std_test_score': array([0.00251051, 0.00052277, 0.        , 0.00251051, 0.00052277,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 15:13:57,322 - __main__ - INFO - (27) - BEST_SCORE_: 0.0
2020-03-25 15:13:57,323 - __main__ - INFO - (27) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 15:14:01,351 - __main__ - INFO - (28) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 15:32:00,088 - __main__ - INFO - (28) - CV_RESULTS_: {'mean_fit_time': array([55.86092512, 55.87093973, 56.48781029, 57.02249455, 56.76451977,
       55.73446902]), 'std_fit_time': array([0.02935391, 0.0590224 , 0.47828709, 0.34333003, 0.03280124,
       0.37652356]), 'mean_score_time': array([0.18792621, 0.19554432, 0.18458327, 0.18883149, 0.19103678,
       0.18346794]), 'std_score_time': array([0.00023733, 0.00854113, 0.00160777, 0.00335936, 0.00120893,
       0.00026838]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01033879, -0.00050767, -0.        , -0.01033879, -0.00050767,
       -0.        ]), 'split1_test_score': array([-0.00348748, -0.        , -0.        , -0.00348748, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.0078112, -0.       , -0.       , -0.0078112, -0.       ,
       -0.       ]), 'mean_test_score': array([-0.00721249, -0.00016922,  0.        , -0.00721249, -0.00016922,
        0.        ]), 'std_test_score': array([0.00282889, 0.00023932, 0.        , 0.00282889, 0.00023932,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 15:32:00,093 - __main__ - INFO - (28) - BEST_SCORE_: 0.0
2020-03-25 15:32:00,094 - __main__ - INFO - (28) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 15:32:04,097 - __main__ - INFO - (29) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 15:49:41,890 - __main__ - INFO - (29) - CV_RESULTS_: {'mean_fit_time': array([54.79375315, 55.14567685, 55.0509487 , 55.40403422, 55.09778833,
       55.27343893]), 'std_fit_time': array([0.17783303, 0.01915453, 0.02585089, 0.06895846, 0.05755949,
       0.24638388]), 'mean_score_time': array([0.18604684, 0.19744364, 0.1831824 , 0.18867008, 0.18966953,
       0.18287388]), 'std_score_time': array([0.00098192, 0.01069779, 0.00126298, 0.00372356, 0.00190827,
       0.00093533]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01454804, -0.00645031, -0.00543332, -0.01454804, -0.00645031,
       -0.00543332]), 'split1_test_score': array([-0.01134826, -0.        , -0.        , -0.01134826, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.01099996, -0.        , -0.        , -0.01099996, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.01229875, -0.0021501 , -0.00181111, -0.01229875, -0.0021501 ,
       -0.00181111]), 'std_test_score': array([0.00159683, 0.00304071, 0.00256129, 0.00159683, 0.00304071,
       0.00256129]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 15:49:41,900 - __main__ - INFO - (29) - BEST_SCORE_: -0.0018111054192315812
2020-03-25 15:49:41,901 - __main__ - INFO - (29) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 15:49:45,944 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 16:07:50,643 - __main__ - INFO - (30) - CV_RESULTS_: {'mean_fit_time': array([56.34114281, 56.09551303, 56.60106945, 57.50062394, 57.1740226 ,
       55.96293275]), 'std_fit_time': array([0.28801633, 0.39120939, 0.854286  , 0.17321969, 0.41243146,
       0.2089001 ]), 'mean_score_time': array([0.18838859, 0.19325296, 0.18950264, 0.18831706, 0.19165309,
       0.18498286]), 'std_score_time': array([0.00199488, 0.00104081, 0.00149314, 0.0024174 , 0.00278865,
       0.00145476]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0., -0., -0., -0., -0., -0.]), 'split1_test_score': array([-0.01506855, -0.00088681, -0.        , -0.01506855, -0.00088681,
       -0.        ]), 'split2_test_score': array([-0.009946, -0.      , -0.      , -0.009946, -0.      , -0.      ]), 'mean_test_score': array([-0.00833818, -0.0002956 ,  0.        , -0.00833818, -0.0002956 ,
        0.        ]), 'std_test_score': array([0.00625588, 0.00041805, 0.        , 0.00625588, 0.00041805,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 16:07:50,649 - __main__ - INFO - (30) - BEST_SCORE_: 0.0
2020-03-25 16:07:50,653 - __main__ - INFO - (30) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 16:07:54,703 - __main__ - INFO - (31) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 16:26:28,974 - __main__ - INFO - (31) - CV_RESULTS_: {'mean_fit_time': array([56.17248591, 55.97549899, 56.78805399, 60.83532023, 60.59000921,
       58.21171069]), 'std_fit_time': array([0.30814189, 0.19595456, 1.48525447, 0.28541027, 0.40241624,
       1.48714673]), 'mean_score_time': array([0.18758901, 0.19009972, 0.18617773, 0.19467306, 0.2015268 ,
       0.19206055]), 'std_score_time': array([0.0016491 , 0.00016773, 0.00580706, 0.00295726, 0.00403741,
       0.0040197 ]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.002057, -0.      , -0.      , -0.002057, -0.      , -0.      ]), 'split1_test_score': array([-0.01205582, -0.        , -0.        , -0.01205582, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.00067794, -0.        , -0.        , -0.00067794, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.00493025,  0.        ,  0.        , -0.00493025,  0.        ,
        0.        ]), 'std_test_score': array([0.00506989, 0.        , 0.        , 0.00506989, 0.        ,
       0.        ]), 'rank_test_score': array([5, 1, 1, 5, 1, 1], dtype=int32)}
2020-03-25 16:26:28,979 - __main__ - INFO - (31) - BEST_SCORE_: 0.0
2020-03-25 16:26:28,986 - __main__ - INFO - (31) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 16:26:33,226 - __main__ - INFO - (32) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 16:45:20,107 - __main__ - INFO - (32) - CV_RESULTS_: {'mean_fit_time': array([58.96841129, 59.85427769, 58.86723765, 58.91965882, 58.00936882,
       58.43384465]), 'std_fit_time': array([0.63441599, 0.91844464, 1.14845246, 0.22722371, 0.65275457,
       0.50822224]), 'mean_score_time': array([0.19009717, 0.20083825, 0.19183922, 0.19377271, 0.19309513,
       0.19258213]), 'std_score_time': array([0.00329216, 0.00403361, 0.00346552, 0.00236597, 0.00223403,
       0.00433682]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00947806, -0.        , -0.        , -0.00947806, -0.        ,
       -0.        ]), 'split1_test_score': array([-0.00245497, -0.        , -0.        , -0.00245497, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.02053608, -0.00762184, -0.002808  , -0.02053608, -0.00762184,
       -0.002808  ]), 'mean_test_score': array([-0.01082304, -0.00254061, -0.000936  , -0.01082304, -0.00254061,
       -0.000936  ]), 'std_test_score': array([0.0074426 , 0.00359297, 0.0013237 , 0.0074426 , 0.00359297,
       0.0013237 ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 16:45:20,112 - __main__ - INFO - (32) - BEST_SCORE_: -0.0009360005520940321
2020-03-25 16:45:20,118 - __main__ - INFO - (32) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 16:45:24,287 - __main__ - INFO - (33) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 17:04:14,461 - __main__ - INFO - (33) - CV_RESULTS_: {'mean_fit_time': array([58.17600513, 59.49001503, 58.86045933, 57.86273543, 58.68126678,
       59.31498575]), 'std_fit_time': array([0.31405393, 0.63174063, 1.62301248, 0.37911572, 0.56707551,
       0.8346486 ]), 'mean_score_time': array([0.19441398, 0.19747742, 0.18729448, 0.19275196, 0.20047522,
       0.19098568]), 'std_score_time': array([0.00486232, 0.00256505, 0.00410484, 0.00272428, 0.00353267,
       0.00336357]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00998477, -0.        , -0.        , -0.00998477, -0.        ,
       -0.        ]), 'split1_test_score': array([-1.42046830e-02, -1.37183756e-03, -1.34647105e-05, -1.42046830e-02,
       -1.37183756e-03, -1.34647105e-05]), 'split2_test_score': array([-1.10357939e-02, -4.29446249e-08, -2.18771794e-05, -1.10357939e-02,
       -4.29446249e-08, -2.18771794e-05]), 'mean_test_score': array([-1.17417478e-02, -4.57293502e-04, -1.17806300e-05, -1.17417478e-02,
       -4.57293502e-04, -1.17806300e-05]), 'std_test_score': array([1.79363730e-03, 6.46680307e-04, 9.01035849e-06, 1.79363730e-03,
       6.46680307e-04, 9.01035849e-06]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 17:04:14,467 - __main__ - INFO - (33) - BEST_SCORE_: -1.1780629971008245e-05
2020-03-25 17:04:14,471 - __main__ - INFO - (33) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 17:04:18,690 - __main__ - INFO - (34) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 17:22:53,622 - __main__ - INFO - (34) - CV_RESULTS_: {'mean_fit_time': array([60.8296268 , 59.26567348, 57.44221258, 56.74682872, 57.41661612,
       57.42419052]), 'std_fit_time': array([0.60599837, 0.45873638, 0.2782489 , 0.24386523, 0.37173633,
       0.54284373]), 'mean_score_time': array([0.1932288 , 0.19383017, 0.18654792, 0.18637013, 0.19220304,
       0.18641639]), 'std_score_time': array([0.00361864, 0.00343553, 0.00433005, 0.00128031, 0.00237022,
       0.00115284]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.025, -0.025, -0.025, -0.025, -0.025, -0.025]), 'split1_test_score': array([-0.025     , -0.01960078, -0.00915749, -0.025     , -0.01960078,
       -0.00915749]), 'split2_test_score': array([-0.        , -0.00020312, -0.00143203, -0.        , -0.00020312,
       -0.00143203]), 'mean_test_score': array([-0.01666667, -0.01493464, -0.01186318, -0.01666667, -0.01493464,
       -0.01186318]), 'std_test_score': array([0.01178511, 0.01064741, 0.00980995, 0.01178511, 0.01064741,
       0.00980995]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 17:22:53,628 - __main__ - INFO - (34) - BEST_SCORE_: -0.011863175574885325
2020-03-25 17:22:53,629 - __main__ - INFO - (34) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 17:22:57,773 - __main__ - INFO - (35) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 17:41:34,502 - __main__ - INFO - (35) - CV_RESULTS_: {'mean_fit_time': array([58.00438889, 58.72772988, 58.93043232, 58.41668487, 58.39812525,
       57.45485655]), 'std_fit_time': array([0.34907782, 0.2231773 , 0.76084704, 0.92881129, 0.57911857,
       0.25005131]), 'mean_score_time': array([0.19121575, 0.19330804, 0.19036428, 0.1936694 , 0.20459803,
       0.18695196]), 'std_score_time': array([0.00063827, 0.0017477 , 0.00333103, 0.00444008, 0.00588453,
       0.00378036]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.0005216, -0.       , -0.       , -0.0005216, -0.       ,
       -0.       ]), 'split1_test_score': array([-0.02326444, -0.00719991, -0.        , -0.02326444, -0.00719991,
       -0.        ]), 'split2_test_score': array([-0.00491404, -0.        , -0.        , -0.00491404, -0.        ,
       -0.        ]), 'mean_test_score': array([-0.00956669, -0.00239997,  0.        , -0.00956669, -0.00239997,
        0.        ]), 'std_test_score': array([0.00985037, 0.00339407, 0.        , 0.00985037, 0.00339407,
       0.        ]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 17:41:34,507 - __main__ - INFO - (35) - BEST_SCORE_: 0.0
2020-03-25 17:41:34,517 - __main__ - INFO - (35) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 17:41:38,603 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 18:00:07,787 - __main__ - INFO - (36) - CV_RESULTS_: {'mean_fit_time': array([57.46600286, 57.82034294, 58.23605895, 57.7646869 , 57.94213359,
       58.02878737]), 'std_fit_time': array([0.12640958, 0.47704694, 0.15725332, 0.47101684, 0.25524611,
       0.06745345]), 'mean_score_time': array([0.19111093, 0.19376874, 0.18533921, 0.18785334, 0.19344481,
       0.18755674]), 'std_score_time': array([0.00296765, 0.00166473, 0.00176074, 0.00018263, 0.00175411,
       0.00177344]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-1.89580030e-03, -7.35907245e-07, -0.00000000e+00, -1.89580030e-03,
       -7.35907245e-07, -0.00000000e+00]), 'split1_test_score': array([-0.0115762, -0.       , -0.       , -0.0115762, -0.       ,
       -0.       ]), 'split2_test_score': array([-0.00530136, -0.        , -0.        , -0.00530136, -0.        ,
       -0.        ]), 'mean_test_score': array([-6.25778722e-03, -2.45302415e-07,  0.00000000e+00, -6.25778722e-03,
       -2.45302415e-07,  0.00000000e+00]), 'std_test_score': array([4.00945457e-03, 3.46910002e-07, 0.00000000e+00, 4.00945457e-03,
       3.46910002e-07, 0.00000000e+00]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 18:00:07,793 - __main__ - INFO - (36) - BEST_SCORE_: 0.0
2020-03-25 18:00:07,804 - __main__ - INFO - (36) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 18:00:11,794 - __main__ - INFO - (37) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 18:18:49,931 - __main__ - INFO - (37) - CV_RESULTS_: {'mean_fit_time': array([58.37991158, 58.53675254, 58.23433081, 57.71786666, 58.31214539,
       58.20377914]), 'std_fit_time': array([0.34612858, 0.09519951, 0.28158375, 0.45901348, 0.65797304,
       0.6656231 ]), 'mean_score_time': array([0.19005315, 0.19156377, 0.18849031, 0.19400644, 0.20087298,
       0.18932748]), 'std_score_time': array([0.00113952, 0.00286695, 0.00167213, 0.00321004, 0.00640321,
       0.00065321]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.00273559, -0.        , -0.        , -0.00273559, -0.        ,
       -0.        ]), 'split1_test_score': array([-9.27840357e-03, -1.93555846e-05, -0.00000000e+00, -9.27840357e-03,
       -1.93555846e-05, -0.00000000e+00]), 'split2_test_score': array([-0.01357883, -0.        , -0.001077  , -0.01357883, -0.        ,
       -0.001077  ]), 'mean_test_score': array([-8.53094221e-03, -6.45186152e-06, -3.58999367e-04, -8.53094221e-03,
       -6.45186152e-06, -3.58999367e-04]), 'std_test_score': array([4.45817550e-03, 9.12431007e-06, 5.07701773e-04, 4.45817550e-03,
       9.12431007e-06, 5.07701773e-04]), 'rank_test_score': array([5, 1, 3, 5, 1, 3], dtype=int32)}
2020-03-25 18:18:49,937 - __main__ - INFO - (37) - BEST_SCORE_: -6.4518615239182865e-06
2020-03-25 18:18:49,941 - __main__ - INFO - (37) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}
2020-03-25 18:18:54,039 - __main__ - INFO - (38) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 18:37:04,736 - __main__ - INFO - (38) - CV_RESULTS_: {'mean_fit_time': array([57.91574788, 57.75555062, 57.60097392, 56.18074592, 55.94701179,
       56.21659144]), 'std_fit_time': array([0.42389459, 0.4969356 , 0.21505341, 0.53676159, 0.08683107,
       0.13995021]), 'mean_score_time': array([0.19203711, 0.1929884 , 0.18421515, 0.18560044, 0.19072421,
       0.18371455]), 'std_score_time': array([0.00185061, 0.00185585, 0.001583  , 0.00031729, 0.00039991,
       0.00294291]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.01700259, -0.00469822, -0.00384157, -0.01700259, -0.00469822,
       -0.00384157]), 'split1_test_score': array([-0.01161441, -0.        , -0.        , -0.01161441, -0.        ,
       -0.        ]), 'split2_test_score': array([-0.01344042, -0.0021885 , -0.        , -0.01344042, -0.0021885 ,
       -0.        ]), 'mean_test_score': array([-0.01401914, -0.00229557, -0.00128052, -0.01401914, -0.00229557,
       -0.00128052]), 'std_test_score': array([0.00223746, 0.00191953, 0.00181093, 0.00223746, 0.00191953,
       0.00181093]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 18:37:04,742 - __main__ - INFO - (38) - BEST_SCORE_: -0.0012805222009212823
2020-03-25 18:37:04,752 - __main__ - INFO - (38) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
2020-03-25 18:37:08,755 - __main__ - INFO - (39) - Started GridSearchCV with: {'c': [10, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(1), GaussianKernel(1.5)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>]}
2020-03-25 18:54:47,298 - __main__ - INFO - (39) - CV_RESULTS_: {'mean_fit_time': array([56.56927061, 55.48426294, 54.59448028, 54.81123749, 55.24611227,
       54.51667221]), 'std_fit_time': array([0.5770878 , 0.30188472, 0.18115169, 0.0487237 , 0.17973938,
       0.06993613]), 'mean_score_time': array([0.18761484, 0.18874478, 0.18347239, 0.18612798, 0.18952886,
       0.18322372]), 'std_score_time': array([1.94422041e-03, 9.98528965e-05, 1.10454644e-03, 8.70153875e-04,
       1.15860084e-03, 1.74456863e-03]), 'param_c': masked_array(data=[10, 10, 10, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(1),
                   GaussianKernel(1.5), GaussianKernel(0.5),
                   GaussianKernel(1), GaussianKernel(1.5)],
             mask=[False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}], 'split0_test_score': array([-0.025, -0.025, -0.025, -0.025, -0.025, -0.025]), 'split1_test_score': array([-0.025     , -0.00818326, -0.01479012, -0.025     , -0.00818326,
       -0.01479012]), 'split2_test_score': array([-0.025     , -0.025     , -0.01280595, -0.025     , -0.025     ,
       -0.01280595]), 'mean_test_score': array([-0.025     , -0.01939442, -0.01753202, -0.025     , -0.01939442,
       -0.01753202]), 'std_test_score': array([3.46944695e-18, 7.92748632e-03, 5.34242326e-03, 3.46944695e-18,
       7.92748632e-03, 5.34242326e-03]), 'rank_test_score': array([5, 3, 1, 5, 3, 1], dtype=int32)}
2020-03-25 18:54:47,303 - __main__ - INFO - (39) - BEST_SCORE_: -0.017532023527424657
2020-03-25 18:54:47,310 - __main__ - INFO - (39) - BEST_PARAMS_: {'c': 10, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(1.5)}
