2020-03-19 01:03:52,191 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 01:04:14,533 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 01:04:14,542 - __main__ - INFO - (0) - DATA_REDUCTION_: p
2020-03-19 01:04:14,545 - __main__ - INFO - (0) - DATA_DIMENSION_: 2
2020-03-19 01:26:46,774 - __main__ - INFO - (0) - CV_RESULTS_: {'mean_fit_time': array([53.17509683, 52.92288248, 53.49200042, 53.89724882, 53.4061981 ,
       53.74857163, 54.42672952, 54.19037573]), 'std_fit_time': array([0.04000743, 0.16649445, 0.1856868 , 0.31689018, 0.06136202,
       0.23896367, 0.29413894, 0.14912605]), 'mean_score_time': array([0.18775487, 0.19467171, 0.18552748, 0.18440994, 0.19886637,
       0.18223667, 0.18168306, 0.18916599]), 'std_score_time': array([0.01010789, 0.00629177, 0.00886669, 0.00117115, 0.01006395,
       0.00274278, 0.00404313, 0.00731812]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.28152731, -0.55064824, -0.025     ,
       -0.025     , -0.28503907, -0.55064824]), 'split1_test_score': array([-0.025     , -0.025     , -0.55363173, -0.55006186, -0.025     ,
       -0.025     , -0.55363173, -0.55006186]), 'split2_test_score': array([-0.025     , -0.025     , -0.24890882, -0.55073704, -0.025     ,
       -0.025     , -0.24891907, -0.55073704]), 'mean_test_score': array([-0.025     , -0.025     , -0.36135596, -0.55048238, -0.025     ,
       -0.025     , -0.36252996, -0.55048238]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.36610084e-01, 2.99550922e-04,
       3.46944695e-18, 3.46944695e-18, 1.35931552e-01, 2.99550922e-04]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 6, 7], dtype=int32)}
2020-03-19 01:26:46,787 - __main__ - INFO - (0) - BEST_SCORE_: -0.025000000000000005
2020-03-19 01:26:46,793 - __main__ - INFO - (0) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 01:26:46,800 - __main__ - INFO - (1) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 01:26:46,802 - __main__ - INFO - (1) - DATA_REDUCTION_: p
2020-03-19 01:26:46,803 - __main__ - INFO - (1) - DATA_DIMENSION_: 2
2020-03-19 01:49:21,576 - __main__ - INFO - (1) - CV_RESULTS_: {'mean_fit_time': array([53.24650661, 53.49866112, 54.92924738, 54.23563782, 53.56294386,
       53.12961984, 53.7381026 , 53.72001044]), 'std_fit_time': array([0.48607624, 0.21698412, 0.24018711, 0.16422344, 0.2789951 ,
       0.00633972, 0.07644389, 0.09110016]), 'mean_score_time': array([0.18775495, 0.1850574 , 0.19147197, 0.18535264, 0.18402267,
       0.1927197 , 0.1847856 , 0.18459566]), 'std_score_time': array([0.00580875, 0.00674268, 0.00950405, 0.00488339, 0.00406519,
       0.01500792, 0.00496989, 0.00165715]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01882896, -0.025     , -0.1369894 , -0.16137098, -0.01882896,
       -0.025     , -0.14099574, -0.16134908]), 'split1_test_score': array([-0.03127116, -0.025     , -0.1384347 , -0.16959162, -0.03127116,
       -0.025     , -0.13820827, -0.16947143]), 'split2_test_score': array([-0.02972345, -0.025     , -0.14942823, -0.166455  , -0.02972345,
       -0.025     , -0.15092833, -0.16600188]), 'mean_test_score': array([-0.02660786, -0.025     , -0.14161744, -0.16580586, -0.02660786,
       -0.025     , -0.14337744, -0.16560746]), 'std_test_score': array([5.53668184e-03, 3.46944695e-18, 5.55448875e-03, 3.38730620e-03,
       5.53668184e-03, 3.46944695e-18, 5.45920435e-03, 3.32764176e-03]), 'rank_test_score': array([3, 1, 5, 8, 3, 1, 6, 7], dtype=int32)}
2020-03-19 01:49:21,582 - __main__ - INFO - (1) - BEST_SCORE_: -0.025000000000000005
2020-03-19 01:49:21,585 - __main__ - INFO - (1) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 01:49:21,594 - __main__ - INFO - (2) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 01:49:21,596 - __main__ - INFO - (2) - DATA_REDUCTION_: p
2020-03-19 01:49:21,597 - __main__ - INFO - (2) - DATA_DIMENSION_: 2
2020-03-19 02:11:44,181 - __main__ - INFO - (2) - CV_RESULTS_: {'mean_fit_time': array([53.53740239, 53.33835514, 53.46187162, 53.14243793, 53.80293345,
       52.38835367, 52.69150861, 53.19957256]), 'std_fit_time': array([0.32185323, 0.48022828, 0.16394404, 0.20352655, 0.42212576,
       0.54641269, 0.14570571, 0.44228433]), 'mean_score_time': array([0.18557684, 0.18287969, 0.19089047, 0.18396783, 0.18823369,
       0.19380331, 0.18840647, 0.18147802]), 'std_score_time': array([0.00224287, 0.00230073, 0.01109   , 0.00481106, 0.01082093,
       0.01422263, 0.00719163, 0.00067219]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00596512, -0.025     , -0.14825658, -0.12998418, -0.00596512,
       -0.025     , -0.14825208, -0.12998418]), 'split1_test_score': array([-0.02535619, -0.025     , -0.13252835, -0.11674434, -0.02535619,
       -0.025     , -0.13251761, -0.11674435]), 'split2_test_score': array([-0.025     , -0.025     , -0.34560416, -0.55005577, -0.025     ,
       -0.025     , -0.34915579, -0.55005577]), 'mean_test_score': array([-0.01877377, -0.025     , -0.20879636, -0.26559476, -0.01877377,
       -0.025     , -0.20997516, -0.26559477]), 'std_test_score': array([9.05825081e-03, 3.46944695e-18, 9.69505863e-02, 2.01216918e-01,
       9.05825081e-03, 3.46944695e-18, 9.86249787e-02, 2.01216915e-01]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 8], dtype=int32)}
2020-03-19 02:11:44,187 - __main__ - INFO - (2) - BEST_SCORE_: -0.018773769430731915
2020-03-19 02:11:44,188 - __main__ - INFO - (2) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 02:11:44,196 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 02:11:44,198 - __main__ - INFO - (3) - DATA_REDUCTION_: p
2020-03-19 02:11:44,202 - __main__ - INFO - (3) - DATA_DIMENSION_: 2
2020-03-19 02:34:34,331 - __main__ - INFO - (3) - CV_RESULTS_: {'mean_fit_time': array([53.20585354, 53.98780727, 54.63881707, 55.09433238, 54.3333416 ,
       54.12866322, 54.46076353, 55.04167557]), 'std_fit_time': array([0.19936763, 0.27325578, 0.58540715, 0.09068179, 0.20240202,
       0.39279217, 0.30924824, 0.63780172]), 'mean_score_time': array([0.18684642, 0.18498071, 0.18636497, 0.18519505, 0.18602347,
       0.18965816, 0.18788139, 0.18955541]), 'std_score_time': array([0.00484975, 0.00489606, 0.00563676, 0.00435024, 0.00472821,
       0.00513611, 0.01148406, 0.00792534]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.03809828, -0.025     , -0.10151113, -0.09406365, -0.03809828,
       -0.025     , -0.10394518, -0.09271233]), 'split1_test_score': array([-0.02517958, -0.025     , -0.05259225, -0.04902995, -0.02517958,
       -0.025     , -0.05339077, -0.05008861]), 'split2_test_score': array([-0.02775362, -0.025     , -0.10949916, -0.10009425, -0.02775362,
       -0.025     , -0.11055683, -0.10214773]), 'mean_test_score': array([-0.03034383, -0.025     , -0.08786751, -0.08106262, -0.03034383,
       -0.025     , -0.08929759, -0.08164956]), 'std_test_score': array([5.58301624e-03, 3.46944695e-18, 2.51556544e-02, 2.27839227e-02,
       5.58301624e-03, 3.46944695e-18, 2.55330321e-02, 2.26469529e-02]), 'rank_test_score': array([3, 1, 7, 5, 3, 1, 8, 6], dtype=int32)}
2020-03-19 02:34:34,337 - __main__ - INFO - (3) - BEST_SCORE_: -0.025000000000000005
2020-03-19 02:34:34,339 - __main__ - INFO - (3) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 02:34:34,343 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 02:34:34,345 - __main__ - INFO - (4) - DATA_REDUCTION_: p
2020-03-19 02:34:34,346 - __main__ - INFO - (4) - DATA_DIMENSION_: 2
2020-03-19 02:57:25,388 - __main__ - INFO - (4) - CV_RESULTS_: {'mean_fit_time': array([54.44607846, 54.06956275, 54.39928404, 54.17959857, 53.89719907,
       54.22970406, 55.24799291, 54.87367606]), 'std_fit_time': array([0.14960628, 0.18676347, 0.11624541, 0.08971645, 0.28901905,
       0.50591801, 0.08253752, 0.16976867]), 'mean_score_time': array([0.17918523, 0.18772793, 0.18274728, 0.18679643, 0.18584712,
       0.18707935, 0.18606408, 0.18471988]), 'std_score_time': array([0.00160546, 0.00971203, 0.00595984, 0.01027849, 0.00790748,
       0.00520432, 0.00670359, 0.004079  ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02545988, -0.025     , -0.07791413, -0.07029562, -0.02545988,
       -0.025     , -0.0785827 , -0.07103554]), 'split1_test_score': array([-0.02574566, -0.02596035, -0.08652595, -0.09021769, -0.02574566,
       -0.02596035, -0.08005342, -0.09290442]), 'split2_test_score': array([-0.02583516, -0.025     , -0.08450693, -0.09082786, -0.02583516,
       -0.025     , -0.08728789, -0.08846993]), 'mean_test_score': array([-0.02568023, -0.02532012, -0.08298234, -0.08378039, -0.02568023,
       -0.02532012, -0.08197467, -0.08413663]), 'std_test_score': array([0.00016004, 0.00045271, 0.00367733, 0.00953843, 0.00016004,
       0.00045271, 0.00380469, 0.00943911]), 'rank_test_score': array([3, 1, 6, 7, 3, 1, 5, 8], dtype=int32)}
2020-03-19 02:57:25,394 - __main__ - INFO - (4) - BEST_SCORE_: -0.025320115908123875
2020-03-19 02:57:25,400 - __main__ - INFO - (4) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 02:57:25,413 - __main__ - INFO - (5) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 02:57:25,415 - __main__ - INFO - (5) - DATA_REDUCTION_: p
2020-03-19 02:57:25,419 - __main__ - INFO - (5) - DATA_DIMENSION_: 2
2020-03-19 03:20:08,664 - __main__ - INFO - (5) - CV_RESULTS_: {'mean_fit_time': array([53.83710059, 53.83092109, 54.58210619, 54.41408213, 53.90737089,
       53.78307851, 54.0792644 , 54.30895154]), 'std_fit_time': array([0.2091727 , 0.05737183, 0.13124156, 0.40939725, 0.1952981 ,
       0.30082591, 0.2194788 , 0.42495032]), 'mean_score_time': array([0.18342153, 0.190684  , 0.18748379, 0.17889587, 0.18607529,
       0.1818188 , 0.18001652, 0.18064769]), 'std_score_time': array([0.00252853, 0.00738471, 0.01042367, 0.00074017, 0.00650394,
       0.0024827 , 0.00168351, 0.00104703]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00299992, -0.02385279, -0.54910863, -0.54987351, -0.00299992,
       -0.02385279, -0.54910863, -0.54987351]), 'split1_test_score': array([-0.025     , -0.025     , -0.54926696, -0.54995825, -0.025     ,
       -0.025     , -0.54926696, -0.54995825]), 'split2_test_score': array([-0.02544173, -0.0250052 , -0.55473386, -0.55019878, -0.02544173,
       -0.0250052 , -0.55473386, -0.55019878]), 'mean_test_score': array([-0.01781389, -0.02461933, -0.55103648, -0.55001018, -0.01781389,
       -0.02461933, -0.55103648, -0.55001018]), 'std_test_score': array([0.01047661, 0.00054203, 0.00261524, 0.00013777, 0.01047661,
       0.00054203, 0.00261524, 0.00013777]), 'rank_test_score': array([1, 3, 7, 5, 1, 3, 7, 5], dtype=int32)}
2020-03-19 03:20:08,671 - __main__ - INFO - (5) - BEST_SCORE_: -0.017813886131176872
2020-03-19 03:20:08,676 - __main__ - INFO - (5) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 03:20:08,682 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 03:20:08,684 - __main__ - INFO - (6) - DATA_REDUCTION_: p
2020-03-19 03:20:08,685 - __main__ - INFO - (6) - DATA_DIMENSION_: 2
2020-03-19 03:42:42,842 - __main__ - INFO - (6) - CV_RESULTS_: {'mean_fit_time': array([54.27297131, 53.99954907, 53.94790316, 53.67044282, 53.3537662 ,
       53.47770882, 53.66241964, 53.80673925]), 'std_fit_time': array([0.0691521 , 0.5152004 , 0.14580292, 0.27590262, 0.09778837,
       0.3974227 , 0.09754524, 0.26993236]), 'mean_score_time': array([0.1902225 , 0.18071032, 0.18188413, 0.18834909, 0.19255662,
       0.18975107, 0.19086107, 0.18896198]), 'std_score_time': array([0.01481235, 0.00173653, 0.00193782, 0.00901405, 0.01931359,
       0.01079089, 0.00914994, 0.01038895]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.05      , -0.03056789, -0.22378458, -0.56047294, -0.05      ,
       -0.03056789, -0.22676575, -0.56047294]), 'split1_test_score': array([-0.025     , -0.025     , -0.2221882 , -0.55242644, -0.025     ,
       -0.025     , -0.22347213, -0.55242644]), 'split2_test_score': array([-0.025     , -0.025     , -0.21716514, -0.55253257, -0.025     ,
       -0.025     , -0.21889647, -0.55253257]), 'mean_test_score': array([-0.03333333, -0.02685596, -0.22104597, -0.55514398, -0.03333333,
       -0.02685596, -0.22304478, -0.55514398]), 'std_test_score': array([0.01178511, 0.00262473, 0.00282049, 0.00376839, 0.01178511,
       0.00262473, 0.0032268 , 0.00376839]), 'rank_test_score': array([3, 1, 5, 7, 3, 1, 6, 7], dtype=int32)}
2020-03-19 03:42:42,848 - __main__ - INFO - (6) - BEST_SCORE_: -0.026855962283412856
2020-03-19 03:42:42,855 - __main__ - INFO - (6) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 03:42:42,863 - __main__ - INFO - (7) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 03:42:42,864 - __main__ - INFO - (7) - DATA_REDUCTION_: p
2020-03-19 03:42:42,865 - __main__ - INFO - (7) - DATA_DIMENSION_: 2
2020-03-19 04:05:34,775 - __main__ - INFO - (7) - CV_RESULTS_: {'mean_fit_time': array([53.44259445, 53.44843046, 54.66030351, 54.8003366 , 54.57044307,
       54.6343902 , 55.14055212, 54.68599939]), 'std_fit_time': array([0.28887343, 0.1767357 , 0.71354844, 0.16868219, 0.39206181,
       0.15665258, 0.18105943, 0.21281081]), 'mean_score_time': array([0.19195533, 0.18357166, 0.19812743, 0.18845471, 0.19198608,
       0.18240579, 0.18286149, 0.18364255]), 'std_score_time': array([0.01669737, 0.00259497, 0.01589147, 0.00723447, 0.01013491,
       0.0023799 , 0.00144841, 0.00260007]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.55226501, -0.55001023, -0.025     ,
       -0.025     , -0.55226501, -0.55001023]), 'split1_test_score': array([-0.025     , -0.025     , -0.55002941, -0.55      , -0.025     ,
       -0.025     , -0.55002941, -0.55      ]), 'split2_test_score': array([-0.025     , -0.025     , -0.55048058, -0.54997626, -0.025     ,
       -0.025     , -0.55048058, -0.54997626]), 'mean_test_score': array([-0.025     , -0.025     , -0.550925  , -0.54999549, -0.025     ,
       -0.025     , -0.550925  , -0.54999549]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 9.65265752e-04, 1.42301619e-05,
       3.46944695e-18, 3.46944695e-18, 9.65265752e-04, 1.42301619e-05]), 'rank_test_score': array([1, 1, 7, 5, 1, 1, 7, 5], dtype=int32)}
2020-03-19 04:05:34,782 - __main__ - INFO - (7) - BEST_SCORE_: -0.025000000000000005
2020-03-19 04:05:34,783 - __main__ - INFO - (7) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 04:05:34,789 - __main__ - INFO - (8) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 04:05:34,790 - __main__ - INFO - (8) - DATA_REDUCTION_: p
2020-03-19 04:05:34,792 - __main__ - INFO - (8) - DATA_DIMENSION_: 2
2020-03-19 04:28:37,647 - __main__ - INFO - (8) - CV_RESULTS_: {'mean_fit_time': array([54.81315279, 54.97531621, 54.88405943, 54.93368721, 54.09634026,
       54.50339111, 55.88493315, 55.0396746 ]), 'std_fit_time': array([0.20193143, 0.18532753, 0.14923438, 0.23375745, 0.22868763,
       0.46420645, 0.47305296, 0.31322021]), 'mean_score_time': array([0.18315983, 0.18386507, 0.1824592 , 0.18471154, 0.19753075,
       0.19831912, 0.18826048, 0.19314106]), 'std_score_time': array([0.00342451, 0.00167905, 0.00154864, 0.00731575, 0.01366531,
       0.00998006, 0.00709812, 0.01066846]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02858542, -0.025     , -0.07834699, -0.06794273, -0.02858542,
       -0.025     , -0.07933693, -0.06858309]), 'split1_test_score': array([-0.02641272, -0.025     , -0.07644497, -0.07745719, -0.02641272,
       -0.025     , -0.07763342, -0.07829403]), 'split2_test_score': array([-0.03179493, -0.025     , -0.12101743, -0.0929409 , -0.03179493,
       -0.025     , -0.1228666 , -0.08772202]), 'mean_test_score': array([-0.02893102, -0.025     , -0.09193647, -0.07944694, -0.02893102,
       -0.025     , -0.09327898, -0.07819972]), 'std_test_score': array([2.21082835e-03, 3.46944695e-18, 2.05780031e-02, 1.03019869e-02,
       2.21082835e-03, 3.46944695e-18, 2.09331626e-02, 7.81371918e-03]), 'rank_test_score': array([3, 1, 7, 6, 3, 1, 8, 5], dtype=int32)}
2020-03-19 04:28:37,654 - __main__ - INFO - (8) - BEST_SCORE_: -0.025000000000000005
2020-03-19 04:28:37,657 - __main__ - INFO - (8) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 04:28:37,667 - __main__ - INFO - (9) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 04:28:37,669 - __main__ - INFO - (9) - DATA_REDUCTION_: p
2020-03-19 04:28:37,671 - __main__ - INFO - (9) - DATA_DIMENSION_: 2
2020-03-19 04:51:28,466 - __main__ - INFO - (9) - CV_RESULTS_: {'mean_fit_time': array([54.39201999, 53.85133735, 54.67340263, 55.55198812, 54.44238583,
       54.07650487, 53.99553672, 54.25389989]), 'std_fit_time': array([0.30944226, 0.45504358, 0.4677914 , 1.18670968, 0.14619462,
       0.07284176, 0.21613851, 0.27701601]), 'mean_score_time': array([0.19323707, 0.19012753, 0.18664447, 0.18665131, 0.18963885,
       0.18442909, 0.18365542, 0.20178914]), 'std_score_time': array([0.01643113, 0.00683642, 0.00277055, 0.00832844, 0.0104363 ,
       0.00118403, 0.00857455, 0.01216465]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.21501934, -0.34677079, -0.025     ,
       -0.025     , -0.21462933, -0.34674802]), 'split1_test_score': array([-0.02816011, -0.025     , -0.21120412, -0.34011383, -0.02816011,
       -0.025     , -0.21105403, -0.34011383]), 'split2_test_score': array([-0.02844045, -0.025     , -0.25226815, -0.36933157, -0.02844045,
       -0.025     , -0.25284934, -0.36933157]), 'mean_test_score': array([-0.02720019, -0.025     , -0.22616387, -0.35207207, -0.02720019,
       -0.025     , -0.22617757, -0.35206448]), 'std_test_score': array([1.55997194e-03, 3.46944695e-18, 1.85241139e-02, 1.25032453e-02,
       1.55997194e-03, 3.46944695e-18, 1.89161873e-02, 1.25064675e-02]), 'rank_test_score': array([3, 1, 5, 8, 3, 1, 6, 7], dtype=int32)}
2020-03-19 04:51:28,472 - __main__ - INFO - (9) - BEST_SCORE_: -0.025000000000000005
2020-03-19 04:51:28,482 - __main__ - INFO - (9) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 04:51:28,488 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 04:51:28,489 - __main__ - INFO - (10) - DATA_REDUCTION_: p
2020-03-19 04:51:28,490 - __main__ - INFO - (10) - DATA_DIMENSION_: 2
2020-03-19 05:14:23,732 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([55.11435421, 53.78472463, 54.65063008, 55.08485889, 54.07652203,
       54.49855169, 54.93508267, 54.722205  ]), 'std_fit_time': array([0.78223978, 0.32545291, 0.26458063, 0.30204307, 0.28060419,
       0.15580377, 0.1838748 , 0.13616729]), 'mean_score_time': array([0.19101199, 0.19770177, 0.20013992, 0.19621666, 0.18568627,
       0.18555395, 0.1810681 , 0.19626244]), 'std_score_time': array([0.01044199, 0.01577543, 0.01539021, 0.01182151, 0.00929088,
       0.00748594, 0.00140361, 0.0067916 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02087678, -0.02510933, -0.56399509, -0.5537315 , -0.02087678,
       -0.02510933, -0.56399509, -0.5537315 ]), 'split1_test_score': array([-2.85722222e-03, -4.16510853e-04, -5.53337873e-01, -5.50176437e-01,
       -2.85722222e-03, -4.16510853e-04, -5.53337873e-01, -5.50176437e-01]), 'split2_test_score': array([-0.02056897, -0.025     , -0.5630662 , -0.55238759, -0.02056897,
       -0.025     , -0.5630662 , -0.55238759]), 'mean_test_score': array([-0.01476766, -0.01684195, -0.56013305, -0.55209851, -0.01476766,
       -0.01684195, -0.56013305, -0.55209851]), 'std_test_score': array([0.00842289, 0.01161462, 0.00481986, 0.00146567, 0.00842289,
       0.01161462, 0.00481986, 0.00146567]), 'rank_test_score': array([1, 3, 7, 5, 1, 3, 7, 5], dtype=int32)}
2020-03-19 05:14:23,738 - __main__ - INFO - (10) - BEST_SCORE_: -0.01476765575232914
2020-03-19 05:14:23,744 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 05:14:23,749 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 05:14:23,750 - __main__ - INFO - (11) - DATA_REDUCTION_: p
2020-03-19 05:14:23,751 - __main__ - INFO - (11) - DATA_DIMENSION_: 2
2020-03-19 05:37:22,394 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([53.68774001, 54.15496294, 55.39591972, 55.71452014, 54.08917252,
       54.65527026, 54.84239117, 55.136096  ]), 'std_fit_time': array([0.27202953, 0.23043294, 0.45290309, 0.17038578, 0.33300559,
       0.2437129 , 0.34048703, 0.56105826]), 'mean_score_time': array([0.18025168, 0.20263267, 0.19258134, 0.18856454, 0.19729344,
       0.18578474, 0.18396322, 0.19221656]), 'std_score_time': array([0.00225857, 0.01508588, 0.01321895, 0.00948258, 0.01250921,
       0.00302274, 0.00398876, 0.01117339]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.21401967, -0.18828685, -0.025     ,
       -0.025     , -0.2085962 , -0.18330834]), 'split1_test_score': array([-0.02870429, -0.025     , -0.1759326 , -0.16264091, -0.02870429,
       -0.025     , -0.17797858, -0.15933433]), 'split2_test_score': array([-0.02591292, -0.025     , -0.18450319, -0.16813099, -0.02591292,
       -0.025     , -0.18990684, -0.1710876 ]), 'mean_test_score': array([-0.02653907, -0.025     , -0.19148515, -0.17301959, -0.02653907,
       -0.025     , -0.19216054, -0.17124342]), 'std_test_score': array([1.57575217e-03, 3.46944695e-18, 1.63139400e-02, 1.10257995e-02,
       1.57575217e-03, 3.46944695e-18, 1.26007682e-02, 9.78796845e-03]), 'rank_test_score': array([3, 1, 7, 6, 3, 1, 8, 5], dtype=int32)}
2020-03-19 05:37:22,400 - __main__ - INFO - (11) - BEST_SCORE_: -0.025000000000000005
2020-03-19 05:37:22,409 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 05:37:22,415 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 05:37:22,417 - __main__ - INFO - (12) - DATA_REDUCTION_: p
2020-03-19 05:37:22,418 - __main__ - INFO - (12) - DATA_DIMENSION_: 2
2020-03-19 06:00:14,385 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([54.70504379, 54.45338861, 54.83708461, 54.57586018, 54.27617606,
       54.48807279, 54.63187106, 53.84688751]), 'std_fit_time': array([0.49644946, 0.15329236, 0.46917793, 0.44082657, 0.09458219,
       0.09656755, 0.42095036, 0.15012489]), 'mean_score_time': array([0.18820047, 0.18687399, 0.18511184, 0.19467616, 0.197064  ,
       0.1990455 , 0.18217198, 0.18711416]), 'std_score_time': array([0.00663104, 0.0051911 , 0.00426349, 0.01662098, 0.01139994,
       0.01443751, 0.00238106, 0.00484981]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02908532, -0.025     , -0.07034097, -0.05384933, -0.02908532,
       -0.025     , -0.06947417, -0.05573672]), 'split1_test_score': array([-0.025     , -0.025     , -0.03615941, -0.03944463, -0.025     ,
       -0.025     , -0.03953348, -0.04045357]), 'split2_test_score': array([-0.02774303, -0.025     , -0.05588193, -0.05480382, -0.02774303,
       -0.025     , -0.06001426, -0.05122065]), 'mean_test_score': array([-0.02727612, -0.025     , -0.05412744, -0.04936592, -0.02727612,
       -0.025     , -0.05634064, -0.04913698]), 'std_test_score': array([1.70019037e-03, 3.46944695e-18, 1.40096034e-02, 7.02623012e-03,
       1.70019037e-03, 3.46944695e-18, 1.24962104e-02, 6.41092530e-03]), 'rank_test_score': array([3, 1, 7, 6, 3, 1, 8, 5], dtype=int32)}
2020-03-19 06:00:14,391 - __main__ - INFO - (12) - BEST_SCORE_: -0.025000000000000005
2020-03-19 06:00:14,398 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 06:00:14,405 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 06:00:14,407 - __main__ - INFO - (13) - DATA_REDUCTION_: p
2020-03-19 06:00:14,408 - __main__ - INFO - (13) - DATA_DIMENSION_: 2
2020-03-19 06:22:44,939 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([53.22624628, 53.05915046, 54.11963216, 53.72762012, 53.08282852,
       53.34169928, 53.60526323, 54.08203236]), 'std_fit_time': array([0.34985203, 0.17279141, 0.22601138, 0.18250553, 0.08270132,
       0.24773531, 0.26855614, 0.23102007]), 'mean_score_time': array([0.18071453, 0.18785286, 0.20122298, 0.18549331, 0.18477488,
       0.19768325, 0.18258341, 0.20384932]), 'std_score_time': array([0.00151502, 0.00610387, 0.00989807, 0.00419093, 0.00437785,
       0.01161277, 0.00182425, 0.01565984]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01006128, -0.025     , -0.10313508, -0.08191515, -0.01006128,
       -0.025     , -0.09800325, -0.08463092]), 'split1_test_score': array([-0.02777525, -0.02618251, -0.10634541, -0.09562923, -0.02777525,
       -0.02618251, -0.10636525, -0.09360292]), 'split2_test_score': array([-0.01122026, -0.025     , -0.12704992, -0.09913077, -0.01122026,
       -0.025     , -0.12370177, -0.10018812]), 'mean_test_score': array([-0.01635227, -0.02539417, -0.1121768 , -0.09222505, -0.01635227,
       -0.02539417, -0.10935676, -0.09280732]), 'std_test_score': array([0.00809112, 0.00055744, 0.01059823, 0.00742903, 0.00809112,
       0.00055744, 0.0107025 , 0.00637607]), 'rank_test_score': array([1, 3, 8, 5, 1, 3, 7, 6], dtype=int32)}
2020-03-19 06:22:44,945 - __main__ - INFO - (13) - BEST_SCORE_: -0.016352265320950236
2020-03-19 06:22:44,946 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 06:22:44,953 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 06:22:44,955 - __main__ - INFO - (14) - DATA_REDUCTION_: p
2020-03-19 06:22:44,956 - __main__ - INFO - (14) - DATA_DIMENSION_: 2
2020-03-19 06:45:16,685 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([54.12987828, 53.2947375 , 53.8170801 , 53.92320863, 53.23701032,
       53.08543722, 53.57211328, 53.95960943]), 'std_fit_time': array([0.32823419, 0.28341625, 0.27676029, 0.43900897, 0.32552992,
       0.08608756, 0.22409259, 0.15617472]), 'mean_score_time': array([0.18850732, 0.18512146, 0.18563867, 0.1931173 , 0.2059172 ,
       0.17987514, 0.18856565, 0.18052506]), 'std_score_time': array([0.00692627, 0.00808183, 0.0060171 , 0.01884589, 0.01883677,
       0.00152524, 0.0072844 , 0.00229908]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01977151, -0.01362779, -0.07936219, -0.0344751 , -0.01977151,
       -0.01362779, -0.07617817, -0.03967324]), 'split1_test_score': array([-0.01354804, -0.02393708, -0.03555127, -0.01895351, -0.01354804,
       -0.02393708, -0.03820319, -0.02066393]), 'split2_test_score': array([-0.00549619, -0.00019517, -0.05886377, -0.01666472, -0.00549619,
       -0.00019517, -0.05915515, -0.017652  ]), 'mean_test_score': array([-0.01293858, -0.01258668, -0.05792575, -0.02336444, -0.01293858,
       -0.01258668, -0.0578455 , -0.02599639]), 'std_test_score': array([0.00584379, 0.00972051, 0.01789803, 0.00791179, 0.00584379,
       0.00972051, 0.01553085, 0.00974885]), 'rank_test_score': array([3, 1, 8, 5, 3, 1, 7, 6], dtype=int32)}
2020-03-19 06:45:16,691 - __main__ - INFO - (14) - BEST_SCORE_: -0.012586681775120935
2020-03-19 06:45:16,697 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 06:45:16,703 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 06:45:16,705 - __main__ - INFO - (15) - DATA_REDUCTION_: p
2020-03-19 06:45:16,706 - __main__ - INFO - (15) - DATA_DIMENSION_: 2
2020-03-19 07:07:46,776 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([53.31281288, 53.28901815, 54.75008281, 53.64286391, 53.01027298,
       53.35428929, 53.68569096, 53.5868632 ]), 'std_fit_time': array([0.47333391, 0.44118143, 0.43046384, 0.15644206, 0.3356933 ,
       0.25174353, 0.45479012, 0.36875498]), 'mean_score_time': array([0.1906933 , 0.19462641, 0.18287778, 0.18645732, 0.18295352,
       0.19817535, 0.18107764, 0.18926239]), 'std_score_time': array([0.01703699, 0.01137878, 0.0072546 , 0.01065973, 0.00505748,
       0.01460595, 0.00609186, 0.01239195]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.        , -0.        , -0.01732414, -0.01457862, -0.        ,
       -0.        , -0.01693136, -0.0153534 ]), 'split1_test_score': array([-1.94192659e-03, -2.91347873e-05, -7.07841212e-03, -1.27081499e-02,
       -1.94192659e-03, -2.91347873e-05, -8.41797888e-03, -1.29911471e-02]), 'split2_test_score': array([-0.02526617, -0.025     , -0.03386848, -0.0270409 , -0.02526617,
       -0.025     , -0.03488161, -0.02571787]), 'mean_test_score': array([-0.00906937, -0.00834304, -0.01942368, -0.01810922, -0.00906937,
       -0.00834304, -0.02007698, -0.01802081]), 'std_test_score': array([0.01148028, 0.01177825, 0.0110373 , 0.00636165, 0.01148028,
       0.01177825, 0.01103033, 0.00552743]), 'rank_test_score': array([3, 1, 7, 6, 3, 1, 8, 5], dtype=int32)}
2020-03-19 07:07:46,783 - __main__ - INFO - (15) - BEST_SCORE_: -0.008343044929115523
2020-03-19 07:07:46,784 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 07:07:46,790 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 07:07:46,792 - __main__ - INFO - (16) - DATA_REDUCTION_: p
2020-03-19 07:07:46,793 - __main__ - INFO - (16) - DATA_DIMENSION_: 2
2020-03-19 07:30:14,346 - __main__ - INFO - (16) - CV_RESULTS_: {'mean_fit_time': array([52.88787754, 53.13553214, 53.02400343, 53.71302668, 52.76534398,
       53.81993024, 54.64733768, 53.99715225]), 'std_fit_time': array([0.0401856 , 0.42874889, 0.1039955 , 0.22679375, 0.23256473,
       0.79932802, 0.09470161, 0.53816249]), 'mean_score_time': array([0.19333871, 0.18333046, 0.17812943, 0.18772976, 0.18932072,
       0.18756286, 0.20211999, 0.18322341]), 'std_score_time': array([0.01100779, 0.00193774, 0.0012771 , 0.00737174, 0.01245932,
       0.00699195, 0.01521425, 0.00409429]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02622362, -0.025     , -0.11363722, -0.14483412, -0.02622362,
       -0.025     , -0.11226399, -0.14483412]), 'split1_test_score': array([-0.025     , -0.025     , -0.16122142, -0.31702378, -0.025     ,
       -0.025     , -0.16001101, -0.31583021]), 'split2_test_score': array([-0.06216342, -0.025     , -0.19622063, -0.2162336 , -0.06216342,
       -0.025     , -0.19606536, -0.2162336 ]), 'mean_test_score': array([-0.03779568, -0.025     , -0.15702642, -0.2260305 , -0.03779568,
       -0.025     , -0.15611345, -0.22563264]), 'std_test_score': array([1.72378312e-02, 3.46944695e-18, 3.38447769e-02, 7.06366502e-02,
       1.72378312e-02, 3.46944695e-18, 3.43225963e-02, 7.01245177e-02]), 'rank_test_score': array([3, 1, 6, 8, 3, 1, 5, 7], dtype=int32)}
2020-03-19 07:30:14,352 - __main__ - INFO - (16) - BEST_SCORE_: -0.025000000000000005
2020-03-19 07:30:14,363 - __main__ - INFO - (16) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 07:30:14,368 - __main__ - INFO - (17) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 07:30:14,370 - __main__ - INFO - (17) - DATA_REDUCTION_: p
2020-03-19 07:30:14,371 - __main__ - INFO - (17) - DATA_DIMENSION_: 2
2020-03-19 07:52:43,779 - __main__ - INFO - (17) - CV_RESULTS_: {'mean_fit_time': array([53.80498886, 53.20482413, 53.88887707, 53.39700031, 53.29031769,
       52.93066859, 53.83197236, 53.90286167]), 'std_fit_time': array([0.34740023, 0.09511272, 0.39304162, 0.1380204 , 0.25734785,
       0.31880158, 0.22751647, 0.45864948]), 'mean_score_time': array([0.18713291, 0.19701672, 0.18497062, 0.18829568, 0.18453924,
       0.18634804, 0.18526411, 0.19849634]), 'std_score_time': array([0.01000169, 0.01455358, 0.0024471 , 0.00901444, 0.00239126,
       0.00740882, 0.00645953, 0.01514392]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02599415, -0.025     , -0.26465712, -0.55746128, -0.02599415,
       -0.025     , -0.26212458, -0.55746128]), 'split1_test_score': array([-0.05      , -0.05      , -0.2265879 , -0.56156463, -0.05      ,
       -0.05      , -0.22640304, -0.56156463]), 'split2_test_score': array([-0.025     , -0.025     , -0.25638593, -0.55015281, -0.025     ,
       -0.025     , -0.25877284, -0.55015281]), 'mean_test_score': array([-0.03366472, -0.03333333, -0.24921032, -0.55639291, -0.03366472,
       -0.03333333, -0.24910015, -0.55639291]), 'std_test_score': array([0.01155792, 0.01178511, 0.01634897, 0.00471971, 0.01155792,
       0.01178511, 0.01610751, 0.00471971]), 'rank_test_score': array([3, 1, 6, 7, 3, 1, 5, 7], dtype=int32)}
2020-03-19 07:52:43,785 - __main__ - INFO - (17) - BEST_SCORE_: -0.03333333333333333
2020-03-19 07:52:43,794 - __main__ - INFO - (17) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 07:52:43,800 - __main__ - INFO - (18) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 07:52:43,801 - __main__ - INFO - (18) - DATA_REDUCTION_: p
2020-03-19 07:52:43,802 - __main__ - INFO - (18) - DATA_DIMENSION_: 2
2020-03-19 08:15:25,260 - __main__ - INFO - (18) - CV_RESULTS_: {'mean_fit_time': array([54.15073387, 53.09656819, 54.10063306, 56.17125217, 54.32937646,
       53.09336257, 53.65268429, 53.88342921]), 'std_fit_time': array([0.37611978, 0.17114812, 0.54734105, 1.95781158, 1.36394481,
       0.26721428, 0.13120198, 0.08843962]), 'mean_score_time': array([0.18948801, 0.19744261, 0.19605239, 0.19616016, 0.18016752,
       0.18784014, 0.19335723, 0.19387857]), 'std_score_time': array([0.01166365, 0.01304933, 0.01774306, 0.01939856, 0.00118505,
       0.00835211, 0.01845052, 0.00739196]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.03406108, -0.04234397, -0.14102732, -0.13035006, -0.03406108,
       -0.04234397, -0.14089222, -0.12651563]), 'split1_test_score': array([-0.0273041 , -0.02718228, -0.07944281, -0.06661093, -0.0273041 ,
       -0.02718228, -0.08077128, -0.06683534]), 'split2_test_score': array([-0.02352043, -0.025     , -0.09575621, -0.08011112, -0.02352043,
       -0.025     , -0.10262019, -0.08698092]), 'mean_test_score': array([-0.0282952 , -0.03150875, -0.10540878, -0.09235737, -0.0282952 ,
       -0.03150875, -0.10809456, -0.09344396]), 'std_test_score': array([0.0043599 , 0.00771328, 0.02605177, 0.02742441, 0.0043599 ,
       0.00771328, 0.02484765, 0.02478928]), 'rank_test_score': array([1, 3, 7, 5, 1, 3, 8, 6], dtype=int32)}
2020-03-19 08:15:25,266 - __main__ - INFO - (18) - BEST_SCORE_: -0.028295202106902836
2020-03-19 08:15:25,274 - __main__ - INFO - (18) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 08:15:25,280 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 08:15:25,281 - __main__ - INFO - (19) - DATA_REDUCTION_: p
2020-03-19 08:15:25,282 - __main__ - INFO - (19) - DATA_DIMENSION_: 2
2020-03-19 08:38:08,594 - __main__ - INFO - (19) - CV_RESULTS_: {'mean_fit_time': array([53.3103772 , 53.19374291, 54.49626501, 54.46785076, 54.03562689,
       54.24117112, 54.57732908, 54.57532652]), 'std_fit_time': array([0.26695404, 0.19052814, 0.06603859, 0.26260782, 0.39931423,
       0.5225794 , 0.23327063, 0.22522882]), 'mean_score_time': array([0.18868732, 0.19078048, 0.18714396, 0.18173687, 0.18313996,
       0.18916217, 0.18761659, 0.19197122]), 'std_score_time': array([0.00739394, 0.00519339, 0.01289617, 0.00145114, 0.00513058,
       0.01168251, 0.00874333, 0.01054112]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02557016, -0.02661062, -0.08330814, -0.0816011 , -0.02557016,
       -0.02661062, -0.08429677, -0.08088821]), 'split1_test_score': array([-0.0254353 , -0.02657985, -0.05761262, -0.06442613, -0.0254353 ,
       -0.02657985, -0.0558705 , -0.06623664]), 'split2_test_score': array([-0.01638799, -0.025     , -0.06499111, -0.04714329, -0.01638799,
       -0.025     , -0.06444141, -0.04818958]), 'mean_test_score': array([-0.02246448, -0.02606349, -0.06863729, -0.06439018, -0.02246448,
       -0.02606349, -0.06820289, -0.06510481]), 'std_test_score': array([0.00429708, 0.00075211, 0.01080234, 0.01406736, 0.00429708,
       0.00075211, 0.01190588, 0.01337313]), 'rank_test_score': array([1, 3, 8, 5, 1, 3, 7, 6], dtype=int32)}
2020-03-19 08:38:08,604 - __main__ - INFO - (19) - BEST_SCORE_: -0.022464483121900775
2020-03-19 08:38:08,606 - __main__ - INFO - (19) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 08:38:08,611 - __main__ - INFO - (20) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 08:38:08,612 - __main__ - INFO - (20) - DATA_REDUCTION_: p
2020-03-19 08:38:08,613 - __main__ - INFO - (20) - DATA_DIMENSION_: 2
2020-03-19 09:00:58,492 - __main__ - INFO - (20) - CV_RESULTS_: {'mean_fit_time': array([53.97726981, 54.61936696, 54.50819095, 54.87276689, 54.19993369,
       54.0856874 , 54.51445635, 54.21778297]), 'std_fit_time': array([0.13674947, 0.60073011, 0.39098617, 0.08731111, 0.40114581,
       0.12972631, 0.29968541, 0.18236696]), 'mean_score_time': array([0.18420752, 0.18229485, 0.18960444, 0.18618719, 0.18701204,
       0.19418311, 0.1931843 , 0.17901103]), 'std_score_time': array([0.00385758, 0.00217504, 0.0124076 , 0.00577393, 0.00824904,
       0.01032177, 0.01948629, 0.00101082]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.05073547, -0.025     , -0.05469929, -0.05281892, -0.05073547,
       -0.025     , -0.05460812, -0.05122749]), 'split1_test_score': array([-0.05      , -0.02601229, -0.04731808, -0.04141226, -0.05      ,
       -0.02601229, -0.0506232 , -0.04260885]), 'split2_test_score': array([-0.08579308, -0.03961087, -0.09841351, -0.08056648, -0.08579308,
       -0.03961087, -0.09763028, -0.07968545]), 'mean_test_score': array([-0.06217618, -0.03020772, -0.0668103 , -0.05826589, -0.06217618,
       -0.03020772, -0.06762054, -0.0578406 ]), 'std_test_score': array([0.01670237, 0.00666186, 0.0225491 , 0.01644213, 0.01670237,
       0.00666186, 0.02128236, 0.01584232]), 'rank_test_score': array([5, 1, 7, 4, 5, 1, 8, 3], dtype=int32)}
2020-03-19 09:00:58,498 - __main__ - INFO - (20) - BEST_SCORE_: -0.03020771927011
2020-03-19 09:00:58,505 - __main__ - INFO - (20) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 09:00:58,510 - __main__ - INFO - (21) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 09:00:58,511 - __main__ - INFO - (21) - DATA_REDUCTION_: p
2020-03-19 09:00:58,512 - __main__ - INFO - (21) - DATA_DIMENSION_: 2
2020-03-19 09:23:39,419 - __main__ - INFO - (21) - CV_RESULTS_: {'mean_fit_time': array([53.86549258, 53.70120549, 53.97839618, 54.83292095, 53.80069709,
       53.43515293, 53.85836816, 54.39669005]), 'std_fit_time': array([0.14926973, 0.27560832, 0.15265657, 0.46907403, 0.20819774,
       0.21783361, 0.34280164, 0.54785032]), 'mean_score_time': array([0.18319281, 0.19729193, 0.18412161, 0.19223046, 0.19063767,
       0.19700758, 0.18044949, 0.19446747]), 'std_score_time': array([0.00478594, 0.01016246, 0.00450787, 0.01003001, 0.01181696,
       0.01625611, 0.0010921 , 0.01731918]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02701641, -0.025     , -0.56252135, -0.55650846, -0.02701641,
       -0.025     , -0.56252135, -0.55650846]), 'split1_test_score': array([-1.91557315e-04, -7.70096979e-03, -5.48440097e-01, -5.49352556e-01,
       -1.91557315e-04, -7.70096979e-03, -5.48440097e-01, -5.49352556e-01]), 'split2_test_score': array([-0.025     , -0.025     , -0.5507473 , -0.55000713, -0.025     ,
       -0.025     , -0.5507473 , -0.55000713]), 'mean_test_score': array([-0.01740266, -0.01923366, -0.55390291, -0.55195605, -0.01740266,
       -0.01923366, -0.55390291, -0.55195605]), 'std_test_score': array([0.01219789, 0.00815484, 0.00616652, 0.00323012, 0.01219789,
       0.00815484, 0.00616652, 0.00323012]), 'rank_test_score': array([1, 3, 7, 5, 1, 3, 7, 5], dtype=int32)}
2020-03-19 09:23:39,425 - __main__ - INFO - (21) - BEST_SCORE_: -0.017402656376015437
2020-03-19 09:23:39,434 - __main__ - INFO - (21) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 09:23:39,446 - __main__ - INFO - (22) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 09:23:39,447 - __main__ - INFO - (22) - DATA_REDUCTION_: p
2020-03-19 09:23:39,450 - __main__ - INFO - (22) - DATA_DIMENSION_: 2
2020-03-19 09:46:08,920 - __main__ - INFO - (22) - CV_RESULTS_: {'mean_fit_time': array([54.19037437, 54.39136434, 55.58203236, 53.29916064, 52.13637535,
       52.35248319, 53.17000842, 53.33513316]), 'std_fit_time': array([0.0584595 , 0.33111349, 0.4375736 , 0.84639489, 0.27407585,
       0.07454059, 0.3958321 , 0.37338526]), 'mean_score_time': array([0.18860443, 0.18416182, 0.1862402 , 0.19402361, 0.19055231,
       0.19490123, 0.18874764, 0.18509698]), 'std_score_time': array([0.00931075, 0.00209049, 0.00882401, 0.00470432, 0.00758919,
       0.00838422, 0.01550304, 0.00219873]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.03464283, -0.025     , -0.16360897, -0.13391696, -0.03464283,
       -0.025     , -0.1624615 , -0.13540975]), 'split1_test_score': array([-0.04640107, -0.05      , -0.18166803, -0.14961051, -0.04640107,
       -0.05      , -0.1758144 , -0.14876967]), 'split2_test_score': array([-0.04770666, -0.05      , -0.20370663, -0.17374903, -0.04770666,
       -0.05      , -0.20052731, -0.17524339]), 'mean_test_score': array([-0.04291685, -0.04166667, -0.18299454, -0.1524255 , -0.04291685,
       -0.04166667, -0.17960107, -0.15314094]), 'std_test_score': array([0.00587484, 0.01178511, 0.01639665, 0.01638275, 0.00587484,
       0.01178511, 0.01576929, 0.01655316]), 'rank_test_score': array([3, 1, 8, 5, 3, 1, 7, 6], dtype=int32)}
2020-03-19 09:46:08,927 - __main__ - INFO - (22) - BEST_SCORE_: -0.041666666666666664
2020-03-19 09:46:08,930 - __main__ - INFO - (22) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 10:13:45,720 - __main__ - INFO - (23) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 10:13:45,963 - __main__ - INFO - (23) - DATA_REDUCTION_: p
2020-03-19 10:13:45,966 - __main__ - INFO - (23) - DATA_DIMENSION_: 2
2020-03-19 10:37:00,270 - __main__ - INFO - (23) - CV_RESULTS_: {'mean_fit_time': array([54.06594038, 54.54643297, 55.89263527, 55.87053831, 54.9785049 ,
       55.23439884, 56.28214852, 55.87088895]), 'std_fit_time': array([0.53029524, 0.19964449, 0.70396708, 0.36336273, 0.53823289,
       0.36610357, 0.19057682, 0.25264972]), 'mean_score_time': array([0.18715994, 0.19683711, 0.20002484, 0.19336629, 0.19700893,
       0.19861118, 0.19257577, 0.19677432]), 'std_score_time': array([0.00708502, 0.0108637 , 0.01579434, 0.00398852, 0.00673878,
       0.00163945, 0.01117669, 0.00802309]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.03221714, -0.025     , -0.12760376, -0.11022594, -0.03221714,
       -0.025     , -0.12712628, -0.10909992]), 'split1_test_score': array([-0.01790741, -0.025     , -0.027686  , -0.02502843, -0.01790741,
       -0.025     , -0.02510121, -0.02448353]), 'split2_test_score': array([-0.03635505, -0.05      , -0.10092748, -0.09558227, -0.03635505,
       -0.05      , -0.10095136, -0.09585535]), 'mean_test_score': array([-0.02882653, -0.03333333, -0.08540575, -0.07694555, -0.02882653,
       -0.03333333, -0.08439295, -0.0764796 ]), 'std_test_score': array([0.00790363, 0.01178511, 0.04224202, 0.03719453, 0.00790363,
       0.01178511, 0.04326596, 0.03716224]), 'rank_test_score': array([1, 3, 8, 6, 1, 3, 7, 5], dtype=int32)}
2020-03-19 10:37:00,280 - __main__ - INFO - (23) - BEST_SCORE_: -0.028826532691094777
2020-03-19 10:37:00,287 - __main__ - INFO - (23) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 10:37:00,294 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 10:37:00,297 - __main__ - INFO - (24) - DATA_REDUCTION_: p
2020-03-19 10:37:00,298 - __main__ - INFO - (24) - DATA_DIMENSION_: 2
2020-03-19 10:59:49,941 - __main__ - INFO - (24) - CV_RESULTS_: {'mean_fit_time': array([54.24980466, 53.41013559, 54.92804329, 54.51431123, 54.83637571,
       54.09467133, 54.4719255 , 54.39357058]), 'std_fit_time': array([0.47228851, 0.33789101, 0.28063234, 0.37380931, 0.10478573,
       0.12460377, 0.1903949 , 0.0830852 ]), 'mean_score_time': array([0.19695663, 0.18771815, 0.19764105, 0.20613742, 0.20932873,
       0.19166398, 0.18392658, 0.1836648 ]), 'std_score_time': array([0.01665225, 0.00571326, 0.00561164, 0.01706702, 0.01055338,
       0.0123331 , 0.00245742, 0.00126629]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.08775901, -0.07892276, -0.025     ,
       -0.025     , -0.09940049, -0.07617218]), 'split1_test_score': array([-0.03525426, -0.025     , -0.15383854, -0.12000378, -0.03525426,
       -0.025     , -0.15378878, -0.12051219]), 'split2_test_score': array([-0.02607073, -0.025     , -0.08331308, -0.07170546, -0.02607073,
       -0.025     , -0.0759714 , -0.06935332]), 'mean_test_score': array([-0.028775  , -0.025     , -0.10830354, -0.09021067, -0.028775  ,
       -0.025     , -0.10972022, -0.08867923]), 'std_test_score': array([4.60233530e-03, 3.46944695e-18, 3.22492234e-02, 2.12719611e-02,
       4.60233530e-03, 3.46944695e-18, 3.25960997e-02, 2.26807884e-02]), 'rank_test_score': array([3, 1, 7, 6, 3, 1, 8, 5], dtype=int32)}
2020-03-19 10:59:49,947 - __main__ - INFO - (24) - BEST_SCORE_: -0.025000000000000005
2020-03-19 10:59:49,954 - __main__ - INFO - (24) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 10:59:49,959 - __main__ - INFO - (25) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 10:59:49,963 - __main__ - INFO - (25) - DATA_REDUCTION_: p
2020-03-19 10:59:49,965 - __main__ - INFO - (25) - DATA_DIMENSION_: 2
2020-03-19 11:22:42,342 - __main__ - INFO - (25) - CV_RESULTS_: {'mean_fit_time': array([53.70825839, 53.68989277, 54.09919548, 54.23445646, 53.48152049,
       54.1878593 , 55.72632885, 55.90143132]), 'std_fit_time': array([0.35566268, 0.08056108, 0.43176113, 0.10620204, 0.30634866,
       0.50914935, 0.67647208, 0.50796472]), 'mean_score_time': array([0.18695744, 0.18438093, 0.20452197, 0.18727875, 0.19887503,
       0.20964424, 0.18966603, 0.20282531]), 'std_score_time': array([0.00487727, 0.00143316, 0.01582756, 0.00228306, 0.0078398 ,
       0.021251  , 0.00832611, 0.00531553]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.0378823 , -0.025     , -0.0797952 , -0.0675722 , -0.0378823 ,
       -0.025     , -0.07675483, -0.06962546]), 'split1_test_score': array([-0.0516969 , -0.025     , -0.06170322, -0.04659106, -0.0516969 ,
       -0.025     , -0.05982124, -0.04776508]), 'split2_test_score': array([-0.02012033, -0.025     , -0.0198589 , -0.02081529, -0.02012033,
       -0.025     , -0.01901118, -0.02204361]), 'mean_test_score': array([-0.03656651, -0.025     , -0.05378577, -0.04499285, -0.03656651,
       -0.025     , -0.05186242, -0.04647805]), 'std_test_score': array([1.29246138e-02, 3.46944695e-18, 2.51011870e-02, 1.91218511e-02,
       1.29246138e-02, 3.46944695e-18, 2.42361912e-02, 1.94465141e-02]), 'rank_test_score': array([3, 1, 8, 5, 3, 1, 7, 6], dtype=int32)}
2020-03-19 11:22:42,348 - __main__ - INFO - (25) - BEST_SCORE_: -0.025000000000000005
2020-03-19 11:22:42,356 - __main__ - INFO - (25) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 11:22:42,361 - __main__ - INFO - (26) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 11:22:42,363 - __main__ - INFO - (26) - DATA_REDUCTION_: p
2020-03-19 11:22:42,364 - __main__ - INFO - (26) - DATA_DIMENSION_: 2
2020-03-19 11:45:57,422 - __main__ - INFO - (26) - CV_RESULTS_: {'mean_fit_time': array([54.43631419, 54.61393587, 55.18580389, 54.32919892, 54.91802684,
       55.49357994, 56.62291527, 56.66462668]), 'std_fit_time': array([0.40272908, 0.51366839, 0.89943585, 0.1940889 , 0.66542401,
       0.49046121, 0.27984066, 0.35751877]), 'mean_score_time': array([0.19975686, 0.19655371, 0.18571568, 0.18546383, 0.2092979 ,
       0.19972046, 0.20267336, 0.21219826]), 'std_score_time': array([0.00773427, 0.01150665, 0.00578525, 0.00228546, 0.02000843,
       0.0222368 , 0.01598531, 0.01480006]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00920966, -0.01597455, -0.18701474, -0.5490613 , -0.00920966,
       -0.01597455, -0.31908481, -0.5490613 ]), 'split1_test_score': array([-0.0158653 , -0.05      , -0.23609183, -0.56102793, -0.0158653 ,
       -0.05      , -0.23599893, -0.56102793]), 'split2_test_score': array([-0.02184031, -0.02475326, -0.21828379, -0.5506149 , -0.02184031,
       -0.02475326, -0.21427143, -0.5506149 ]), 'mean_test_score': array([-0.01563842, -0.0302426 , -0.21379679, -0.55356804, -0.01563842,
       -0.0302426 , -0.25645173, -0.55356804]), 'std_test_score': array([0.00515894, 0.01442296, 0.0202853 , 0.00531293, 0.00515894,
       0.01442296, 0.04516783, 0.00531293]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 7], dtype=int32)}
2020-03-19 11:45:57,427 - __main__ - INFO - (26) - BEST_SCORE_: -0.015638423426007575
2020-03-19 11:45:57,434 - __main__ - INFO - (26) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 11:45:57,441 - __main__ - INFO - (27) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 11:45:57,442 - __main__ - INFO - (27) - DATA_REDUCTION_: p
2020-03-19 11:45:57,443 - __main__ - INFO - (27) - DATA_DIMENSION_: 2
2020-03-19 12:09:43,928 - __main__ - INFO - (27) - CV_RESULTS_: {'mean_fit_time': array([56.15932767, 56.58992664, 56.28512748, 57.38367256, 56.29818734,
       56.16670934, 56.99150379, 56.96876971]), 'std_fit_time': array([0.11068017, 0.47249772, 0.10773842, 0.22160662, 0.70009162,
       0.28920524, 0.16464357, 0.13120388]), 'mean_score_time': array([0.19747392, 0.2011114 , 0.20062725, 0.19579124, 0.20048745,
       0.18131908, 0.20844444, 0.20250932]), 'std_score_time': array([0.00651835, 0.01748281, 0.0069944 , 0.02157755, 0.01719584,
       0.00346658, 0.02028759, 0.01746172]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02985047, -0.03974751, -0.25091938, -0.36788349, -0.02985047,
       -0.03974751, -0.25271619, -0.36767499]), 'split1_test_score': array([-0.02736209, -0.02717129, -0.22348891, -0.35515472, -0.02736209,
       -0.02717129, -0.21893067, -0.3551846 ]), 'split2_test_score': array([-0.01525211, -0.025     , -0.26657565, -0.36763724, -0.01525211,
       -0.025     , -0.26911975, -0.36760801]), 'mean_test_score': array([-0.02415489, -0.0306396 , -0.24699465, -0.36355849, -0.02415489,
       -0.0306396 , -0.2469222 , -0.3634892 ]), 'std_test_score': array([0.00637666, 0.00650098, 0.01780766, 0.00594321, 0.00637666,
       0.00650098, 0.02089519, 0.0058723 ]), 'rank_test_score': array([1, 3, 6, 8, 1, 3, 5, 7], dtype=int32)}
2020-03-19 12:09:43,933 - __main__ - INFO - (27) - BEST_SCORE_: -0.02415488758155673
2020-03-19 12:09:43,936 - __main__ - INFO - (27) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 12:09:43,943 - __main__ - INFO - (28) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 12:09:43,948 - __main__ - INFO - (28) - DATA_REDUCTION_: p
2020-03-19 12:09:43,950 - __main__ - INFO - (28) - DATA_DIMENSION_: 2
2020-03-19 12:33:09,455 - __main__ - INFO - (28) - CV_RESULTS_: {'mean_fit_time': array([56.04562187, 54.58865786, 55.48608931, 55.59723846, 55.97881571,
       55.54132382, 56.24045197, 56.58879185]), 'std_fit_time': array([0.25119571, 0.19483543, 0.33304951, 0.34650755, 0.23205037,
       0.09094215, 0.29667874, 0.33022472]), 'mean_score_time': array([0.20044629, 0.19685451, 0.20667903, 0.19429898, 0.2045656 ,
       0.20236921, 0.20973794, 0.21780388]), 'std_score_time': array([0.0214823 , 0.01258131, 0.01211069, 0.00858364, 0.01248867,
       0.01431463, 0.01695621, 0.01229348]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02035442, -0.025     , -0.18755251, -0.55639971, -0.02035442,
       -0.025     , -0.18911594, -0.55639971]), 'split1_test_score': array([-0.02767819, -0.025     , -0.1622975 , -0.55345318, -0.02767819,
       -0.025     , -0.15839605, -0.55345318]), 'split2_test_score': array([-0.02500388, -0.025     , -0.25341399, -0.55011878, -0.02500388,
       -0.025     , -0.25007266, -0.55011878]), 'mean_test_score': array([-0.0243455 , -0.025     , -0.201088  , -0.55332389, -0.0243455 ,
       -0.025     , -0.19919488, -0.55332389]), 'std_test_score': array([3.02594566e-03, 3.46944695e-18, 3.84097277e-02, 2.56580477e-03,
       3.02594566e-03, 3.46944695e-18, 3.80993364e-02, 2.56580477e-03]), 'rank_test_score': array([1, 3, 6, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-19 12:33:09,460 - __main__ - INFO - (28) - BEST_SCORE_: -0.024345499101111334
2020-03-19 12:33:09,467 - __main__ - INFO - (28) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 12:33:09,475 - __main__ - INFO - (29) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 12:33:09,476 - __main__ - INFO - (29) - DATA_REDUCTION_: p
2020-03-19 12:33:09,479 - __main__ - INFO - (29) - DATA_DIMENSION_: 2
2020-03-19 12:56:41,458 - __main__ - INFO - (29) - CV_RESULTS_: {'mean_fit_time': array([55.8410097 , 56.24579954, 56.91588346, 56.49615709, 55.40488338,
       55.4296608 , 56.94217054, 55.28230405]), 'std_fit_time': array([0.13862182, 0.04328318, 0.10206803, 0.57897193, 0.25170828,
       0.14403232, 0.52459375, 0.42720167]), 'mean_score_time': array([0.20452889, 0.20401351, 0.19576176, 0.20401271, 0.21099456,
       0.1882658 , 0.18267179, 0.20049063]), 'std_score_time': array([0.00262138, 0.01799684, 0.02024413, 0.00450609, 0.01424605,
       0.00631816, 0.00525459, 0.01727179]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.0259523 , -0.025     , -0.09771536, -0.07973179, -0.0259523 ,
       -0.025     , -0.09342561, -0.08377246]), 'split1_test_score': array([-0.02336097, -0.025     , -0.05436981, -0.04232026, -0.02336097,
       -0.025     , -0.05504805, -0.04045152]), 'split2_test_score': array([-0.025     , -0.025     , -0.07465065, -0.10811817, -0.025     ,
       -0.025     , -0.07369464, -0.10668676]), 'mean_test_score': array([-0.02477109, -0.025     , -0.07557861, -0.07672341, -0.02477109,
       -0.025     , -0.0740561 , -0.07697025]), 'std_test_score': array([1.07021700e-03, 3.46944695e-18, 1.77079096e-02, 2.69459845e-02,
       1.07021700e-03, 3.46944695e-18, 1.56696597e-02, 2.74648802e-02]), 'rank_test_score': array([1, 3, 6, 7, 1, 3, 5, 8], dtype=int32)}
2020-03-19 12:56:41,465 - __main__ - INFO - (29) - BEST_SCORE_: -0.024771089332110575
2020-03-19 12:56:41,469 - __main__ - INFO - (29) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 12:56:41,474 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 12:56:41,476 - __main__ - INFO - (30) - DATA_REDUCTION_: p
2020-03-19 12:56:41,478 - __main__ - INFO - (30) - DATA_DIMENSION_: 2
2020-03-19 13:20:01,568 - __main__ - INFO - (30) - CV_RESULTS_: {'mean_fit_time': array([55.22513247, 55.18767063, 56.16352987, 56.15834983, 55.41140461,
       54.68215656, 55.7391866 , 55.878491  ]), 'std_fit_time': array([0.19374545, 0.40545993, 0.32313813, 0.12029058, 0.03006207,
       0.13665677, 0.23721298, 0.12762043]), 'mean_score_time': array([0.22300323, 0.22014006, 0.20577836, 0.19620021, 0.19059738,
       0.20268305, 0.19204982, 0.19685388]), 'std_score_time': array([0.00254178, 0.00934353, 0.01889206, 0.0104486 , 0.00907624,
       0.01881124, 0.01010036, 0.02170279]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01608048, -0.025     , -0.15319248, -0.55391855, -0.01608048,
       -0.025     , -0.15342799, -0.55391855]), 'split1_test_score': array([-0.0010936 , -0.        , -0.22319129, -0.55006164, -0.0010936 ,
       -0.        , -0.22453285, -0.55006164]), 'split2_test_score': array([-0.02518986, -0.025     , -0.22842942, -0.55121859, -0.02518986,
       -0.025     , -0.22809319, -0.55121859]), 'mean_test_score': array([-0.01412131, -0.01666667, -0.2016044 , -0.55173293, -0.01412131,
       -0.01666667, -0.20201801, -0.55173293]), 'std_test_score': array([0.00993433, 0.01178511, 0.03429912, 0.00161603, 0.00993433,
       0.01178511, 0.03438906, 0.00161603]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 7], dtype=int32)}
2020-03-19 13:20:01,575 - __main__ - INFO - (30) - BEST_SCORE_: -0.01412131491545538
2020-03-19 13:20:01,579 - __main__ - INFO - (30) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 13:20:01,585 - __main__ - INFO - (31) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 13:20:01,586 - __main__ - INFO - (31) - DATA_REDUCTION_: p
2020-03-19 13:20:01,587 - __main__ - INFO - (31) - DATA_DIMENSION_: 2
2020-03-19 13:43:23,652 - __main__ - INFO - (31) - CV_RESULTS_: {'mean_fit_time': array([56.54957835, 56.51510843, 56.67570567, 56.00087126, 54.01435335,
       54.2684315 , 54.90350374, 55.49399249]), 'std_fit_time': array([1.11048143, 0.49790617, 0.36934735, 0.8007044 , 0.12485946,
       0.33296989, 0.28559525, 0.11509177]), 'mean_score_time': array([0.1859285 , 0.19176428, 0.18972667, 0.20341277, 0.19665917,
       0.20289413, 0.20034536, 0.1878883 ]), 'std_score_time': array([0.00352608, 0.00390472, 0.00431821, 0.00732408, 0.01897483,
       0.01389326, 0.01602633, 0.00037134]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02500719, -0.025     , -0.25729454, -0.5500811 , -0.02500719,
       -0.025     , -0.25608886, -0.5500811 ]), 'split1_test_score': array([-0.01952919, -0.02840662, -0.27620218, -0.56337815, -0.01952919,
       -0.02840662, -0.27595526, -0.56337815]), 'split2_test_score': array([-0.01571023, -0.025     , -0.27918767, -0.55710977, -0.01571023,
       -0.025     , -0.28182957, -0.55710977]), 'mean_test_score': array([-0.0200822 , -0.02613554, -0.2708948 , -0.55685634, -0.0200822 ,
       -0.02613554, -0.27129123, -0.55685634]), 'std_test_score': array([0.00381556, 0.00160589, 0.00969376, 0.00543146, 0.00381556,
       0.00160589, 0.01101396, 0.00543146]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 7], dtype=int32)}
2020-03-19 13:43:23,658 - __main__ - INFO - (31) - BEST_SCORE_: -0.020082200825268907
2020-03-19 13:43:23,665 - __main__ - INFO - (31) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 13:43:23,676 - __main__ - INFO - (32) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 13:43:23,677 - __main__ - INFO - (32) - DATA_REDUCTION_: p
2020-03-19 13:43:23,678 - __main__ - INFO - (32) - DATA_DIMENSION_: 2
2020-03-19 14:06:52,322 - __main__ - INFO - (32) - CV_RESULTS_: {'mean_fit_time': array([56.42842491, 56.39882708, 54.95432258, 54.91310302, 54.67964125,
       56.85813332, 55.5686729 , 56.73835063]), 'std_fit_time': array([0.38682871, 0.40609016, 0.25111852, 0.29142786, 0.77042393,
       0.58706897, 0.63949547, 1.13336581]), 'mean_score_time': array([0.20440499, 0.19560568, 0.18547964, 0.18792812, 0.18286729,
       0.19321799, 0.18370175, 0.18876918]), 'std_score_time': array([0.01876467, 0.00583662, 0.00368789, 0.00432626, 0.00193076,
       0.01256996, 0.00344022, 0.00558814]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00574642, -0.025     , -0.33000809, -0.54954432, -0.00574642,
       -0.025     , -0.33000809, -0.54954432]), 'split1_test_score': array([-0.        , -0.025     , -0.3231561 , -0.54856018, -0.        ,
       -0.025     , -0.5497186 , -0.54856018]), 'split2_test_score': array([-0.02610527, -0.025     , -0.36848072, -0.55082803, -0.02610527,
       -0.025     , -0.36848072, -0.55082803]), 'mean_test_score': array([-0.01061723, -0.025     , -0.3405483 , -0.54964418, -0.01061723,
       -0.025     , -0.41606914, -0.54964418]), 'std_test_score': array([1.12001471e-02, 3.46944695e-18, 1.99483073e-02, 9.28536032e-04,
       1.12001471e-02, 3.46944695e-18, 9.58007274e-02, 9.28536032e-04]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 7], dtype=int32)}
2020-03-19 14:06:52,328 - __main__ - INFO - (32) - BEST_SCORE_: -0.010617231278800257
2020-03-19 14:06:52,329 - __main__ - INFO - (32) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 14:06:52,337 - __main__ - INFO - (33) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 14:06:52,339 - __main__ - INFO - (33) - DATA_REDUCTION_: p
2020-03-19 14:06:52,344 - __main__ - INFO - (33) - DATA_DIMENSION_: 2
2020-03-19 14:30:36,991 - __main__ - INFO - (33) - CV_RESULTS_: {'mean_fit_time': array([57.55419429, 57.02973135, 56.85038225, 55.60728709, 55.27972205,
       55.63928191, 57.20363084, 56.79350718]), 'std_fit_time': array([0.33481654, 0.32571593, 0.37285619, 0.60820903, 0.71305493,
       0.92292369, 0.04788489, 0.19924418]), 'mean_score_time': array([0.20128361, 0.20797547, 0.20192552, 0.20401088, 0.18890842,
       0.2088387 , 0.20209551, 0.21263599]), 'std_score_time': array([0.00513043, 0.01463987, 0.01782637, 0.01353904, 0.00785514,
       0.01060085, 0.01247065, 0.01156022]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00192731, -0.00098221, -0.55409249, -0.5486664 , -0.00192731,
       -0.00098221, -0.55409249, -0.5486664 ]), 'split1_test_score': array([-0.00101341, -0.00111881, -0.54869048, -0.54843751, -0.00101341,
       -0.00111881, -0.54869048, -0.54843751]), 'split2_test_score': array([-0.025     , -0.01555328, -0.56197661, -0.55910993, -0.025     ,
       -0.01555328, -0.56197661, -0.55910993]), 'mean_test_score': array([-0.00931357, -0.00588477, -0.55491986, -0.55207128, -0.00931357,
       -0.00588477, -0.55491986, -0.55207128]), 'std_test_score': array([0.01109825, 0.0068369 , 0.0054555 , 0.00497796, 0.01109825,
       0.0068369 , 0.0054555 , 0.00497796]), 'rank_test_score': array([3, 1, 7, 5, 3, 1, 7, 5], dtype=int32)}
2020-03-19 14:30:36,997 - __main__ - INFO - (33) - BEST_SCORE_: -0.005884765582078243
2020-03-19 14:30:37,000 - __main__ - INFO - (33) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 14:30:37,005 - __main__ - INFO - (34) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 14:30:37,008 - __main__ - INFO - (34) - DATA_REDUCTION_: p
2020-03-19 14:30:37,014 - __main__ - INFO - (34) - DATA_DIMENSION_: 2
2020-03-19 14:54:29,216 - __main__ - INFO - (34) - CV_RESULTS_: {'mean_fit_time': array([56.12247856, 56.29328251, 57.0928216 , 57.13359499, 56.21604991,
       56.28744562, 57.07287653, 57.94964115]), 'std_fit_time': array([0.06136581, 0.50983266, 0.43874248, 0.24597823, 0.54940029,
       0.10140719, 0.24757314, 0.41822293]), 'mean_score_time': array([0.19670177, 0.20387475, 0.20160596, 0.20681016, 0.1941282 ,
       0.19932715, 0.20312945, 0.1990118 ]), 'std_score_time': array([0.0133389 , 0.00844537, 0.0109818 , 0.01763088, 0.01130595,
       0.01855758, 0.01362665, 0.02204663]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.02621217, -0.0273921 , -0.025     ,
       -0.025     , -0.02629695, -0.0271544 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.02938659, -0.033614  , -0.025     ,
       -0.025     , -0.02893575, -0.03209433]), 'split2_test_score': array([-0.02626137, -0.025     , -0.04979809, -0.04143029, -0.02626137,
       -0.025     , -0.04508032, -0.04337874]), 'mean_test_score': array([-0.02542046, -0.025     , -0.03513228, -0.03414547, -0.02542046,
       -0.025     , -0.03343768, -0.03420916]), 'std_test_score': array([5.94614834e-04, 3.46944695e-18, 1.04509538e-02, 5.74337469e-03,
       5.94614834e-04, 3.46944695e-18, 8.30278067e-03, 6.79027070e-03]), 'rank_test_score': array([3, 1, 8, 6, 3, 1, 5, 7], dtype=int32)}
2020-03-19 14:54:29,223 - __main__ - INFO - (34) - BEST_SCORE_: -0.025000000000000005
2020-03-19 14:54:29,226 - __main__ - INFO - (34) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 14:54:29,232 - __main__ - INFO - (35) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 14:54:29,234 - __main__ - INFO - (35) - DATA_REDUCTION_: p
2020-03-19 14:54:29,236 - __main__ - INFO - (35) - DATA_DIMENSION_: 2
2020-03-19 15:18:26,687 - __main__ - INFO - (35) - CV_RESULTS_: {'mean_fit_time': array([56.9683574 , 56.62738077, 57.11728207, 56.81277474, 56.84833781,
       56.48821274, 57.18334746, 58.06890678]), 'std_fit_time': array([0.24303125, 0.29407898, 0.14937089, 0.36282855, 0.39554037,
       0.30664589, 0.22011501, 0.49107222]), 'mean_score_time': array([0.21011464, 0.20405308, 0.21269306, 0.20682772, 0.190581  ,
       0.20789886, 0.20968382, 0.19898423]), 'std_score_time': array([0.01028572, 0.00649684, 0.00657579, 0.01777457, 0.00674253,
       0.00960094, 0.00495339, 0.00883672]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-1.47652255e-02, -6.94534583e-05, -2.37699640e-01, -5.59022883e-01,
       -1.47652255e-02, -6.94534583e-05, -2.37699640e-01, -5.59022883e-01]), 'split1_test_score': array([-0.03112235, -0.025     , -0.23980882, -0.55624135, -0.03112235,
       -0.025     , -0.23980882, -0.55624135]), 'split2_test_score': array([-0.00504763, -0.025     , -0.1985702 , -0.54920426, -0.00504763,
       -0.025     , -0.19731152, -0.54920426]), 'mean_test_score': array([-0.0169784 , -0.01668982, -0.22535955, -0.55482283, -0.0169784 ,
       -0.01668982, -0.22493999, -0.55482283]), 'std_test_score': array([0.01075938, 0.01175237, 0.01896249, 0.00413203, 0.01075938,
       0.01175237, 0.01955525, 0.00413203]), 'rank_test_score': array([3, 1, 6, 7, 3, 1, 5, 7], dtype=int32)}
2020-03-19 15:18:26,693 - __main__ - INFO - (35) - BEST_SCORE_: -0.016689817819434564
2020-03-19 15:18:26,698 - __main__ - INFO - (35) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 15:18:26,704 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 15:18:26,706 - __main__ - INFO - (36) - DATA_REDUCTION_: p
2020-03-19 15:18:26,707 - __main__ - INFO - (36) - DATA_DIMENSION_: 2
2020-03-19 15:42:39,879 - __main__ - INFO - (36) - CV_RESULTS_: {'mean_fit_time': array([57.9862237 , 57.75323089, 59.04974389, 57.80842519, 57.42555761,
       56.88984815, 57.08802509, 57.61435827]), 'std_fit_time': array([0.46318933, 0.29732116, 0.4999035 , 0.18912233, 0.23377428,
       0.28252549, 0.58870918, 0.19630613]), 'mean_score_time': array([0.20236301, 0.20439029, 0.21263631, 0.19728557, 0.2088422 ,
       0.19627754, 0.19828749, 0.19756444]), 'std_score_time': array([0.00277519, 0.00859092, 0.01356021, 0.0153712 , 0.01858731,
       0.01050401, 0.0142143 , 0.02010154]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00431127, -0.025     , -0.19161625, -0.55809773, -0.00431127,
       -0.025     , -0.19138288, -0.55809773]), 'split1_test_score': array([-0.03507191, -0.05      , -0.13254635, -0.558944  , -0.03507191,
       -0.05      , -0.13001962, -0.558944  ]), 'split2_test_score': array([-0.00462036, -0.02016853, -0.18368914, -0.56125172, -0.00462036,
       -0.02016853, -0.17813604, -0.56125172]), 'mean_test_score': array([-0.01466785, -0.03172284, -0.16928391, -0.55943115, -0.01466785,
       -0.03172284, -0.16651285, -0.55943115]), 'std_test_score': array([0.0144284 , 0.01307355, 0.02617819, 0.00133289, 0.0144284 ,
       0.01307355, 0.02636521, 0.00133289]), 'rank_test_score': array([1, 3, 6, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-19 15:42:39,885 - __main__ - INFO - (36) - BEST_SCORE_: -0.014667848197122238
2020-03-19 15:42:39,894 - __main__ - INFO - (36) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 15:42:39,900 - __main__ - INFO - (37) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 15:42:39,901 - __main__ - INFO - (37) - DATA_REDUCTION_: p
2020-03-19 15:42:39,902 - __main__ - INFO - (37) - DATA_DIMENSION_: 2
2020-03-19 16:06:44,830 - __main__ - INFO - (37) - CV_RESULTS_: {'mean_fit_time': array([56.3716259 , 56.78965735, 58.12527792, 57.98815799, 57.28107691,
       57.57364511, 57.19023037, 57.40040326]), 'std_fit_time': array([1.11002842, 0.5406778 , 0.29776118, 0.1382665 , 0.14419018,
       0.30848458, 0.15321538, 0.20515421]), 'mean_score_time': array([0.19317857, 0.21831067, 0.19090557, 0.20242715, 0.18277431,
       0.19407741, 0.19689361, 0.2181685 ]), 'std_score_time': array([0.01229609, 0.00519656, 0.01011792, 0.01630612, 0.00509209,
       0.00959   , 0.01503849, 0.00660513]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01895445, -0.025     , -0.1054211 , -0.09446045, -0.01895445,
       -0.025     , -0.10540676, -0.09589167]), 'split1_test_score': array([-0.02733267, -0.02863891, -0.31163183, -0.56249196, -0.02733267,
       -0.02863891, -0.31162862, -0.56249196]), 'split2_test_score': array([-0.02627743, -0.025     , -0.09494233, -0.08592437, -0.02627743,
       -0.025     , -0.09498648, -0.08470595]), 'mean_test_score': array([-0.02418818, -0.02621297, -0.17066509, -0.2476256 , -0.02418818,
       -0.02621297, -0.17067396, -0.24769653]), 'std_test_score': array([0.00372579, 0.0017154 , 0.0997703 , 0.22267142, 0.00372579,
       0.0017154 , 0.09976074, 0.22264082]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 8], dtype=int32)}
2020-03-19 16:06:44,836 - __main__ - INFO - (37) - BEST_SCORE_: -0.024188183020547118
2020-03-19 16:06:44,840 - __main__ - INFO - (37) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-19 16:06:44,845 - __main__ - INFO - (38) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 16:06:44,846 - __main__ - INFO - (38) - DATA_REDUCTION_: p
2020-03-19 16:06:44,848 - __main__ - INFO - (38) - DATA_DIMENSION_: 2
2020-03-19 16:30:29,859 - __main__ - INFO - (38) - CV_RESULTS_: {'mean_fit_time': array([56.84570162, 57.23978329, 57.58121276, 57.37824019, 55.17429026,
       55.64230704, 55.85597316, 56.37512811]), 'std_fit_time': array([0.13380738, 0.19172828, 0.12062777, 0.06940067, 0.36945489,
       0.62428583, 0.19046379, 0.83476288]), 'mean_score_time': array([0.22449501, 0.20311761, 0.20597037, 0.19594614, 0.18200652,
       0.19255273, 0.20231016, 0.19398451]), 'std_score_time': array([0.00063384, 0.01632123, 0.01652108, 0.01556304, 0.00222054,
       0.01048437, 0.01525062, 0.00822263]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.04312987, -0.025     , -0.58521217, -0.56826623, -0.04312987,
       -0.025     , -0.58521217, -0.56826623]), 'split1_test_score': array([-0.01525127, -0.025     , -0.55603176, -0.55182448, -0.01525127,
       -0.025     , -0.55603176, -0.55182448]), 'split2_test_score': array([-0.02408275, -0.025     , -0.55997289, -0.55478052, -0.02408275,
       -0.025     , -0.55997289, -0.55478052]), 'mean_test_score': array([-0.02748796, -0.025     , -0.56707227, -0.55829041, -0.02748796,
       -0.025     , -0.56707227, -0.55829041]), 'std_test_score': array([1.16333058e-02, 3.46944695e-18, 1.29273616e-02, 7.15645491e-03,
       1.16333058e-02, 3.46944695e-18, 1.29273616e-02, 7.15645491e-03]), 'rank_test_score': array([3, 1, 7, 5, 3, 1, 7, 5], dtype=int32)}
2020-03-19 16:30:29,866 - __main__ - INFO - (38) - BEST_SCORE_: -0.025000000000000005
2020-03-19 16:30:29,872 - __main__ - INFO - (38) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-03-19 16:30:29,885 - __main__ - INFO - (39) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-19 16:30:29,887 - __main__ - INFO - (39) - DATA_REDUCTION_: p
2020-03-19 16:30:29,888 - __main__ - INFO - (39) - DATA_DIMENSION_: 2
2020-03-19 16:54:47,290 - __main__ - INFO - (39) - CV_RESULTS_: {'mean_fit_time': array([56.66491969, 57.72147775, 58.69766863, 58.38712883, 57.30401516,
       56.84225043, 58.2731336 , 58.82126077]), 'std_fit_time': array([0.34848834, 0.26582835, 0.09675442, 0.33184186, 0.2839652 ,
       0.16776887, 0.37064818, 0.70830591]), 'mean_score_time': array([0.20916621, 0.21124593, 0.20513844, 0.20542653, 0.19129618,
       0.18982959, 0.21051423, 0.20862261]), 'std_score_time': array([0.00574102, 0.01931212, 0.01813919, 0.01502075, 0.00120426,
       0.00972463, 0.0185434 , 0.02137378]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.0413582 , -0.025     , -0.18155148, -0.15765517, -0.0413582 ,
       -0.025     , -0.18219946, -0.15757673]), 'split1_test_score': array([-0.01940252, -0.025     , -0.07770633, -0.06054035, -0.01940252,
       -0.025     , -0.08341973, -0.05819314]), 'split2_test_score': array([-0.02507252, -0.025     , -0.17503121, -0.55143731, -0.02507252,
       -0.025     , -0.17450549, -0.55143731]), 'mean_test_score': array([-0.02861108, -0.025     , -0.14476301, -0.25654428, -0.02861108,
       -0.025     , -0.14670822, -0.25573573]), 'std_test_score': array([9.30605751e-03, 3.46944695e-18, 4.74908874e-02, 2.12256524e-01,
       9.30605751e-03, 3.46944695e-18, 4.48618210e-02, 2.12992715e-01]), 'rank_test_score': array([3, 1, 5, 8, 3, 1, 6, 7], dtype=int32)}
2020-03-19 16:54:47,296 - __main__ - INFO - (39) - BEST_SCORE_: -0.025000000000000005
2020-03-19 16:54:47,299 - __main__ - INFO - (39) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}