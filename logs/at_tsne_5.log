2020-03-20 10:37:22,739 - __main__ - INFO - (0) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:37:22,877 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:37:22,879 - __main__ - INFO - (0) - DATA_REDUCTION_: t
2020-03-20 10:37:22,883 - __main__ - INFO - (0) - DATA_DIMENSION_: 5
2020-03-20 11:00:57,886 - __main__ - INFO - (0) - CV_RESULTS_: {'mean_fit_time': array([55.31049705, 56.03659749, 56.08255426, 56.3199122 , 56.27910082,
       56.42068402, 56.12951112, 56.71532273]), 'std_fit_time': array([0.33278938, 0.18164966, 0.05876644, 0.13079489, 0.38823276,
       0.13222346, 0.11367095, 0.26216932]), 'mean_score_time': array([0.18605073, 0.19371827, 0.18438228, 0.18850104, 0.18527675,
       0.18601155, 0.18568818, 0.1883316 ]), 'std_score_time': array([0.00263289, 0.00942093, 0.00068109, 0.00150883, 0.00246814,
       0.00158173, 0.00174267, 0.00232001]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01865554, -0.025     , -0.54970454, -0.55      , -0.01865554,
       -0.025     , -0.54970454, -0.55      ]), 'split1_test_score': array([-0.02183246, -0.025     , -0.54983493, -0.55      , -0.02183246,
       -0.025     , -0.54983493, -0.55      ]), 'split2_test_score': array([-0.00296942, -0.02156062, -0.54878468, -0.54978536, -0.00296942,
       -0.02156062, -0.54878468, -0.54978536]), 'mean_test_score': array([-0.01448581, -0.02385354, -0.54944138, -0.54992845, -0.01448581,
       -0.02385354, -0.54944138, -0.54992845]), 'std_test_score': array([0.00824595, 0.00162134, 0.0004674 , 0.00010118, 0.00824595,
       0.00162134, 0.0004674 , 0.00010118]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 11:00:57,899 - __main__ - INFO - (0) - BEST_SCORE_: -0.014485805157331347
2020-03-20 11:00:57,908 - __main__ - INFO - (0) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:03:46,808 - __main__ - INFO - (0) - NESTED CROSS VALIDATION with 3 fold: [-0.01865554 -0.02183246 -0.00296942]
2020-03-20 11:03:46,809 - __main__ - INFO - (0) - NESTED CROSS VALIDATION (mean): -0.014485805157331347
2020-03-20 11:03:46,813 - __main__ - INFO - (1) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:03:46,817 - __main__ - INFO - (1) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:03:46,821 - __main__ - INFO - (1) - DATA_REDUCTION_: t
2020-03-20 11:03:46,823 - __main__ - INFO - (1) - DATA_DIMENSION_: 5
2020-03-20 11:27:24,859 - __main__ - INFO - (1) - CV_RESULTS_: {'mean_fit_time': array([55.88123782, 55.73931742, 56.41760937, 56.39963826, 55.82609582,
       56.14526542, 56.93425854, 56.99562581]), 'std_fit_time': array([0.05543767, 0.14112153, 0.21018411, 0.32139905, 0.31488083,
       0.07968896, 0.17678378, 0.45680836]), 'mean_score_time': array([0.18872205, 0.18895952, 0.18524885, 0.18739057, 0.18669399,
       0.18811766, 0.18790889, 0.19243177]), 'std_score_time': array([0.00401664, 0.00237952, 0.0010352 , 0.00138316, 0.00207311,
       0.00062226, 0.00247554, 0.00276424]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00252673, -0.02446361, -0.54880594, -0.54997004, -0.00252673,
       -0.02446361, -0.54880594, -0.54997004]), 'split1_test_score': array([-0.00602731, -0.02476914, -0.5490257 , -0.54998641, -0.00602731,
       -0.02476914, -0.5490257 , -0.54998641]), 'split2_test_score': array([-0.01719419, -0.025     , -0.54964484, -0.55      , -0.01719419,
       -0.025     , -0.54964484, -0.55      ]), 'mean_test_score': array([-0.00858274, -0.02474425, -0.54915883, -0.54998548, -0.00858274,
       -0.02474425, -0.54915883, -0.54998548]), 'std_test_score': array([6.25466431e-03, 2.19684438e-04, 3.55178792e-04, 1.22462172e-05,
       6.25466431e-03, 2.19684438e-04, 3.55178792e-04, 1.22462172e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 11:27:24,865 - __main__ - INFO - (1) - BEST_SCORE_: -0.008582744220701585
2020-03-20 11:27:24,866 - __main__ - INFO - (1) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:30:13,422 - __main__ - INFO - (1) - NESTED CROSS VALIDATION with 3 fold: [-0.00252673 -0.00602731 -0.01719419]
2020-03-20 11:30:13,424 - __main__ - INFO - (1) - NESTED CROSS VALIDATION (mean): -0.008582744220701585
2020-03-20 11:30:13,425 - __main__ - INFO - (2) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:30:13,433 - __main__ - INFO - (2) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:30:13,434 - __main__ - INFO - (2) - DATA_REDUCTION_: t
2020-03-20 11:30:13,436 - __main__ - INFO - (2) - DATA_DIMENSION_: 5
2020-03-20 11:53:48,834 - __main__ - INFO - (2) - CV_RESULTS_: {'mean_fit_time': array([55.98363566, 55.84889801, 56.04543972, 56.39376616, 55.80542541,
       55.68826429, 56.87827222, 56.6876332 ]), 'std_fit_time': array([0.27258775, 0.07807284, 0.04296716, 0.23223205, 0.10973922,
       0.23137791, 0.44985867, 0.10397857]), 'mean_score_time': array([0.18386722, 0.18786581, 0.18600909, 0.18468269, 0.18515412,
       0.19413511, 0.18527691, 0.18890182]), 'std_score_time': array([0.00124093, 0.00181095, 0.00122693, 0.00327364, 0.00263514,
       0.0109575 , 0.00111251, 0.00409789]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00313021, -0.02379173, -0.01228092, -0.01320421, -0.00313021,
       -0.02379173, -0.01283218, -0.01295413]), 'split1_test_score': array([-0.00355368, -0.02285016, -0.01049003, -0.0126012 , -0.00355368,
       -0.02285016, -0.01019498, -0.01288183]), 'split2_test_score': array([-0.        , -0.025     , -0.02048881, -0.02458646, -0.        ,
       -0.025     , -0.01966384, -0.02465714]), 'mean_test_score': array([-0.00222796, -0.02388063, -0.01441992, -0.01679729, -0.00222796,
       -0.02388063, -0.01423033, -0.01683103]), 'std_test_score': array([0.00158487, 0.00087992, 0.00435319, 0.00551327, 0.00158487,
       0.00087992, 0.00399007, 0.00553397]), 'rank_test_score': array([1, 7, 4, 5, 1, 7, 3, 6], dtype=int32)}
2020-03-20 11:53:48,840 - __main__ - INFO - (2) - BEST_SCORE_: -0.0022279640592680126
2020-03-20 11:53:48,844 - __main__ - INFO - (2) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:56:36,323 - __main__ - INFO - (2) - NESTED CROSS VALIDATION with 3 fold: [-0.00313021 -0.00355368 -0.        ]
2020-03-20 11:56:36,325 - __main__ - INFO - (2) - NESTED CROSS VALIDATION (mean): -0.0022279640592680126
2020-03-20 11:56:36,331 - __main__ - INFO - (3) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:56:36,333 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:56:36,334 - __main__ - INFO - (3) - DATA_REDUCTION_: t
2020-03-20 11:56:36,335 - __main__ - INFO - (3) - DATA_DIMENSION_: 5
2020-03-20 12:19:54,068 - __main__ - INFO - (3) - CV_RESULTS_: {'mean_fit_time': array([55.21674299, 54.97624795, 55.63242404, 55.44227401, 54.35050384,
       54.27669326, 57.07188384, 56.12008286]), 'std_fit_time': array([0.31968634, 0.12481817, 0.06231562, 0.48194957, 0.12956193,
       0.17063777, 0.71851546, 0.31872239]), 'mean_score_time': array([0.18621524, 0.18485888, 0.18385696, 0.18512511, 0.1848406 ,
       0.1840984 , 0.18584967, 0.18300764]), 'std_score_time': array([0.00168962, 0.00173549, 0.00105515, 0.00197968, 0.00132563,
       0.00135273, 0.00180709, 0.00176932]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00000000e+00, -3.62558955e-03, -1.21788857e-04, -5.48793911e-01,
       -0.00000000e+00, -3.62558955e-03, -1.21445074e-04, -5.48793911e-01]), 'split1_test_score': array([-0.00908012, -0.02494589, -0.00086858, -0.54999034, -0.00908012,
       -0.02494589, -0.0008686 , -0.54999034]), 'split2_test_score': array([-0.02373571, -0.025     , -0.00149865, -0.55      , -0.02373571,
       -0.025     , -0.00149865, -0.55      ]), 'mean_test_score': array([-0.01093861, -0.01785716, -0.00082967, -0.54959475, -0.01093861,
       -0.01785716, -0.00082957, -0.54959475]), 'std_test_score': array([0.00977877, 0.01006326, 0.00056278, 0.00056629, 0.00977877,
       0.01006326, 0.00056292, 0.00056629]), 'rank_test_score': array([3, 5, 2, 7, 3, 5, 1, 7], dtype=int32)}
2020-03-20 12:19:54,078 - __main__ - INFO - (3) - BEST_SCORE_: -0.0008295651903133774
2020-03-20 12:19:54,083 - __main__ - INFO - (3) - BEST_PARAMS_: {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:22:44,777 - __main__ - INFO - (3) - NESTED CROSS VALIDATION with 3 fold: [-0.00012154 -0.00086858 -0.0014987 ]
2020-03-20 12:22:44,779 - __main__ - INFO - (3) - NESTED CROSS VALIDATION (mean): -0.0008296068997120506
2020-03-20 12:22:44,781 - __main__ - INFO - (4) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:22:44,787 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:22:44,796 - __main__ - INFO - (4) - DATA_REDUCTION_: t
2020-03-20 12:22:44,798 - __main__ - INFO - (4) - DATA_DIMENSION_: 5
2020-03-20 12:46:20,558 - __main__ - INFO - (4) - CV_RESULTS_: {'mean_fit_time': array([56.54165363, 55.89442913, 56.49678485, 56.51858711, 55.82758427,
       55.64867918, 56.25377464, 56.37120509]), 'std_fit_time': array([0.15488375, 0.1781298 , 0.13762398, 0.13671022, 0.087096  ,
       0.05052019, 0.09029651, 0.07880843]), 'mean_score_time': array([0.18675494, 0.18805416, 0.18869297, 0.18554576, 0.1859026 ,
       0.18759799, 0.1874481 , 0.18672156]), 'std_score_time': array([0.00158146, 0.00086764, 0.00400045, 0.00118127, 0.00054306,
       0.00280968, 0.00101077, 0.00228612]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00299165, -0.01731662, -0.54892817, -0.54963152, -0.00299165,
       -0.01731662, -0.54892817, -0.54963152]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.        , -0.        , -0.54867943, -0.54854715, -0.        ,
       -0.        , -0.54867943, -0.54854715]), 'mean_test_score': array([-0.00933055, -0.01410554, -0.54920253, -0.54939289, -0.00933055,
       -0.01410554, -0.54920253, -0.54939289]), 'std_test_score': array([0.01114708, 0.01045572, 0.00057296, 0.00061666, 0.01114708,
       0.01045572, 0.00057296, 0.00061666]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 12:46:20,563 - __main__ - INFO - (4) - BEST_SCORE_: -0.009330550058333194
2020-03-20 12:46:20,564 - __main__ - INFO - (4) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:49:08,176 - __main__ - INFO - (4) - NESTED CROSS VALIDATION with 3 fold: [-0.00299165 -0.025      -0.        ]
2020-03-20 12:49:08,179 - __main__ - INFO - (4) - NESTED CROSS VALIDATION (mean): -0.009330550058333194
2020-03-20 12:49:08,183 - __main__ - INFO - (5) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:49:08,187 - __main__ - INFO - (5) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:49:08,191 - __main__ - INFO - (5) - DATA_REDUCTION_: t
2020-03-20 12:49:08,194 - __main__ - INFO - (5) - DATA_DIMENSION_: 5
2020-03-20 13:12:48,607 - __main__ - INFO - (5) - CV_RESULTS_: {'mean_fit_time': array([56.83028475, 55.89029503, 56.48083297, 56.59051625, 55.7787745 ,
       55.92787695, 56.47776445, 57.03511898]), 'std_fit_time': array([0.47040765, 0.11391055, 0.08384264, 0.20933632, 0.3214609 ,
       0.26080866, 0.13629613, 0.25804601]), 'mean_score_time': array([0.18904352, 0.1889712 , 0.18555713, 0.18923529, 0.18591475,
       0.19003065, 0.18637133, 0.18900577]), 'std_score_time': array([0.0024264 , 0.00250898, 0.00106837, 0.00170807, 0.00250642,
       0.00294903, 0.00044501, 0.00100809]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00191812, -0.02175677, -0.54877111, -0.54979777, -0.00191812,
       -0.02175677, -0.54877111, -0.54979777]), 'split1_test_score': array([-0.0010549 , -0.0248251 , -0.54872839, -0.54998924, -0.0010549 ,
       -0.0248251 , -0.54872839, -0.54998924]), 'split2_test_score': array([-0.00632027, -0.02499413, -0.54908848, -0.54999963, -0.00632027,
       -0.02499413, -0.54908848, -0.54999963]), 'mean_test_score': array([-0.00309776, -0.02385867, -0.54886266, -0.54992888, -0.00309776,
       -0.02385867, -0.54886266, -0.54992888]), 'std_test_score': array([2.30574650e-03, 1.48786517e-03, 1.60631435e-04, 9.28093088e-05,
       2.30574650e-03, 1.48786517e-03, 1.60631435e-04, 9.28093088e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 13:12:48,613 - __main__ - INFO - (5) - BEST_SCORE_: -0.0030977625711158725
2020-03-20 13:12:48,623 - __main__ - INFO - (5) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:15:36,697 - __main__ - INFO - (5) - NESTED CROSS VALIDATION with 3 fold: [-0.00191812 -0.0010549  -0.00632027]
2020-03-20 13:15:36,698 - __main__ - INFO - (5) - NESTED CROSS VALIDATION (mean): -0.0030977625711158725
2020-03-20 13:15:36,699 - __main__ - INFO - (6) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:15:36,701 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:15:36,702 - __main__ - INFO - (6) - DATA_REDUCTION_: t
2020-03-20 13:15:36,703 - __main__ - INFO - (6) - DATA_DIMENSION_: 5
2020-03-20 13:39:34,475 - __main__ - INFO - (6) - CV_RESULTS_: {'mean_fit_time': array([55.97262255, 56.90928586, 57.73292708, 57.47699404, 56.91230655,
       56.95878498, 57.285954  , 57.39196062]), 'std_fit_time': array([0.10130771, 0.52112717, 0.23152862, 0.08276233, 0.12846621,
       0.2735229 , 0.24921791, 0.29128001]), 'mean_score_time': array([0.18759974, 0.18683608, 0.1857965 , 0.18614968, 0.18920946,
       0.1901447 , 0.18723679, 0.18797803]), 'std_score_time': array([0.00284297, 0.0015524 , 0.0022904 , 0.00273309, 0.00070832,
       0.00420227, 0.00194885, 0.00235586]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00437184, -0.02499491, -0.5488667 , -0.54999966, -0.00437184,
       -0.02499491, -0.5488667 , -0.54999966]), 'split1_test_score': array([-0.01852102, -0.025     , -0.54969668, -0.55      , -0.01852102,
       -0.025     , -0.54969668, -0.55      ]), 'split2_test_score': array([-0.01595208, -0.025     , -0.54955222, -0.55      , -0.01595208,
       -0.025     , -0.54955222, -0.55      ]), 'mean_test_score': array([-0.01294831, -0.0249983 , -0.54937187, -0.54999989, -0.01294831,
       -0.0249983 , -0.54937187, -0.54999989]), 'std_test_score': array([6.15449857e-03, 2.40022921e-06, 3.62043945e-04, 1.58261837e-07,
       6.15449857e-03, 2.40022921e-06, 3.62043945e-04, 1.58261837e-07]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 13:39:34,481 - __main__ - INFO - (6) - BEST_SCORE_: -0.012948314495431157
2020-03-20 13:39:34,484 - __main__ - INFO - (6) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:42:24,563 - __main__ - INFO - (6) - NESTED CROSS VALIDATION with 3 fold: [-0.00437184 -0.01852102 -0.01595208]
2020-03-20 13:42:24,565 - __main__ - INFO - (6) - NESTED CROSS VALIDATION (mean): -0.012948314495431157
2020-03-20 13:42:24,576 - __main__ - INFO - (7) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:42:24,578 - __main__ - INFO - (7) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:42:24,580 - __main__ - INFO - (7) - DATA_REDUCTION_: t
2020-03-20 13:42:24,581 - __main__ - INFO - (7) - DATA_DIMENSION_: 5
2020-03-20 14:06:12,189 - __main__ - INFO - (7) - CV_RESULTS_: {'mean_fit_time': array([56.81561001, 56.41608644, 57.31967497, 57.16011961, 56.26379657,
       56.03572043, 56.40956275, 56.92489791]), 'std_fit_time': array([0.10181631, 0.15304474, 0.1825002 , 0.19588791, 0.04824802,
       0.09448083, 0.09237628, 0.16873755]), 'mean_score_time': array([0.1856792 , 0.18697604, 0.18760331, 0.18608022, 0.18562269,
       0.19011386, 0.18723551, 0.18853863]), 'std_score_time': array([0.00150482, 0.00299277, 0.00184185, 0.00077052, 0.00143064,
       0.00257079, 0.00109881, 0.00386196]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-4.65248480e-04, -2.45811164e-02, -5.48657332e-01, -5.49976879e-01,
       -4.65248480e-04, -2.45811164e-02, -5.48657332e-01, -5.49976879e-01]), 'split1_test_score': array([-0.01015591, -0.02499538, -0.54933327, -0.54999812, -0.01015591,
       -0.02499538, -0.54933327, -0.54999812]), 'split2_test_score': array([-0.00426331, -0.02462444, -0.54903597, -0.54997875, -0.00426331,
       -0.02462444, -0.54903597, -0.54997875]), 'mean_test_score': array([-0.00496149, -0.02473365, -0.54900886, -0.54998458, -0.00496149,
       -0.02473365, -0.54900886, -0.54998458]), 'std_test_score': array([3.98687978e-03, 1.85916464e-04, 2.76615882e-04, 9.60434088e-06,
       3.98687978e-03, 1.85916464e-04, 2.76615882e-04, 9.60434088e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 14:06:12,195 - __main__ - INFO - (7) - BEST_SCORE_: -0.004961489804791439
2020-03-20 14:06:12,196 - __main__ - INFO - (7) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:09:02,485 - __main__ - INFO - (7) - NESTED CROSS VALIDATION with 3 fold: [-0.00046525 -0.01015591 -0.00426331]
2020-03-20 14:09:02,487 - __main__ - INFO - (7) - NESTED CROSS VALIDATION (mean): -0.004961489804791439
2020-03-20 14:09:02,489 - __main__ - INFO - (8) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:09:02,494 - __main__ - INFO - (8) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:09:02,498 - __main__ - INFO - (8) - DATA_REDUCTION_: t
2020-03-20 14:09:02,501 - __main__ - INFO - (8) - DATA_DIMENSION_: 5
2020-03-20 14:33:00,053 - __main__ - INFO - (8) - CV_RESULTS_: {'mean_fit_time': array([56.52248685, 56.03863859, 56.83747935, 57.0082914 , 57.63937521,
       57.12035751, 57.42782108, 57.79278771]), 'std_fit_time': array([0.24101556, 0.29369449, 0.19143024, 0.19365158, 0.81108684,
       0.04396502, 0.09652268, 0.21410976]), 'mean_score_time': array([0.18895308, 0.18516405, 0.18640002, 0.1861496 , 0.18499573,
       0.18856812, 0.18558121, 0.18485618]), 'std_score_time': array([0.0054436 , 0.00206934, 0.00240788, 0.00073482, 0.00053921,
       0.00105717, 0.00078351, 0.00044136]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00173196, -0.02496378, -0.54873987, -0.54999427, -0.00173196,
       -0.02496378, -0.54873987, -0.54999427]), 'split1_test_score': array([-0.01900653, -0.025     , -0.54970434, -0.54999998, -0.01900653,
       -0.025     , -0.54970434, -0.54999998]), 'split2_test_score': array([-3.38893346e-05, -1.37364275e-03, -5.48579526e-01, -5.48523806e-01,
       -3.38893346e-05, -1.37364275e-03, -5.48579526e-01, -5.48523806e-01]), 'mean_test_score': array([-0.00692413, -0.01711248, -0.54900791, -0.54950602, -0.00692413,
       -0.01711248, -0.54900791, -0.54950602]), 'std_test_score': array([0.00857163, 0.01112905, 0.00049678, 0.00069453, 0.00857163,
       0.01112905, 0.00049678, 0.00069453]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 14:33:00,059 - __main__ - INFO - (8) - BEST_SCORE_: -0.006924125298220243
2020-03-20 14:33:00,071 - __main__ - INFO - (8) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:35:52,198 - __main__ - INFO - (8) - NESTED CROSS VALIDATION with 3 fold: [-1.73196062e-03 -1.90065259e-02 -3.38893346e-05]
2020-03-20 14:35:52,200 - __main__ - INFO - (8) - NESTED CROSS VALIDATION (mean): -0.006924125298220243
2020-03-20 14:35:52,206 - __main__ - INFO - (9) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:35:52,210 - __main__ - INFO - (9) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:35:52,216 - __main__ - INFO - (9) - DATA_REDUCTION_: t
2020-03-20 14:35:52,219 - __main__ - INFO - (9) - DATA_DIMENSION_: 5
2020-03-20 15:00:00,151 - __main__ - INFO - (9) - CV_RESULTS_: {'mean_fit_time': array([57.2138629 , 57.21486568, 57.83716353, 57.76128427, 57.34954731,
       57.47097166, 57.5518988 , 57.47377578]), 'std_fit_time': array([0.27018395, 0.23987453, 0.37088004, 0.12144675, 0.13754934,
       0.17462065, 0.39029773, 0.11502253]), 'mean_score_time': array([0.18719204, 0.19006292, 0.1841766 , 0.18670805, 0.18473283,
       0.18603826, 0.18729345, 0.18902731]), 'std_score_time': array([0.00138054, 0.00077185, 0.00097427, 0.00116847, 0.00193383,
       0.00057545, 0.00224615, 0.00154855]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00184558, -0.02134604, -0.54869869, -0.54977298, -0.00184558,
       -0.02134604, -0.54869869, -0.54977298]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.0133761 , -0.02499181, -0.54943475, -0.5499995 , -0.0133761 ,
       -0.02499181, -0.54943475, -0.5499995 ]), 'mean_test_score': array([-0.01340723, -0.02377928, -0.54937781, -0.54992416, -0.01340723,
       -0.02377928, -0.54937781, -0.54992416]), 'std_test_score': array([0.00945278, 0.00172057, 0.00053278, 0.0001069 , 0.00945278,
       0.00172057, 0.00053278, 0.0001069 ]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 15:00:00,157 - __main__ - INFO - (9) - BEST_SCORE_: -0.01340722881224689
2020-03-20 15:00:00,169 - __main__ - INFO - (9) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:02:52,080 - __main__ - INFO - (9) - NESTED CROSS VALIDATION with 3 fold: [-0.00184558 -0.025      -0.0133761 ]
2020-03-20 15:02:52,082 - __main__ - INFO - (9) - NESTED CROSS VALIDATION (mean): -0.01340722881224689
2020-03-20 15:02:52,086 - __main__ - INFO - (10) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:02:52,088 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:02:52,091 - __main__ - INFO - (10) - DATA_REDUCTION_: t
2020-03-20 15:02:52,097 - __main__ - INFO - (10) - DATA_DIMENSION_: 5
2020-03-20 15:27:03,643 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([56.98335338, 57.22786919, 58.15171274, 57.68898718, 57.27849261,
       57.14009984, 58.58719587, 58.05632885]), 'std_fit_time': array([0.09986671, 0.20955463, 0.14380897, 0.46311364, 0.07931181,
       0.22069114, 0.23805298, 0.15714008]), 'mean_score_time': array([0.18808492, 0.1883688 , 0.1861976 , 0.18751764, 0.18478775,
       0.18738461, 0.18633453, 0.18586127]), 'std_score_time': array([0.00175972, 0.00034155, 0.00033015, 0.00137978, 0.00260962,
       0.00066591, 0.00105214, 0.00156529]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00334036, -0.02493679, -0.54885046, -0.5499936 , -0.00334036,
       -0.02493679, -0.54885046, -0.5499936 ]), 'split1_test_score': array([-0.01382379, -0.025     , -0.54944328, -0.54999996, -0.01382379,
       -0.025     , -0.54944328, -0.54999996]), 'split2_test_score': array([-0.00454836, -0.02498722, -0.54901257, -0.54999603, -0.00454836,
       -0.02498722, -0.54901257, -0.54999603]), 'mean_test_score': array([-0.0072375 , -0.02497467, -0.5491021 , -0.54999653, -0.0072375 ,
       -0.02497467, -0.5491021 , -0.54999653]), 'std_test_score': array([4.68324862e-03, 2.72906264e-05, 2.50163497e-04, 2.61818772e-06,
       4.68324862e-03, 2.72906264e-05, 2.50163497e-04, 2.61818772e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 15:27:03,649 - __main__ - INFO - (10) - BEST_SCORE_: -0.00723750200609035
2020-03-20 15:27:03,655 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:29:55,668 - __main__ - INFO - (10) - NESTED CROSS VALIDATION with 3 fold: [-0.00334036 -0.01382379 -0.00454836]
2020-03-20 15:29:55,669 - __main__ - INFO - (10) - NESTED CROSS VALIDATION (mean): -0.00723750200609035
2020-03-20 15:29:55,677 - __main__ - INFO - (11) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:29:55,681 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:29:55,682 - __main__ - INFO - (11) - DATA_REDUCTION_: t
2020-03-20 15:29:55,686 - __main__ - INFO - (11) - DATA_DIMENSION_: 5
2020-03-20 15:53:55,042 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([56.87929742, 57.1377267 , 57.340084  , 57.56001989, 56.66340343,
       56.33335376, 57.76281269, 57.24300464]), 'std_fit_time': array([0.11769516, 0.16385907, 0.16999998, 0.37572157, 0.15903156,
       0.10105207, 0.19597932, 0.4199239 ]), 'mean_score_time': array([0.18696968, 0.18964132, 0.18432403, 0.18753799, 0.18694806,
       0.18628144, 0.18923116, 0.18679714]), 'std_score_time': array([0.00267864, 0.00403799, 0.0005058 , 0.00144506, 0.00265895,
       0.00028114, 0.00169265, 0.00203556]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01997111, -0.025     , -0.54975797, -0.55      , -0.01997111,
       -0.025     , -0.54975797, -0.55      ]), 'split1_test_score': array([-0.00112095, -0.01435091, -0.54871437, -0.54933589, -0.00112095,
       -0.01435091, -0.54871437, -0.54933589]), 'split2_test_score': array([-0.01695077, -0.025     , -0.54962557, -0.54999991, -0.01695077,
       -0.025     , -0.54962557, -0.54999991]), 'mean_test_score': array([-0.01268094, -0.0214503 , -0.54936597, -0.5497786 , -0.01268094,
       -0.0214503 , -0.54936597, -0.5497786 ]), 'std_test_score': array([0.00826663, 0.00502003, 0.00046391, 0.00031304, 0.00826663,
       0.00502003, 0.00046391, 0.00031304]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 15:53:55,048 - __main__ - INFO - (11) - BEST_SCORE_: -0.012680942943491308
2020-03-20 15:53:55,060 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:56:46,299 - __main__ - INFO - (11) - NESTED CROSS VALIDATION with 3 fold: [-0.01997111 -0.00112095 -0.01695077]
2020-03-20 15:56:46,301 - __main__ - INFO - (11) - NESTED CROSS VALIDATION (mean): -0.012680942943491308
2020-03-20 15:56:46,309 - __main__ - INFO - (12) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:56:46,316 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:56:46,318 - __main__ - INFO - (12) - DATA_REDUCTION_: t
2020-03-20 15:56:46,319 - __main__ - INFO - (12) - DATA_DIMENSION_: 5
2020-03-20 16:20:33,530 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([56.64717031, 56.54674768, 57.31566389, 57.06775967, 56.35979772,
       55.78328546, 56.73950911, 56.49346161]), 'std_fit_time': array([0.06970541, 0.1192102 , 0.24036821, 0.25558217, 0.27439651,
       0.21112172, 0.1460224 , 0.26585392]), 'mean_score_time': array([0.18635551, 0.18480126, 0.19038494, 0.18547002, 0.18204904,
       0.1850334 , 0.18130167, 0.18367608]), 'std_score_time': array([0.00117551, 0.00232916, 0.00756957, 0.00194012, 0.00130421,
       0.00063592, 0.00061088, 0.00223586]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00000000e+00, -1.38365506e-10, -5.48683214e-01, -5.48541375e-01,
       -0.00000000e+00, -1.38365506e-10, -5.48683214e-01, -5.48541375e-01]), 'split1_test_score': array([-3.48159653e-04, -0.00000000e+00, -5.48707203e-01, -5.49054175e-01,
       -3.48159653e-04, -0.00000000e+00, -5.48707203e-01, -5.49054175e-01]), 'split2_test_score': array([-0.01636944, -0.02499659, -0.54965343, -0.54999987, -0.01636944,
       -0.02499659, -0.54965343, -0.54999987]), 'mean_test_score': array([-0.00557253, -0.0083322 , -0.54901461, -0.54919847, -0.00557253,
       -0.0083322 , -0.54901461, -0.54919847]), 'std_test_score': array([0.00763589, 0.0117835 , 0.00045182, 0.00060411, 0.00763589,
       0.0117835 , 0.00045182, 0.00060411]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 16:20:33,536 - __main__ - INFO - (12) - BEST_SCORE_: -0.005572531631874181
2020-03-20 16:20:33,540 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:23:25,163 - __main__ - INFO - (12) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00034816 -0.01636944]
2020-03-20 16:23:25,165 - __main__ - INFO - (12) - NESTED CROSS VALIDATION (mean): -0.005572531631874181
2020-03-20 16:23:25,175 - __main__ - INFO - (13) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:23:25,177 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:23:25,178 - __main__ - INFO - (13) - DATA_REDUCTION_: t
2020-03-20 16:23:25,179 - __main__ - INFO - (13) - DATA_DIMENSION_: 5
2020-03-20 16:47:06,558 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([57.03411245, 55.99941119, 56.71761807, 56.83080284, 55.95966911,
       55.92285037, 56.50585469, 56.39428393]), 'std_fit_time': array([0.75487777, 0.03092705, 0.16345225, 0.19668371, 0.19464235,
       0.03254521, 0.15320575, 0.12144772]), 'mean_score_time': array([0.18420951, 0.19019612, 0.18534819, 0.18624679, 0.18646884,
       0.1835765 , 0.18805313, 0.18512551]), 'std_score_time': array([0.00078646, 0.00181343, 0.00243288, 0.00071583, 0.00105706,
       0.0003573 , 0.00355773, 0.00186289]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-9.27898485e-07, -0.00000000e+00, -5.48644623e-01, -5.48532601e-01,
       -9.27898485e-07, -0.00000000e+00, -5.48644623e-01, -5.48532601e-01]), 'split1_test_score': array([-0.02225049, -0.025     , -0.54986652, -0.55      , -0.02225049,
       -0.025     , -0.54986652, -0.55      ]), 'split2_test_score': array([-9.85379950e-05, -4.96466792e-03, -5.48720762e-01, -5.49011836e-01,
       -9.85379950e-05, -4.96466792e-03, -5.48720762e-01, -5.49011836e-01]), 'mean_test_score': array([-0.00744999, -0.00998822, -0.5490773 , -0.54918148, -0.00744999,
       -0.00998822, -0.5490773 , -0.54918148]), 'std_test_score': array([0.01046561, 0.0108067 , 0.00055893, 0.00061095, 0.01046561,
       0.0108067 , 0.00055893, 0.00061095]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 16:47:06,564 - __main__ - INFO - (13) - BEST_SCORE_: -0.007449985202630252
2020-03-20 16:47:06,567 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:49:56,124 - __main__ - INFO - (13) - NESTED CROSS VALIDATION with 3 fold: [-9.27898485e-07 -2.22504897e-02 -9.85379950e-05]
2020-03-20 16:49:56,126 - __main__ - INFO - (13) - NESTED CROSS VALIDATION (mean): -0.007449985202630252
2020-03-20 16:49:56,135 - __main__ - INFO - (14) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:49:56,137 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:49:56,138 - __main__ - INFO - (14) - DATA_REDUCTION_: t
2020-03-20 16:49:56,139 - __main__ - INFO - (14) - DATA_DIMENSION_: 5
2020-03-20 17:13:45,685 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([56.46752938, 55.88094894, 56.72517912, 57.08823991, 56.56165504,
       56.68395988, 57.18700155, 57.26488654]), 'std_fit_time': array([0.30208899, 0.13093521, 0.29567638, 0.0430631 , 0.24643276,
       0.12597437, 0.08093149, 0.04368185]), 'mean_score_time': array([0.18492142, 0.18579221, 0.18372393, 0.18891954, 0.18665147,
       0.18688877, 0.18798407, 0.18923092]), 'std_score_time': array([0.00025061, 0.00244218, 0.00304629, 0.00144444, 0.00111047,
       0.00081182, 0.00025147, 0.00060557]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.02363688, -0.54857972, -0.54991513, -0.        ,
       -0.02363688, -0.54857972, -0.54991513]), 'split1_test_score': array([-3.39484505e-04, -2.45894177e-02, -5.48748106e-01, -5.49977264e-01,
       -3.39484505e-04, -2.45894177e-02, -5.48748106e-01, -5.49977264e-01]), 'split2_test_score': array([-0.0043869 , -0.02487481, -0.54910861, -0.54999225, -0.0043869 ,
       -0.02487481, -0.54910861, -0.54999225]), 'mean_test_score': array([-0.00157546, -0.02436704, -0.54881215, -0.54996155, -0.00157546,
       -0.02436704, -0.54881215, -0.54996155]), 'std_test_score': array([1.99281299e-03, 5.29278112e-04, 2.20617850e-04, 3.33892442e-05,
       1.99281299e-03, 5.29278112e-04, 2.20617850e-04, 3.33892442e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 17:13:45,694 - __main__ - INFO - (14) - BEST_SCORE_: -0.0015754618732527635
2020-03-20 17:13:45,697 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:16:35,839 - __main__ - INFO - (14) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00033948 -0.0043869 ]
2020-03-20 17:16:35,845 - __main__ - INFO - (14) - NESTED CROSS VALIDATION (mean): -0.0015754618732527635
2020-03-20 17:16:35,846 - __main__ - INFO - (15) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:16:35,847 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:16:35,849 - __main__ - INFO - (15) - DATA_REDUCTION_: t
2020-03-20 17:16:35,850 - __main__ - INFO - (15) - DATA_DIMENSION_: 5
2020-03-20 17:40:36,736 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([56.38050779, 56.50545557, 57.93780168, 58.84278989, 57.24585756,
       56.77922606, 57.06775188, 56.98092914]), 'std_fit_time': array([0.06523891, 0.18901649, 0.49141744, 0.26008366, 0.08045689,
       0.09056578, 0.0358611 , 0.12341934]), 'mean_score_time': array([0.19348176, 0.18759314, 0.18673197, 0.19170356, 0.18661475,
       0.18812815, 0.18434405, 0.18825889]), 'std_score_time': array([0.00518953, 0.00144624, 0.00097893, 0.00360858, 0.00110211,
       0.00161664, 0.00122222, 0.00088085]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00092758, -0.02408254, -0.54870145, -0.54995201, -0.00092758,
       -0.02408254, -0.54870145, -0.54995201]), 'split1_test_score': array([-0.00213998, -0.02415288, -0.54881524, -0.54995537, -0.00213998,
       -0.02415288, -0.54881524, -0.54995537]), 'split2_test_score': array([-0.00212226, -0.01929495, -0.54888868, -0.54971799, -0.00212226,
       -0.01929495, -0.54888868, -0.54971799]), 'mean_test_score': array([-0.00172994, -0.02251012, -0.54880179, -0.54987513, -0.00172994,
       -0.02251012, -0.54880179, -0.54987513]), 'std_test_score': array([5.67400365e-04, 2.27365542e-03, 7.70274295e-05, 1.11118199e-04,
       5.67400365e-04, 2.27365542e-03, 7.70274295e-05, 1.11118199e-04]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 17:40:36,742 - __main__ - INFO - (15) - BEST_SCORE_: -0.0017299394373356256
2020-03-20 17:40:36,750 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:43:26,894 - __main__ - INFO - (15) - NESTED CROSS VALIDATION with 3 fold: [-0.00092758 -0.00213998 -0.00212226]
2020-03-20 17:43:26,895 - __main__ - INFO - (15) - NESTED CROSS VALIDATION (mean): -0.0017299394373356256
2020-03-20 17:43:26,901 - __main__ - INFO - (16) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:43:26,905 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:43:26,908 - __main__ - INFO - (16) - DATA_REDUCTION_: t
2020-03-20 17:43:26,910 - __main__ - INFO - (16) - DATA_DIMENSION_: 5
2020-03-20 18:07:26,305 - __main__ - INFO - (16) - CV_RESULTS_: {'mean_fit_time': array([56.74727654, 57.31223694, 57.69197249, 58.00525578, 56.25278799,
       57.00234381, 57.15240693, 56.90703066]), 'std_fit_time': array([0.26651878, 0.24547305, 0.08516325, 0.51330885, 0.23043656,
       0.26115456, 0.35285437, 0.24507588]), 'mean_score_time': array([0.18964831, 0.18738222, 0.18618838, 0.18879342, 0.18841187,
       0.1872077 , 0.18729822, 0.18738151]), 'std_score_time': array([0.00540415, 0.0009574 , 0.0025389 , 0.00103821, 0.0014474 ,
       0.00062757, 0.00058168, 0.0017318 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.        , -0.54869285, -0.5484557 , -0.        ,
       -0.        , -0.54869285, -0.5484557 ]), 'split1_test_score': array([-0.00539385, -0.02341755, -0.54897373, -0.54992046, -0.00539385,
       -0.02341755, -0.54897373, -0.54992046]), 'split2_test_score': array([-0.01178776, -0.025     , -0.54939966, -0.54999995, -0.01178776,
       -0.025     , -0.54939966, -0.54999995]), 'mean_test_score': array([-0.0057272 , -0.01613918, -0.54902208, -0.5494587 , -0.0057272 ,
       -0.01613918, -0.54902208, -0.5494587 ]), 'std_test_score': array([0.0048181 , 0.0114304 , 0.00029057, 0.00070997, 0.0048181 ,
       0.0114304 , 0.00029057, 0.00070997]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 18:07:26,311 - __main__ - INFO - (16) - BEST_SCORE_: -0.005727204588973172
2020-03-20 18:07:26,312 - __main__ - INFO - (16) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 18:10:15,525 - __main__ - INFO - (16) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00539385 -0.01178776]
2020-03-20 18:10:15,527 - __main__ - INFO - (16) - NESTED CROSS VALIDATION (mean): -0.005727204588973172
2020-03-20 18:10:15,537 - __main__ - INFO - (17) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:10:15,538 - __main__ - INFO - (17) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:10:15,540 - __main__ - INFO - (17) - DATA_REDUCTION_: t
2020-03-20 18:10:15,546 - __main__ - INFO - (17) - DATA_DIMENSION_: 5
2020-03-20 18:34:04,778 - __main__ - INFO - (17) - CV_RESULTS_: {'mean_fit_time': array([55.88158083, 56.07074491, 56.68153079, 57.08449976, 56.63921881,
       57.05268248, 57.12849092, 57.27181164]), 'std_fit_time': array([0.07640256, 0.21463969, 0.11358794, 0.34980299, 0.2795137 ,
       0.38513437, 0.49109419, 0.25300597]), 'mean_score_time': array([0.18484275, 0.18531505, 0.18550563, 0.18785572, 0.18577965,
       0.18820596, 0.18676384, 0.18978326]), 'std_score_time': array([0.0016767 , 0.00070387, 0.00076064, 0.00150305, 0.00188601,
       0.00015578, 0.00300448, 0.00285459]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01075393, -0.02491442, -0.54928978, -0.54999467, -0.01075393,
       -0.02491442, -0.54928978, -0.54999467]), 'split1_test_score': array([-0.01650975, -0.025     , -0.54959138, -0.55      , -0.01650975,
       -0.025     , -0.54959138, -0.55      ]), 'split2_test_score': array([-0.00585337, -0.02492849, -0.54898072, -0.54999554, -0.00585337,
       -0.02492849, -0.54898072, -0.54999554]), 'mean_test_score': array([-0.01103902, -0.02494764, -0.54928729, -0.54999674, -0.01103902,
       -0.02494764, -0.54928729, -0.54999674]), 'std_test_score': array([4.35511526e-03, 3.74684862e-05, 2.49308012e-04, 2.33394516e-06,
       4.35511526e-03, 3.74684862e-05, 2.49308012e-04, 2.33394516e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 18:34:04,784 - __main__ - INFO - (17) - BEST_SCORE_: -0.011039016151692409
2020-03-20 18:34:04,792 - __main__ - INFO - (17) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 18:36:56,121 - __main__ - INFO - (17) - NESTED CROSS VALIDATION with 3 fold: [-0.01075393 -0.01650975 -0.00585337]
2020-03-20 18:36:56,123 - __main__ - INFO - (17) - NESTED CROSS VALIDATION (mean): -0.011039016151692409
2020-03-20 18:36:56,124 - __main__ - INFO - (18) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:36:56,128 - __main__ - INFO - (18) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:36:56,138 - __main__ - INFO - (18) - DATA_REDUCTION_: t
2020-03-20 18:36:56,142 - __main__ - INFO - (18) - DATA_DIMENSION_: 5
2020-03-20 19:00:57,001 - __main__ - INFO - (18) - CV_RESULTS_: {'mean_fit_time': array([57.17688052, 57.44989514, 58.05032396, 57.79781683, 57.42379808,
       56.55234774, 56.69443083, 56.70589383]), 'std_fit_time': array([0.18560699, 0.0568276 , 0.09325723, 0.08780414, 0.65837991,
       0.13148294, 0.09051878, 0.25506304]), 'mean_score_time': array([0.18931858, 0.18675327, 0.18548044, 0.1877509 , 0.18672506,
       0.18537291, 0.18574961, 0.18682806]), 'std_score_time': array([0.00266669, 0.00290529, 0.00168104, 0.00051223, 0.00058203,
       0.00116065, 0.00064547, 0.00110292]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00890621, -0.025     , -0.54929172, -0.54999985, -0.00890621,
       -0.025     , -0.54929172, -0.54999985]), 'split1_test_score': array([-0.00526478, -0.02492533, -0.54907628, -0.54999274, -0.00526478,
       -0.02492533, -0.54907628, -0.54999274]), 'split2_test_score': array([-0.01717404, -0.025     , -0.54968033, -0.54999997, -0.01717404,
       -0.025     , -0.54968033, -0.54999997]), 'mean_test_score': array([-0.01044834, -0.02497511, -0.54934944, -0.54999752, -0.01044834,
       -0.02497511, -0.54934944, -0.54999752]), 'std_test_score': array([4.98271985e-03, 3.52015775e-05, 2.49957341e-04, 3.38121252e-06,
       4.98271985e-03, 3.52015775e-05, 2.49957341e-04, 3.38121252e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:00:57,006 - __main__ - INFO - (18) - BEST_SCORE_: -0.010448340069233933
2020-03-20 19:00:57,009 - __main__ - INFO - (18) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:03:45,961 - __main__ - INFO - (18) - NESTED CROSS VALIDATION with 3 fold: [-0.00890621 -0.00526478 -0.01717404]
2020-03-20 19:03:45,963 - __main__ - INFO - (18) - NESTED CROSS VALIDATION (mean): -0.010448340069233933
2020-03-20 19:03:45,971 - __main__ - INFO - (19) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:03:45,974 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:03:45,977 - __main__ - INFO - (19) - DATA_REDUCTION_: t
2020-03-20 19:03:45,979 - __main__ - INFO - (19) - DATA_DIMENSION_: 5
2020-03-20 19:27:19,481 - __main__ - INFO - (19) - CV_RESULTS_: {'mean_fit_time': array([55.60300589, 55.62740056, 56.28850396, 55.99899483, 55.65272506,
       55.77847075, 57.42493757, 56.49331848]), 'std_fit_time': array([0.10240326, 0.05069251, 0.14113487, 0.32908065, 0.1412067 ,
       0.56585401, 0.18780232, 0.32823348]), 'mean_score_time': array([0.18674119, 0.18684697, 0.18828766, 0.18856096, 0.18641464,
       0.18840472, 0.18682694, 0.18825308]), 'std_score_time': array([0.00060048, 0.00124406, 0.00235626, 0.00213144, 0.00225827,
       0.00151856, 0.00141872, 0.00240221]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00691868, -0.025     , -0.54938565, -0.54999992, -0.00691868,
       -0.025     , -0.54938565, -0.54999992]), 'split1_test_score': array([-0.        , -0.02187193, -0.54872677, -0.54984526, -0.        ,
       -0.02187193, -0.54872677, -0.54984526]), 'split2_test_score': array([-0.        , -0.        , -0.5487029 , -0.54844467, -0.        ,
       -0.        , -0.5487029 , -0.54844467]), 'mean_test_score': array([-0.00230623, -0.01562398, -0.54893844, -0.54942995, -0.00230623,
       -0.01562398, -0.54893844, -0.54942995]), 'std_test_score': array([0.0032615 , 0.01112138, 0.00031638, 0.00069956, 0.0032615 ,
       0.01112138, 0.00031638, 0.00069956]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:27:19,488 - __main__ - INFO - (19) - BEST_SCORE_: -0.0023062259654442283
2020-03-20 19:27:19,489 - __main__ - INFO - (19) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:30:08,086 - __main__ - INFO - (19) - NESTED CROSS VALIDATION with 3 fold: [-0.00691868 -0.         -0.        ]
2020-03-20 19:30:08,088 - __main__ - INFO - (19) - NESTED CROSS VALIDATION (mean): -0.0023062259654442283
2020-03-20 19:30:08,098 - __main__ - INFO - (20) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:30:08,099 - __main__ - INFO - (20) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:30:08,100 - __main__ - INFO - (20) - DATA_REDUCTION_: t
2020-03-20 19:30:08,101 - __main__ - INFO - (20) - DATA_DIMENSION_: 5
2020-03-20 19:53:56,918 - __main__ - INFO - (20) - CV_RESULTS_: {'mean_fit_time': array([56.23277903, 56.42556087, 56.75007669, 56.59261163, 55.84178964,
       56.19545587, 57.16024574, 58.05396096]), 'std_fit_time': array([0.23333956, 0.39097791, 0.16065619, 0.01871626, 0.13504668,
       0.17459483, 0.19068679, 0.14427556]), 'mean_score_time': array([0.19042071, 0.18835624, 0.18538753, 0.18750342, 0.18970219,
       0.19139568, 0.18767532, 0.18877339]), 'std_score_time': array([0.0044611 , 0.00086229, 0.00131235, 0.00045555, 0.00343659,
       0.00304873, 0.00075005, 0.00038616]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00793408, -0.02458455, -0.5491484 , -0.54997431, -0.00793408,
       -0.02458455, -0.5491484 , -0.54997431]), 'split1_test_score': array([-0.00608851, -0.02485254, -0.5490814 , -0.54999089, -0.00608851,
       -0.02485254, -0.5490814 , -0.54999089]), 'split2_test_score': array([-0.01167014, -0.02497595, -0.54937838, -0.54999826, -0.01167014,
       -0.02497595, -0.54937838, -0.54999826]), 'mean_test_score': array([-0.00856425, -0.02480435, -0.54920273, -0.54998782, -0.00856425,
       -0.02480435, -0.54920273, -0.54998782]), 'std_test_score': array([2.32185007e-03, 1.63384224e-04, 1.27180886e-04, 1.00161227e-05,
       2.32185007e-03, 1.63384224e-04, 1.27180886e-04, 1.00161227e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:53:56,924 - __main__ - INFO - (20) - BEST_SCORE_: -0.008564245265959851
2020-03-20 19:53:56,931 - __main__ - INFO - (20) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:56:48,967 - __main__ - INFO - (20) - NESTED CROSS VALIDATION with 3 fold: [-0.00793408 -0.00608851 -0.01167014]
2020-03-20 19:56:48,969 - __main__ - INFO - (20) - NESTED CROSS VALIDATION (mean): -0.008564245265959851
2020-03-20 19:56:48,978 - __main__ - INFO - (21) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:56:48,980 - __main__ - INFO - (21) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:56:48,983 - __main__ - INFO - (21) - DATA_REDUCTION_: t
2020-03-20 19:56:48,984 - __main__ - INFO - (21) - DATA_DIMENSION_: 5
2020-03-20 20:20:49,061 - __main__ - INFO - (21) - CV_RESULTS_: {'mean_fit_time': array([56.91313783, 56.81249229, 57.68599415, 57.32166394, 56.79495716,
       56.52794774, 57.13591202, 57.76409348]), 'std_fit_time': array([0.02080754, 0.08007845, 0.26000289, 0.11832763, 0.02864542,
       0.32076024, 0.20332513, 0.25023256]), 'mean_score_time': array([0.1860919 , 0.1916724 , 0.18680374, 0.18908532, 0.18667881,
       0.18866173, 0.18765211, 0.18958624]), 'std_score_time': array([0.00183968, 0.00287337, 0.00226723, 0.00103862, 0.00045242,
       0.00241523, 0.00199569, 0.00379026]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00735001, -0.0249989 , -0.54914315, -0.54999993, -0.00735001,
       -0.0249989 , -0.54914315, -0.54999993]), 'split1_test_score': array([-0.01360473, -0.02499426, -0.54942524, -0.54999964, -0.01360473,
       -0.02499426, -0.54942524, -0.54999964]), 'split2_test_score': array([-0.02067516, -0.025     , -0.54979718, -0.55      , -0.02067516,
       -0.025     , -0.54979718, -0.55      ]), 'mean_test_score': array([-0.01387664, -0.02499772, -0.54945519, -0.54999985, -0.01387664,
       -0.02499772, -0.54945519, -0.54999985]), 'std_test_score': array([5.44336541e-03, 2.48905527e-06, 2.67846164e-04, 1.56810620e-07,
       5.44336541e-03, 2.48905527e-06, 2.67846164e-04, 1.56810620e-07]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 20:20:49,067 - __main__ - INFO - (21) - BEST_SCORE_: -0.013876635212954418
2020-03-20 20:20:49,076 - __main__ - INFO - (21) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 20:23:43,549 - __main__ - INFO - (21) - NESTED CROSS VALIDATION with 3 fold: [-0.00735001 -0.01360473 -0.02067516]
2020-03-20 20:23:43,551 - __main__ - INFO - (21) - NESTED CROSS VALIDATION (mean): -0.013876635212954418
2020-03-20 20:23:43,554 - __main__ - INFO - (22) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:23:43,561 - __main__ - INFO - (22) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:23:43,563 - __main__ - INFO - (22) - DATA_REDUCTION_: t
2020-03-20 20:23:43,564 - __main__ - INFO - (22) - DATA_DIMENSION_: 5
2020-03-20 20:47:41,142 - __main__ - INFO - (22) - CV_RESULTS_: {'mean_fit_time': array([57.04519041, 56.97911414, 57.521053  , 58.03041267, 56.7421054 ,
       56.86255932, 56.8367997 , 56.83200463]), 'std_fit_time': array([0.34524522, 0.05573443, 0.1613049 , 0.58502488, 0.01148197,
       0.1471075 , 0.2888782 , 0.26660866]), 'mean_score_time': array([0.18510985, 0.18759799, 0.18486611, 0.18451707, 0.18427308,
       0.18717996, 0.18362745, 0.18504103]), 'std_score_time': array([0.00091434, 0.00132537, 0.0020605 , 0.00088909, 0.0014945 ,
       0.00193872, 0.0012225 , 0.00197332]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-6.69449464e-07, -8.03689331e-05, -5.48706434e-01, -5.48568009e-01,
       -6.69449464e-07, -8.03689331e-05, -5.48706434e-01, -5.48568009e-01]), 'split1_test_score': array([-0.00290395, -0.02140269, -0.54904877, -0.54984888, -0.00290395,
       -0.02140269, -0.54904877, -0.54984888]), 'split2_test_score': array([-6.46019933e-09, -9.82811119e-03, -5.48549381e-01, -5.49287189e-01,
       -6.46019933e-09, -9.82811119e-03, -5.48549381e-01, -5.49287189e-01]), 'mean_test_score': array([-0.00096821, -0.01043706, -0.5487682 , -0.54923469, -0.00096821,
       -0.01043706, -0.5487682 , -0.54923469]), 'std_test_score': array([0.00136877, 0.00871544, 0.0002085 , 0.00052423, 0.00136877,
       0.00871544, 0.0002085 , 0.00052423]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 20:47:41,148 - __main__ - INFO - (22) - BEST_SCORE_: -0.0009682079676936187
2020-03-20 20:47:41,154 - __main__ - INFO - (22) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 20:50:31,488 - __main__ - INFO - (22) - NESTED CROSS VALIDATION with 3 fold: [-6.69449464e-07 -2.90394799e-03 -6.46019933e-09]
2020-03-20 20:50:31,493 - __main__ - INFO - (22) - NESTED CROSS VALIDATION (mean): -0.0009682079676936187
2020-03-20 20:50:31,495 - __main__ - INFO - (23) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:50:31,497 - __main__ - INFO - (23) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:50:31,499 - __main__ - INFO - (23) - DATA_REDUCTION_: t
2020-03-20 20:50:31,506 - __main__ - INFO - (23) - DATA_DIMENSION_: 5
2020-03-20 21:14:12,815 - __main__ - INFO - (23) - CV_RESULTS_: {'mean_fit_time': array([56.61390122, 55.78453628, 56.2851692 , 56.4028368 , 55.84271932,
       56.11297989, 56.67286913, 57.04742336]), 'std_fit_time': array([0.17192232, 0.06774238, 0.10598245, 0.20950401, 0.23440253,
       0.47247616, 0.11229394, 0.81265459]), 'mean_score_time': array([0.18590101, 0.18724998, 0.18465583, 0.18441566, 0.18904622,
       0.18927932, 0.18682424, 0.1862847 ]), 'std_score_time': array([0.00070102, 0.00229745, 0.00027875, 0.00073702, 0.00314264,
       0.00222013, 0.00314598, 0.00125203]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01065901, -0.02499574, -0.54937328, -0.54999974, -0.01065901,
       -0.02499574, -0.54937328, -0.54999974]), 'split1_test_score': array([-0.00484277, -0.02474007, -0.54905971, -0.54998387, -0.00484277,
       -0.02474007, -0.54905971, -0.54998387]), 'split2_test_score': array([-0.0012695 , -0.02366415, -0.54876478, -0.54991671, -0.0012695 ,
       -0.02366415, -0.54876478, -0.54991671]), 'mean_test_score': array([-0.00559043, -0.02446665, -0.54906592, -0.54996677, -0.00559043,
       -0.02446665, -0.54906592, -0.54996677]), 'std_test_score': array([3.86953852e-03, 5.76976370e-04, 2.48457294e-04, 3.59879867e-05,
       3.86953852e-03, 5.76976370e-04, 2.48457294e-04, 3.59879867e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 21:14:12,820 - __main__ - INFO - (23) - BEST_SCORE_: -0.005590428071974191
2020-03-20 21:14:12,832 - __main__ - INFO - (23) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 21:17:06,144 - __main__ - INFO - (23) - NESTED CROSS VALIDATION with 3 fold: [-0.01065901 -0.00484277 -0.0012695 ]
2020-03-20 21:17:06,146 - __main__ - INFO - (23) - NESTED CROSS VALIDATION (mean): -0.005590428071974191
2020-03-20 21:17:06,151 - __main__ - INFO - (24) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 21:17:06,153 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 21:17:06,154 - __main__ - INFO - (24) - DATA_REDUCTION_: t
2020-03-20 21:17:06,155 - __main__ - INFO - (24) - DATA_DIMENSION_: 5
2020-03-20 21:41:16,918 - __main__ - INFO - (24) - CV_RESULTS_: {'mean_fit_time': array([56.9855516 , 58.1928815 , 58.19009034, 57.59662724, 56.94859258,
       57.06784511, 57.9805824 , 57.74299971]), 'std_fit_time': array([0.16956792, 0.13774618, 0.26308971, 0.39286545, 0.01225493,
       0.06172083, 0.13235757, 0.19157665]), 'mean_score_time': array([0.18834559, 0.18821239, 0.18515722, 0.18753481, 0.18701045,
       0.18619219, 0.18501012, 0.18554934]), 'std_score_time': array([0.00165747, 0.00403471, 0.00228314, 0.00287996, 0.00186776,
       0.00134331, 0.0025242 , 0.00054409]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00059837, -0.02477718, -0.54866945, -0.54998625, -0.00059837,
       -0.02477718, -0.54866945, -0.54998625]), 'split1_test_score': array([-0.00206985, -0.0248447 , -0.5488712 , -0.54999042, -0.00206985,
       -0.0248447 , -0.5488712 , -0.54999042]), 'split2_test_score': array([-0.01017693, -0.02499466, -0.5492288 , -0.54999967, -0.01017693,
       -0.02499466, -0.5492288 , -0.54999967]), 'mean_test_score': array([-0.00428172, -0.02487218, -0.54892315, -0.54999211, -0.00428172,
       -0.02487218, -0.54892315, -0.54999211]), 'std_test_score': array([4.21160878e-03, 9.08879498e-05, 2.31289307e-04, 5.60791009e-06,
       4.21160878e-03, 9.08879498e-05, 2.31289307e-04, 5.60791009e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 21:41:16,924 - __main__ - INFO - (24) - BEST_SCORE_: -0.004281718044800713
2020-03-20 21:41:16,927 - __main__ - INFO - (24) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 21:44:08,685 - __main__ - INFO - (24) - NESTED CROSS VALIDATION with 3 fold: [-0.00059837 -0.00206985 -0.01017693]
2020-03-20 21:44:08,686 - __main__ - INFO - (24) - NESTED CROSS VALIDATION (mean): -0.004281718044800713
2020-03-20 21:44:08,692 - __main__ - INFO - (25) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 21:44:08,694 - __main__ - INFO - (25) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 21:44:08,695 - __main__ - INFO - (25) - DATA_REDUCTION_: t
2020-03-20 21:44:08,696 - __main__ - INFO - (25) - DATA_DIMENSION_: 5
2020-03-20 22:08:11,986 - __main__ - INFO - (25) - CV_RESULTS_: {'mean_fit_time': array([57.08066702, 57.29093242, 58.25206574, 58.12481221, 57.03338528,
       56.28479886, 56.66054813, 57.50004816]), 'std_fit_time': array([0.03920632, 0.31669892, 0.12875246, 0.46142883, 0.10040722,
       0.36269388, 0.10149748, 0.18681257]), 'mean_score_time': array([0.18920406, 0.20244646, 0.18654943, 0.1919357 , 0.18872658,
       0.1887842 , 0.18399827, 0.18505073]), 'std_score_time': array([0.00392686, 0.02256943, 0.00046407, 0.0060056 , 0.00173128,
       0.00258946, 0.00105358, 0.00134971]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01093917, -0.02498484, -0.54935175, -0.54999844, -0.01093917,
       -0.02498484, -0.54935175, -0.54999844]), 'split1_test_score': array([-1.75171746e-04, -1.48757755e-02, -5.48587399e-01, -5.49367635e-01,
       -1.75171746e-04, -1.48757755e-02, -5.48587399e-01, -5.49367635e-01]), 'split2_test_score': array([-0.00160005, -0.0248375 , -0.54876656, -0.54999055, -0.00160005,
       -0.0248375 , -0.54876656, -0.54999055]), 'mean_test_score': array([-0.00423813, -0.02156604, -0.5489019 , -0.54978554, -0.00423813,
       -0.02156604, -0.5489019 , -0.54978554]), 'std_test_score': array([0.00477392, 0.00473111, 0.00032639, 0.00029552, 0.00477392,
       0.00473111, 0.00032639, 0.00029552]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 22:08:11,992 - __main__ - INFO - (25) - BEST_SCORE_: -0.00423812967676727
2020-03-20 22:08:11,995 - __main__ - INFO - (25) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 22:11:03,789 - __main__ - INFO - (25) - NESTED CROSS VALIDATION with 3 fold: [-0.01093917 -0.00017517 -0.00160005]
2020-03-20 22:11:03,791 - __main__ - INFO - (25) - NESTED CROSS VALIDATION (mean): -0.00423812967676727
2020-03-20 22:11:03,795 - __main__ - INFO - (26) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:11:03,797 - __main__ - INFO - (26) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:11:03,798 - __main__ - INFO - (26) - DATA_REDUCTION_: t
2020-03-20 22:11:03,799 - __main__ - INFO - (26) - DATA_DIMENSION_: 5
2020-03-20 22:34:51,447 - __main__ - INFO - (26) - CV_RESULTS_: {'mean_fit_time': array([56.28818305, 56.32087564, 56.64207872, 57.33794371, 56.09470638,
       56.35962931, 57.2890931 , 56.82254402]), 'std_fit_time': array([0.04729292, 0.18582152, 0.36256723, 0.28905023, 0.2460894 ,
       0.41373195, 0.14207701, 0.14177513]), 'mean_score_time': array([0.18716908, 0.18734097, 0.18597515, 0.19053864, 0.18489504,
       0.18721143, 0.18684554, 0.18901126]), 'std_score_time': array([3.01657264e-04, 2.01347053e-03, 3.12708985e-03, 3.62145557e-03,
       3.18463387e-04, 1.12893626e-03, 2.63566815e-03, 9.61483007e-05]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00238133, -0.02491039, -0.54886939, -0.54999446, -0.00238133,
       -0.02491039, -0.54886939, -0.54999446]), 'split1_test_score': array([-0.01744408, -0.02499969, -0.5497135 , -0.54999998, -0.01744408,
       -0.02499969, -0.5497135 , -0.54999998]), 'split2_test_score': array([-0.00562195, -0.02491463, -0.5490965 , -0.54999472, -0.00562195,
       -0.02491463, -0.5490965 , -0.54999472]), 'mean_test_score': array([-0.00848245, -0.02494157, -0.54922646, -0.54999638, -0.00848245,
       -0.02494157, -0.54922646, -0.54999638]), 'std_test_score': array([6.47345997e-03, 4.11335329e-05, 3.56651261e-04, 2.54505154e-06,
       6.47345997e-03, 4.11335329e-05, 3.56651261e-04, 2.54505154e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 22:34:51,453 - __main__ - INFO - (26) - BEST_SCORE_: -0.008482453613249554
2020-03-20 22:34:51,456 - __main__ - INFO - (26) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 22:37:39,091 - __main__ - INFO - (26) - NESTED CROSS VALIDATION with 3 fold: [-0.00238133 -0.01744408 -0.00562195]
2020-03-20 22:37:39,093 - __main__ - INFO - (26) - NESTED CROSS VALIDATION (mean): -0.008482453613249554
2020-03-20 23:04:45,520 - __main__ - INFO - (27) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:04:45,527 - __main__ - INFO - (27) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:04:45,532 - __main__ - INFO - (27) - DATA_REDUCTION_: t
2020-03-20 23:04:45,538 - __main__ - INFO - (27) - DATA_DIMENSION_: 5
2020-03-20 23:27:37,699 - __main__ - INFO - (27) - CV_RESULTS_: {'mean_fit_time': array([54.6361661 , 54.44150559, 54.48001695, 54.24896304, 53.82752188,
       53.53379591, 55.11814006, 54.95934574]), 'std_fit_time': array([0.25083953, 0.5057411 , 0.00968857, 0.28029271, 0.04934652,
       0.08514595, 0.39032079, 0.31302319]), 'mean_score_time': array([0.18824228, 0.18581533, 0.18786629, 0.18886534, 0.18750993,
       0.18783903, 0.19586364, 0.18746519]), 'std_score_time': array([0.00524663, 0.00086127, 0.00498158, 0.00274872, 0.00450044,
       0.00290553, 0.00916576, 0.00073312]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01149551, -0.025     , -0.54948256, -0.54999984, -0.01149551,
       -0.025     , -0.54948256, -0.54999984]), 'split1_test_score': array([-0.01608311, -0.025     , -0.54958819, -0.54999984, -0.01608311,
       -0.025     , -0.54958819, -0.54999984]), 'split2_test_score': array([-5.91779392e-07, -6.44727316e-03, -5.48664878e-01, -5.48851878e-01,
       -5.91779392e-07, -6.44727316e-03, -5.48664878e-01, -5.48851878e-01]), 'mean_test_score': array([-0.00919307, -0.01881576, -0.54924521, -0.54961718, -0.00919307,
       -0.01881576, -0.54924521, -0.54961718]), 'std_test_score': array([0.0067645 , 0.00874584, 0.00041261, 0.00054115, 0.0067645 ,
       0.00874584, 0.00041261, 0.00054115]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 23:27:37,711 - __main__ - INFO - (27) - BEST_SCORE_: -0.009193072160709899
2020-03-20 23:27:37,718 - __main__ - INFO - (27) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:30:21,753 - __main__ - INFO - (27) - NESTED CROSS VALIDATION with 3 fold: [-1.14955131e-02 -1.60831116e-02 -5.91779392e-07]
2020-03-20 23:30:21,755 - __main__ - INFO - (27) - NESTED CROSS VALIDATION (mean): -0.009193072160709899
2020-03-20 23:30:21,760 - __main__ - INFO - (28) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:30:21,762 - __main__ - INFO - (28) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:30:21,763 - __main__ - INFO - (28) - DATA_REDUCTION_: t
2020-03-20 23:30:21,764 - __main__ - INFO - (28) - DATA_DIMENSION_: 5
2020-03-20 23:53:25,273 - __main__ - INFO - (28) - CV_RESULTS_: {'mean_fit_time': array([54.72368916, 54.80798165, 55.03179987, 54.70416864, 54.26074576,
       54.12863994, 55.80955823, 55.4730982 ]), 'std_fit_time': array([0.19313724, 0.2021579 , 0.17601492, 0.0480769 , 0.14628879,
       0.18500719, 0.11879447, 0.10500299]), 'mean_score_time': array([0.18878214, 0.19703984, 0.18736498, 0.18507934, 0.18758663,
       0.19384392, 0.19188444, 0.19371239]), 'std_score_time': array([0.00147398, 0.01475694, 0.00094386, 0.00122702, 0.00335657,
       0.01134879, 0.0058165 , 0.00819166]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00540899, -0.02494843, -0.54901073, -0.54999514, -0.00540899,
       -0.02494843, -0.54901073, -0.54999514]), 'split1_test_score': array([-0.01727433, -0.025     , -0.54964396, -0.54999999, -0.01727433,
       -0.025     , -0.54964396, -0.54999999]), 'split2_test_score': array([-3.62390626e-04, -1.41431820e-02, -5.48649784e-01, -5.49322013e-01,
       -3.62390626e-04, -1.41431820e-02, -5.48649784e-01, -5.49322013e-01]), 'mean_test_score': array([-0.00768191, -0.02136387, -0.54910149, -0.54977238, -0.00768191,
       -0.02136387, -0.54910149, -0.54977238]), 'std_test_score': array([0.00708887, 0.00510584, 0.00041091, 0.00031846, 0.00708887,
       0.00510584, 0.00041091, 0.00031846]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 23:53:25,279 - __main__ - INFO - (28) - BEST_SCORE_: -0.007681905009356455
2020-03-20 23:53:25,285 - __main__ - INFO - (28) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:56:10,278 - __main__ - INFO - (28) - NESTED CROSS VALIDATION with 3 fold: [-0.00540899 -0.01727433 -0.00036239]
2020-03-20 23:56:10,280 - __main__ - INFO - (28) - NESTED CROSS VALIDATION (mean): -0.007681905009356455
2020-03-20 23:56:10,285 - __main__ - INFO - (29) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:56:10,286 - __main__ - INFO - (29) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:56:10,288 - __main__ - INFO - (29) - DATA_REDUCTION_: t
2020-03-20 23:56:10,289 - __main__ - INFO - (29) - DATA_DIMENSION_: 5
2020-03-21 00:19:29,028 - __main__ - INFO - (29) - CV_RESULTS_: {'mean_fit_time': array([54.79108675, 54.23043021, 55.24352249, 55.14232779, 57.70396241,
       56.95184724, 55.16065001, 54.86941123]), 'std_fit_time': array([0.1618902 , 0.04549928, 0.08339134, 0.59097275, 0.73692398,
       1.88751882, 0.08437936, 0.1443099 ]), 'mean_score_time': array([0.18586953, 0.18498945, 0.18266384, 0.18542743, 0.19859099,
       0.18719705, 0.18255242, 0.18673134]), 'std_score_time': array([0.00137768, 0.0042639 , 0.00092562, 0.00177148, 0.00552822,
       0.00584633, 0.00234809, 0.00243432]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01390492, -0.0249955 , -0.54946437, -0.54999947, -0.01390492,
       -0.0249955 , -0.54946437, -0.54999947]), 'split1_test_score': array([-0.002069  , -0.02395413, -0.5488194 , -0.54994227, -0.002069  ,
       -0.02395413, -0.5488194 , -0.54994227]), 'split2_test_score': array([-0.01020443, -0.02499135, -0.54930657, -0.54999946, -0.01020443,
       -0.02499135, -0.54930657, -0.54999946]), 'mean_test_score': array([-0.00872612, -0.02464699, -0.54919678, -0.5499804 , -0.00872612,
       -0.02464699, -0.54919678, -0.5499804 ]), 'std_test_score': array([4.94376976e-03, 4.89934008e-04, 2.74513894e-04, 2.69640086e-05,
       4.94376976e-03, 4.89934008e-04, 2.74513894e-04, 2.69640086e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 00:19:29,033 - __main__ - INFO - (29) - BEST_SCORE_: -0.008726116509591176
2020-03-21 00:19:29,041 - __main__ - INFO - (29) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:22:15,074 - __main__ - INFO - (29) - NESTED CROSS VALIDATION with 3 fold: [-0.01390492 -0.002069   -0.01020443]
2020-03-21 00:22:15,076 - __main__ - INFO - (29) - NESTED CROSS VALIDATION (mean): -0.008726116509591176
2020-03-21 00:22:15,088 - __main__ - INFO - (30) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:22:15,090 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:22:15,094 - __main__ - INFO - (30) - DATA_REDUCTION_: t
2020-03-21 00:22:15,096 - __main__ - INFO - (30) - DATA_DIMENSION_: 5
2020-03-21 00:45:34,260 - __main__ - INFO - (30) - CV_RESULTS_: {'mean_fit_time': array([56.04231008, 56.20057527, 55.7837108 , 55.68813523, 54.86543862,
       54.8101511 , 55.67581058, 55.12014866]), 'std_fit_time': array([0.51097833, 0.55764846, 0.25247223, 0.09022044, 0.14573133,
       0.09518431, 0.32403799, 0.1761345 ]), 'mean_score_time': array([0.18754133, 0.18922512, 0.18342892, 0.1901118 , 0.19062146,
       0.18395321, 0.18494964, 0.19256234]), 'std_score_time': array([0.00665132, 0.00378952, 0.00034879, 0.00527832, 0.00583798,
       0.00134804, 0.00057917, 0.00803468]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.0031799 , -0.54845758, -0.54864152, -0.        ,
       -0.0031799 , -0.54845758, -0.54864152]), 'split1_test_score': array([-0.01298012, -0.025     , -0.54946234, -0.54999973, -0.01298012,
       -0.025     , -0.54946234, -0.54999973]), 'split2_test_score': array([-0.01338225, -0.025     , -0.54946418, -0.549999  , -0.01338225,
       -0.025     , -0.54946418, -0.549999  ]), 'mean_test_score': array([-0.00878746, -0.01772663, -0.54912804, -0.54954675, -0.00878746,
       -0.01772663, -0.54912804, -0.54954675]), 'std_test_score': array([0.00621584, 0.01028609, 0.00047408, 0.0006401 , 0.00621584,
       0.01028609, 0.00047408, 0.0006401 ]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 00:45:34,265 - __main__ - INFO - (30) - BEST_SCORE_: -0.008787455521595834
2020-03-21 00:45:34,267 - __main__ - INFO - (30) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:48:19,942 - __main__ - INFO - (30) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.01298012 -0.01338225]
2020-03-21 00:48:19,944 - __main__ - INFO - (30) - NESTED CROSS VALIDATION (mean): -0.008787455521595834
2020-03-21 00:48:19,945 - __main__ - INFO - (31) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:48:19,946 - __main__ - INFO - (31) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:48:19,949 - __main__ - INFO - (31) - DATA_REDUCTION_: t
2020-03-21 00:48:19,950 - __main__ - INFO - (31) - DATA_DIMENSION_: 5
2020-03-21 01:11:59,630 - __main__ - INFO - (31) - CV_RESULTS_: {'mean_fit_time': array([55.32972558, 55.58895771, 57.42475057, 57.01862272, 56.32330648,
       55.69306207, 56.40254402, 56.75776045]), 'std_fit_time': array([0.43577022, 0.10970956, 0.69035801, 0.18811882, 0.0583136 ,
       0.19930319, 0.19622226, 0.23239229]), 'mean_score_time': array([0.18713586, 0.18507028, 0.18478266, 0.18886622, 0.19370159,
       0.19128942, 0.18528056, 0.18587844]), 'std_score_time': array([0.00047406, 0.00195213, 0.00058012, 0.0061922 , 0.0085164 ,
       0.00545678, 0.00299724, 0.00151309]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.0006032 , -0.01357761, -0.54867838, -0.54929512, -0.0006032 ,
       -0.01357761, -0.54867838, -0.54929512]), 'split1_test_score': array([-4.46298012e-05, -2.15662582e-02, -5.48576759e-01, -5.49824172e-01,
       -4.46298012e-05, -2.15662582e-02, -5.48576759e-01, -5.49824172e-01]), 'split2_test_score': array([-0.00132044, -0.0216776 , -0.54875761, -0.54982636, -0.00132044,
       -0.0216776 , -0.54875761, -0.54982636]), 'mean_test_score': array([-0.00065609, -0.01894049, -0.54867092, -0.54964855, -0.00065609,
       -0.01894049, -0.54867092, -0.54964855]), 'std_test_score': array([5.22186602e-04, 3.79240026e-03, 7.40221060e-05, 2.49916616e-04,
       5.22186602e-04, 3.79240026e-03, 7.40221060e-05, 2.49916616e-04]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 01:11:59,636 - __main__ - INFO - (31) - BEST_SCORE_: -0.0006560874172388313
2020-03-21 01:11:59,643 - __main__ - INFO - (31) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 01:14:49,424 - __main__ - INFO - (31) - NESTED CROSS VALIDATION with 3 fold: [-6.03196706e-04 -4.46298012e-05 -1.32043574e-03]
2020-03-21 01:14:49,426 - __main__ - INFO - (31) - NESTED CROSS VALIDATION (mean): -0.0006560874172388313
2020-03-21 01:14:49,427 - __main__ - INFO - (32) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 01:14:49,429 - __main__ - INFO - (32) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 01:14:49,430 - __main__ - INFO - (32) - DATA_REDUCTION_: t
2020-03-21 01:14:49,432 - __main__ - INFO - (32) - DATA_DIMENSION_: 5
2020-03-21 01:38:49,688 - __main__ - INFO - (32) - CV_RESULTS_: {'mean_fit_time': array([58.00984748, 59.50920089, 58.04555599, 57.93010974, 56.99588585,
       55.64074691, 55.9284296 , 55.81448476]), 'std_fit_time': array([0.6219032 , 0.90900853, 0.65740562, 0.12302974, 0.39848052,
       0.05317854, 0.16257797, 0.20243226]), 'mean_score_time': array([0.19128116, 0.20063575, 0.19549505, 0.19635844, 0.18555005,
       0.18759076, 0.18768048, 0.19411699]), 'std_score_time': array([0.00299969, 0.00777338, 0.00912161, 0.00104343, 0.00064633,
       0.00343552, 0.00723863, 0.01308485]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01969021, -0.025     , -0.54976719, -0.55      , -0.01969021,
       -0.025     , -0.54976719, -0.55      ]), 'split1_test_score': array([-0.        , -0.01611298, -0.5484969 , -0.54944494, -0.        ,
       -0.01611298, -0.5484969 , -0.54944494]), 'split2_test_score': array([-0.01139982, -0.02496713, -0.54937521, -0.5499977 , -0.01139982,
       -0.02496713, -0.54937521, -0.5499977 ]), 'mean_test_score': array([-0.01036334, -0.02202671, -0.5492131 , -0.54981421, -0.01036334,
       -0.02202671, -0.5492131 , -0.54981421]), 'std_test_score': array([0.00807184, 0.00418165, 0.00053111, 0.00026112, 0.00807184,
       0.00418165, 0.00053111, 0.00026112]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 01:38:49,693 - __main__ - INFO - (32) - BEST_SCORE_: -0.010363343461416201
2020-03-21 01:38:49,694 - __main__ - INFO - (32) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 01:41:36,193 - __main__ - INFO - (32) - NESTED CROSS VALIDATION with 3 fold: [-0.01969021 -0.         -0.01139982]
2020-03-21 01:41:36,195 - __main__ - INFO - (32) - NESTED CROSS VALIDATION (mean): -0.010363343461416201
2020-03-21 01:41:36,200 - __main__ - INFO - (33) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 01:41:36,202 - __main__ - INFO - (33) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 01:41:36,204 - __main__ - INFO - (33) - DATA_REDUCTION_: t
2020-03-21 01:41:36,205 - __main__ - INFO - (33) - DATA_DIMENSION_: 5
2020-03-21 02:05:08,384 - __main__ - INFO - (33) - CV_RESULTS_: {'mean_fit_time': array([55.66383354, 55.19883378, 56.7510945 , 56.43381532, 56.3065931 ,
       56.07883549, 56.04722627, 56.04177149]), 'std_fit_time': array([0.41855656, 0.23051781, 0.26192302, 0.37356171, 0.12032232,
       0.40240588, 0.15743192, 0.26190313]), 'mean_score_time': array([0.1898814 , 0.20200674, 0.18999847, 0.19127107, 0.19821604,
       0.19489535, 0.19051274, 0.19054842]), 'std_score_time': array([0.00650426, 0.01332391, 0.00250525, 0.00593138, 0.00303989,
       0.00908733, 0.00353267, 0.00377799]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-5.01323190e-04, -8.56430365e-03, -5.48711102e-01, -5.48980203e-01,
       -5.01323190e-04, -8.56430365e-03, -5.48711102e-01, -5.48980203e-01]), 'split1_test_score': array([-0.00135723, -0.02336269, -0.54880162, -0.54991432, -0.00135723,
       -0.02336269, -0.54880162, -0.54991432]), 'split2_test_score': array([-0.00556374, -0.0248769 , -0.5490904 , -0.54999075, -0.00556374,
       -0.0248769 , -0.5490904 , -0.54999075]), 'mean_test_score': array([-0.0024741 , -0.01893463, -0.5488677 , -0.54962842, -0.0024741 ,
       -0.01893463, -0.5488677 , -0.54962842]), 'std_test_score': array([0.00221247, 0.00735894, 0.00016174, 0.00045942, 0.00221247,
       0.00735894, 0.00016174, 0.00045942]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 02:05:08,390 - __main__ - INFO - (33) - BEST_SCORE_: -0.002474096168673273
2020-03-21 02:05:08,397 - __main__ - INFO - (33) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 02:07:54,920 - __main__ - INFO - (33) - NESTED CROSS VALIDATION with 3 fold: [-0.00050132 -0.00135723 -0.00556374]
2020-03-21 02:07:54,922 - __main__ - INFO - (33) - NESTED CROSS VALIDATION (mean): -0.002474096168673273
2020-03-21 02:07:54,924 - __main__ - INFO - (34) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 02:07:54,926 - __main__ - INFO - (34) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 02:07:54,929 - __main__ - INFO - (34) - DATA_REDUCTION_: t
2020-03-21 02:07:54,945 - __main__ - INFO - (34) - DATA_DIMENSION_: 5
2020-03-21 02:31:27,896 - __main__ - INFO - (34) - CV_RESULTS_: {'mean_fit_time': array([55.32744503, 55.52539778, 56.28403274, 55.73908742, 56.176368  ,
       56.20528817, 56.58706776, 56.99802478]), 'std_fit_time': array([0.23552031, 0.63036366, 0.48152097, 0.37344035, 0.40372033,
       0.30231424, 0.12915996, 0.49449379]), 'mean_score_time': array([0.18902699, 0.21056366, 0.18413671, 0.18985629, 0.19970711,
       0.19332568, 0.19327815, 0.18541765]), 'std_score_time': array([0.00561483, 0.0052168 , 0.00235561, 0.00569332, 0.01187922,
       0.01126941, 0.00686982, 0.00078894]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01603173, -0.025     , -0.54960413, -0.54999999, -0.01603173,
       -0.025     , -0.54960413, -0.54999999]), 'split1_test_score': array([-0.01092816, -0.02498678, -0.54934201, -0.54999912, -0.01092816,
       -0.02498678, -0.54934201, -0.54999912]), 'split2_test_score': array([-0.00112306, -0.02344395, -0.54868851, -0.54991385, -0.00112306,
       -0.02344395, -0.54868851, -0.54991385]), 'mean_test_score': array([-0.00936098, -0.02447691, -0.54921155, -0.54997099, -0.00936098,
       -0.02447691, -0.54921155, -0.54997099]), 'std_test_score': array([6.18649785e-03, 7.30435448e-04, 3.85018334e-04, 4.04028144e-05,
       6.18649785e-03, 7.30435448e-04, 3.85018334e-04, 4.04028144e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 02:31:27,901 - __main__ - INFO - (34) - BEST_SCORE_: -0.009360982805420371
2020-03-21 02:31:27,912 - __main__ - INFO - (34) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 02:34:14,873 - __main__ - INFO - (34) - NESTED CROSS VALIDATION with 3 fold: [-0.01603173 -0.01092816 -0.00112306]
2020-03-21 02:34:14,876 - __main__ - INFO - (34) - NESTED CROSS VALIDATION (mean): -0.009360982805420371
2020-03-21 02:34:14,884 - __main__ - INFO - (35) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 02:34:14,894 - __main__ - INFO - (35) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 02:34:14,895 - __main__ - INFO - (35) - DATA_REDUCTION_: t
2020-03-21 02:34:14,898 - __main__ - INFO - (35) - DATA_DIMENSION_: 5
2020-03-21 02:57:38,309 - __main__ - INFO - (35) - CV_RESULTS_: {'mean_fit_time': array([55.14401921, 54.87032223, 55.36915429, 56.04784075, 55.02738738,
       55.78955817, 56.94144424, 56.37106975]), 'std_fit_time': array([0.04045737, 0.11303664, 0.40532846, 0.51351774, 0.26508689,
       0.09985893, 0.20107312, 0.23340499]), 'mean_score_time': array([0.18152769, 0.19734208, 0.18930189, 0.18821589, 0.18459996,
       0.18607386, 0.1909678 , 0.18548799]), 'std_score_time': array([0.00035406, 0.01806118, 0.00338908, 0.00448512, 0.00153259,
       0.0028621 , 0.00809437, 0.00199539]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.0071659 , -0.54847707, -0.54908596, -0.        ,
       -0.0071659 , -0.54847707, -0.54908596]), 'split1_test_score': array([-0.02494541, -0.025     , -0.5499977 , -0.55      , -0.02494541,
       -0.025     , -0.5499977 , -0.55      ]), 'split2_test_score': array([-0.00499802, -0.0237994 , -0.54906576, -0.54993837, -0.00499802,
       -0.0237994 , -0.54906576, -0.54993837]), 'mean_test_score': array([-0.00998114, -0.0186551 , -0.54918018, -0.54967478, -0.00998114,
       -0.0186551 , -0.54918018, -0.54967478]), 'std_test_score': array([0.01077627, 0.00813886, 0.00062604, 0.00041711, 0.01077627,
       0.00813886, 0.00062604, 0.00041711]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 02:57:38,315 - __main__ - INFO - (35) - BEST_SCORE_: -0.009981142912505271
2020-03-21 02:57:38,319 - __main__ - INFO - (35) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 03:00:25,106 - __main__ - INFO - (35) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.02494541 -0.00499802]
2020-03-21 03:00:25,108 - __main__ - INFO - (35) - NESTED CROSS VALIDATION (mean): -0.009981142912505271
2020-03-21 03:00:25,111 - __main__ - INFO - (36) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 03:00:25,122 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 03:00:25,124 - __main__ - INFO - (36) - DATA_REDUCTION_: t
2020-03-21 03:00:25,125 - __main__ - INFO - (36) - DATA_DIMENSION_: 5
2020-03-21 03:24:07,336 - __main__ - INFO - (36) - CV_RESULTS_: {'mean_fit_time': array([55.60556674, 55.29372025, 56.64821068, 56.65452703, 55.65653737,
       56.12175457, 57.14293949, 58.1570696 ]), 'std_fit_time': array([0.43558667, 0.35114882, 0.21045429, 0.21203339, 0.08503165,
       0.44539553, 0.49355213, 0.44339531]), 'mean_score_time': array([0.18643204, 0.18904614, 0.1886843 , 0.19268902, 0.18798018,
       0.19153968, 0.1928877 , 0.19779722]), 'std_score_time': array([0.00081339, 0.0010175 , 0.0027838 , 0.00297931, 0.00400601,
       0.00519035, 0.00092475, 0.0144945 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00527503, -0.0249076 , -0.54919501, -0.5499942 , -0.00527503,
       -0.0249076 , -0.54919501, -0.5499942 ]), 'split1_test_score': array([-0.00459701, -0.02499046, -0.5490614 , -0.54999941, -0.00459701,
       -0.02499046, -0.5490614 , -0.54999941]), 'split2_test_score': array([-0.00174817, -0.02468659, -0.54875098, -0.54998038, -0.00174817,
       -0.02468659, -0.54875098, -0.54998038]), 'mean_test_score': array([-0.0038734 , -0.02486155, -0.54900246, -0.54999133, -0.0038734 ,
       -0.02486155, -0.54900246, -0.54999133]), 'std_test_score': array([1.52804744e-03, 1.28254309e-04, 1.86004300e-04, 8.02669400e-06,
       1.52804744e-03, 1.28254309e-04, 1.86004300e-04, 8.02669400e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 03:24:07,342 - __main__ - INFO - (36) - BEST_SCORE_: -0.0038734026989434224
2020-03-21 03:24:07,345 - __main__ - INFO - (36) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 03:27:01,312 - __main__ - INFO - (36) - NESTED CROSS VALIDATION with 3 fold: [-0.00527503 -0.00459701 -0.00174817]
2020-03-21 03:27:01,314 - __main__ - INFO - (36) - NESTED CROSS VALIDATION (mean): -0.0038734026989434224
2020-03-21 03:27:01,316 - __main__ - INFO - (37) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 03:27:01,320 - __main__ - INFO - (37) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 03:27:01,326 - __main__ - INFO - (37) - DATA_REDUCTION_: t
2020-03-21 03:27:01,327 - __main__ - INFO - (37) - DATA_DIMENSION_: 5
2020-03-21 03:50:49,195 - __main__ - INFO - (37) - CV_RESULTS_: {'mean_fit_time': array([57.38688135, 56.4766047 , 56.3068308 , 56.64720813, 56.06482999,
       56.16616352, 56.90490452, 57.25480596]), 'std_fit_time': array([0.1888643 , 0.23387139, 0.11186823, 0.10013757, 0.1309603 ,
       0.17085583, 0.16451339, 0.33443064]), 'mean_score_time': array([0.19050455, 0.18936443, 0.18710176, 0.18907952, 0.19268696,
       0.1889569 , 0.18672276, 0.18950709]), 'std_score_time': array([0.00374324, 0.00384759, 0.00126358, 0.00060886, 0.00435737,
       0.00156366, 0.00109448, 0.00106133]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01956873, -0.025     , -0.54974789, -0.55      , -0.01956873,
       -0.025     , -0.54974789, -0.55      ]), 'split1_test_score': array([-0.01181044, -0.02499167, -0.54934945, -0.54999948, -0.01181044,
       -0.02499167, -0.54934945, -0.54999948]), 'split2_test_score': array([-0.00567267, -0.02408708, -0.54900659, -0.54995082, -0.00567267,
       -0.02408708, -0.54900659, -0.54995082]), 'mean_test_score': array([-0.01235061, -0.02469291, -0.54936798, -0.54998343, -0.01235061,
       -0.02469291, -0.54936798, -0.54998343]), 'std_test_score': array([5.68588751e-03, 4.28406011e-04, 3.02919518e-04, 2.30642166e-05,
       5.68588751e-03, 4.28406011e-04, 3.02919518e-04, 2.30642166e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 03:50:49,200 - __main__ - INFO - (37) - BEST_SCORE_: -0.012350614308860594
2020-03-21 03:50:49,208 - __main__ - INFO - (37) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 03:53:39,674 - __main__ - INFO - (37) - NESTED CROSS VALIDATION with 3 fold: [-0.01956873 -0.01181044 -0.00567267]
2020-03-21 03:53:39,676 - __main__ - INFO - (37) - NESTED CROSS VALIDATION (mean): -0.012350614308860594
2020-03-21 03:53:39,683 - __main__ - INFO - (38) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 03:53:39,685 - __main__ - INFO - (38) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 03:53:39,686 - __main__ - INFO - (38) - DATA_REDUCTION_: t
2020-03-21 03:53:39,687 - __main__ - INFO - (38) - DATA_DIMENSION_: 5
2020-03-21 04:17:19,441 - __main__ - INFO - (38) - CV_RESULTS_: {'mean_fit_time': array([57.00837882, 56.64827283, 56.93477074, 56.40262508, 55.42928934,
       55.57038824, 56.26155424, 56.51898869]), 'std_fit_time': array([0.34287162, 0.16928083, 0.42228926, 0.20783329, 0.19896111,
       0.22516199, 0.30960463, 0.09965183]), 'mean_score_time': array([0.19254144, 0.18818053, 0.1903158 , 0.19224119, 0.20018291,
       0.19475309, 0.19852765, 0.19196359]), 'std_score_time': array([0.00507008, 0.00110216, 0.00475047, 0.00743758, 0.02190795,
       0.00775118, 0.00823003, 0.0010829 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.01417414, -0.54884541, -0.54947785, -0.        ,
       -0.01417414, -0.54884541, -0.54947785]), 'split1_test_score': array([-0.00606787, -0.02432068, -0.54920722, -0.54996768, -0.00606787,
       -0.02432068, -0.54920722, -0.54996768]), 'split2_test_score': array([-0.00609581, -0.02432068, -0.54920699, -0.54996768, -0.00609581,
       -0.02432068, -0.54920699, -0.54996768]), 'mean_test_score': array([-0.00405456, -0.0209385 , -0.54908654, -0.5498044 , -0.00405456,
       -0.0209385 , -0.54908654, -0.5498044 ]), 'std_test_score': array([0.00286703, 0.00478313, 0.0001705 , 0.0002309 , 0.00286703,
       0.00478313, 0.0001705 , 0.0002309 ]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 04:17:19,447 - __main__ - INFO - (38) - BEST_SCORE_: -0.0040545598331815196
2020-03-21 04:17:19,449 - __main__ - INFO - (38) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 04:20:09,869 - __main__ - INFO - (38) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00606787 -0.00609581]
2020-03-21 04:20:09,871 - __main__ - INFO - (38) - NESTED CROSS VALIDATION (mean): -0.0040545598331815196
2020-03-21 04:20:09,880 - __main__ - INFO - (39) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 04:20:09,883 - __main__ - INFO - (39) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 04:20:09,884 - __main__ - INFO - (39) - DATA_REDUCTION_: t
2020-03-21 04:20:09,886 - __main__ - INFO - (39) - DATA_DIMENSION_: 5
2020-03-21 04:43:50,046 - __main__ - INFO - (39) - CV_RESULTS_: {'mean_fit_time': array([56.50871722, 57.86230246, 57.57691685, 57.17935443, 55.85629344,
       54.80814028, 55.31446679, 56.00554291]), 'std_fit_time': array([0.21862445, 0.32040547, 0.36798909, 0.10916855, 0.55516067,
       0.12393528, 0.39829858, 0.32086238]), 'mean_score_time': array([0.19025556, 0.1959188 , 0.18822908, 0.19485315, 0.18788282,
       0.18711098, 0.18707657, 0.20897627]), 'std_score_time': array([0.0071834 , 0.00524579, 0.00544036, 0.01017817, 0.0029568 ,
       0.00327395, 0.00598088, 0.01540314]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.02418414, -0.54894797, -0.54995557, -0.        ,
       -0.02418414, -0.54894797, -0.54995557]), 'split1_test_score': array([-0.025     , -0.025     , -0.54981518, -0.55      , -0.025     ,
       -0.025     , -0.54981518, -0.55      ]), 'split2_test_score': array([-0.025     , -0.02397702, -0.54938054, -0.54994525, -0.025     ,
       -0.02397702, -0.54938054, -0.54994525]), 'mean_test_score': array([-0.01666667, -0.02438705, -0.54938123, -0.54996694, -0.01666667,
       -0.02438705, -0.54938123, -0.54996694]), 'std_test_score': array([1.17851130e-02, 4.41592031e-04, 3.54035131e-04, 2.37523316e-05,
       1.17851130e-02, 4.41592031e-04, 3.54035131e-04, 2.37523316e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 04:43:50,052 - __main__ - INFO - (39) - BEST_SCORE_: -0.016666666666666666
2020-03-21 04:43:50,063 - __main__ - INFO - (39) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 04:46:36,141 - __main__ - INFO - (39) - NESTED CROSS VALIDATION with 3 fold: [-0.    -0.025 -0.025]
2020-03-21 04:46:36,146 - __main__ - INFO - (39) - NESTED CROSS VALIDATION (mean): -0.016666666666666666
