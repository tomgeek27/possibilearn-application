2020-02-12 16:15:18,982 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 16:41:48,208 - __main__ - INFO - (0) - CV_RESULTS_: {'mean_fit_time': array([63.17302052, 62.58778532, 63.33420944, 63.10724147, 62.8100907 ,
       62.87251647, 63.37822914, 63.20987908]), 'std_fit_time': array([0.14145476, 0.31457707, 0.30395743, 0.29895124, 0.47582792,
       0.28454385, 0.19968226, 0.27413556]), 'mean_score_time': array([0.2293125 , 0.23184109, 0.22633791, 0.22114269, 0.2254262 ,
       0.22588046, 0.22644122, 0.22285922]), 'std_score_time': array([0.00259482, 0.00437033, 0.00413288, 0.00253145, 0.00912193,
       0.0063663 , 0.00197791, 0.00984847]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01489583, -0.02464703, -0.54923427, -0.54997453, -0.01489583,
       -0.02464703, -0.54923427, -0.54997453]), 'split1_test_score': array([-0.025  , -0.025  , -0.55006, -0.55   , -0.025  , -0.025  ,
       -0.55006, -0.55   ]), 'split2_test_score': array([-0.025     , -0.025     , -0.54996514, -0.55      , -0.025     ,
       -0.025     , -0.54996514, -0.55      ]), 'mean_test_score': array([-0.02163194, -0.02488234, -0.54975314, -0.54999151, -0.02163194,
       -0.02488234, -0.54975314, -0.54999151]), 'std_test_score': array([4.76315366e-03, 1.66393728e-04, 3.68933088e-04, 1.20053874e-05,
       4.76315366e-03, 1.66393728e-04, 3.68933088e-04, 1.20053874e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-12 16:41:48,225 - __main__ - INFO - (0) - BEST_SCORE_: -0.02163194175048098
2020-02-12 16:41:48,235 - __main__ - INFO - (0) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-12 16:41:48,238 - __main__ - INFO - (1) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 17:08:22,873 - __main__ - INFO - (1) - CV_RESULTS_: {'mean_fit_time': array([63.01130581, 62.38491559, 64.0180529 , 63.53964488, 62.64776754,
       62.79190191, 63.41552941, 64.4965473 ]), 'std_fit_time': array([0.57231078, 0.23235842, 0.23499456, 0.30758569, 0.06283609,
       0.426151  , 0.34051357, 0.82776636]), 'mean_score_time': array([0.22385947, 0.22920529, 0.22258838, 0.22962499, 0.23204311,
       0.23125251, 0.21945858, 0.22408811]), 'std_score_time': array([0.00485289, 0.00996859, 0.00173313, 0.00180385, 0.00448296,
       0.00686015, 0.00365078, 0.0037745 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01960858, -0.025     , -0.54975356, -0.54999981, -0.01960858,
       -0.025     , -0.54975356, -0.54999981]), 'split1_test_score': array([-0.        , -0.02000334, -0.54852327, -0.5497481 , -0.        ,
       -0.02000334, -0.54852327, -0.5497481 ]), 'split2_test_score': array([-2.89842959e-05, -4.67036247e-03, -5.48558848e-01, -5.48745532e-01,
       -2.89842959e-05, -4.67036247e-03, -5.48558848e-01, -5.48745532e-01]), 'mean_test_score': array([-0.00654585, -0.0165579 , -0.54894523, -0.54949781, -0.00654585,
       -0.0165579 , -0.54894523, -0.54949781]), 'std_test_score': array([0.00923675, 0.00864973, 0.00057177, 0.00054178, 0.00923675,
       0.00864973, 0.00057177, 0.00054178]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-12 17:08:22,879 - __main__ - INFO - (1) - BEST_SCORE_: -0.006545854580516749
2020-02-12 17:08:22,881 - __main__ - INFO - (1) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-12 17:08:22,894 - __main__ - INFO - (2) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 17:34:48,539 - __main__ - INFO - (2) - CV_RESULTS_: {'mean_fit_time': array([62.83694998, 62.25931541, 63.27059976, 63.52252364, 62.24380398,
       62.80592267, 63.19667363, 63.10460893]), 'std_fit_time': array([0.16771704, 0.21594896, 0.20751167, 0.52143223, 0.17527174,
       0.30482548, 0.15768152, 0.3955442 ]), 'mean_score_time': array([0.23211702, 0.2231528 , 0.23438891, 0.2304225 , 0.2216258 ,
       0.22177005, 0.23400958, 0.22745212]), 'std_score_time': array([0.00268591, 0.00493236, 0.01117892, 0.00203804, 0.0038999 ,
       0.01092786, 0.00434438, 0.0030915 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-1.91883090e-04, -3.66387595e-03, -2.85218271e-02, -5.48920612e-01,
       -1.91883090e-04, -3.66387595e-03, -2.84793243e-02, -5.48920612e-01]), 'split1_test_score': array([-7.58445967e-05, -1.05059993e-03, -2.86674793e-02, -5.48703459e-01,
       -7.58445967e-05, -1.05059993e-03, -2.90235906e-02, -5.48703459e-01]), 'split2_test_score': array([-0.025     , -0.025     , -0.55000006, -0.55      , -0.025     ,
       -0.025     , -0.55000006, -0.55      ]), 'mean_test_score': array([-0.00842258, -0.00990483, -0.20239645, -0.54920802, -0.00842258,
       -0.00990483, -0.20250099, -0.54920802]), 'std_test_score': array([0.0117221 , 0.01072708, 0.24579287, 0.00056699, 0.0117221 ,
       0.01072708, 0.24571905, 0.00056699]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 7], dtype=int32)}
2020-02-12 17:34:48,547 - __main__ - INFO - (2) - BEST_SCORE_: -0.008422575895590336
2020-02-12 17:34:48,557 - __main__ - INFO - (2) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-12 17:34:48,569 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 23:02:29,564 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 23:03:28,522 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 23:28:52,897 - __main__ - INFO - (3) - CV_RESULTS_: {'mean_fit_time': array([59.35369372, 59.66135494, 61.00740155, 61.3794717 , 60.4911902 ,
       60.02907085, 60.94879866, 61.0150733 ]), 'std_fit_time': array([0.40636578, 0.05021181, 0.66608971, 0.06855969, 0.25128273,
       0.02156253, 0.10858477, 0.30754681]), 'mean_score_time': array([0.21966807, 0.22231531, 0.2231915 , 0.22348913, 0.22457925,
       0.2275722 , 0.21657785, 0.23093979]), 'std_score_time': array([0.00431348, 0.00706402, 0.00663167, 0.00918567, 0.00682849,
       0.00463777, 0.01282442, 0.00228972]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02844749, -0.02557425, -0.55421744, -0.55111344, -0.02844749,
       -0.02557425, -0.55421744, -0.55111344]), 'split1_test_score': array([-0.025     , -0.025     , -0.55001518, -0.55      , -0.025     ,
       -0.025     , -0.55001518, -0.55      ]), 'split2_test_score': array([-0.025     , -0.025     , -0.55007623, -0.55      , -0.025     ,
       -0.025     , -0.55007623, -0.55      ]), 'mean_test_score': array([-0.02614916, -0.02519142, -0.55143628, -0.55037115, -0.02614916,
       -0.02519142, -0.55143628, -0.55037115]), 'std_test_score': array([0.00162516, 0.00027071, 0.00196673, 0.00052488, 0.00162516,
       0.00027071, 0.00196673, 0.00052488]), 'rank_test_score': array([3, 1, 7, 5, 3, 1, 7, 5], dtype=int32)}
2020-02-12 23:28:52,909 - __main__ - INFO - (3) - BEST_SCORE_: -0.02519141794489847
2020-02-12 23:28:52,912 - __main__ - INFO - (3) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-02-12 23:28:52,917 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-12 23:29:59,464 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 11:23:34,783 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 11:46:56,250 - __main__ - INFO - (4) - CV_RESULTS_: {'mean_fit_time': array([53.81830033, 54.63460199, 55.579343  , 56.2524418 , 54.75441122,
       55.72124163, 56.5876255 , 56.80895583]), 'std_fit_time': array([0.38881195, 0.24714029, 0.14795713, 0.16824962, 0.09943964,
       0.31743617, 0.21533208, 0.0925062 ]), 'mean_score_time': array([0.19707831, 0.21750736, 0.19651421, 0.22857356, 0.21002086,
       0.20333695, 0.19908985, 0.2212673 ]), 'std_score_time': array([0.00683351, 0.01886336, 0.00806481, 0.02921149, 0.01347028,
       0.0114485 , 0.01028867, 0.00894424]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00035881, -0.00214509, -0.00022283, -0.00033078, -0.00035881,
       -0.00214509, -0.0002214 , -0.06126828]), 'split1_test_score': array([-0.025, -0.025, -0.025, -0.025, -0.025, -0.025, -0.025, -0.025]), 'split2_test_score': array([-0.00396998, -0.02433507, -0.0004895 , -0.00152582, -0.00396998,
       -0.02433507, -0.00049336, -0.00152582]), 'mean_test_score': array([-0.00977627, -0.01716005, -0.00857078, -0.0089522 , -0.00977627,
       -0.01716005, -0.00857159, -0.0292647 ]), 'std_test_score': array([0.01086529, 0.01062065, 0.01161773, 0.01135799, 0.01086529,
       0.01062065, 0.01161717, 0.02457548]), 'rank_test_score': array([4, 6, 1, 3, 4, 6, 2, 8], dtype=int32)}
2020-02-13 11:46:56,264 - __main__ - INFO - (4) - BEST_SCORE_: -0.008570775797953812
2020-02-13 11:46:56,273 - __main__ - INFO - (4) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 11:46:56,282 - __main__ - INFO - (5) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 12:09:56,131 - __main__ - INFO - (5) - CV_RESULTS_: {'mean_fit_time': array([55.86843443, 54.69507384, 55.15719644, 54.92078718, 53.77610604,
       53.87137826, 54.91278068, 54.84946314]), 'std_fit_time': array([0.21085611, 0.28797272, 0.29319179, 0.04473799, 0.57642284,
       0.2812993 , 0.098044  , 0.20290679]), 'mean_score_time': array([0.19612789, 0.21928438, 0.20585235, 0.20312595, 0.2014943 ,
       0.20364904, 0.20921143, 0.20508838]), 'std_score_time': array([0.00408501, 0.00656642, 0.0052499 , 0.00918068, 0.01361186,
       0.01055148, 0.01011614, 0.00676433]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00085827, -0.01614941, -0.54865038, -0.54951376, -0.00085827,
       -0.01614941, -0.54865038, -0.54951376]), 'split1_test_score': array([-0.        , -0.02377134, -0.54900009, -0.54993429, -0.        ,
       -0.02377134, -0.54900009, -0.54993429]), 'split2_test_score': array([-0.01525097, -0.02499607, -0.54956905, -0.54999676, -0.01525097,
       -0.02499607, -0.54956905, -0.54999676]), 'mean_test_score': array([-0.00536975, -0.02163894, -0.54907317, -0.54981494, -0.00536975,
       -0.02163894, -0.54907317, -0.54981494]), 'std_test_score': array([0.00699586, 0.00391375, 0.00037859, 0.00021449, 0.00699586,
       0.00391375, 0.00037859, 0.00021449]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 12:09:56,138 - __main__ - INFO - (5) - BEST_SCORE_: -0.005369747537272234
2020-02-13 12:09:56,142 - __main__ - INFO - (5) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 12:09:56,150 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 12:26:30,035 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 12:49:47,772 - __main__ - INFO - (6) - CV_RESULTS_: {'mean_fit_time': array([55.32469757, 55.5704294 , 56.27281928, 55.7046783 , 54.91760349,
       55.07338667, 55.56376179, 55.38084046]), 'std_fit_time': array([0.27138301, 0.27223857, 0.27706753, 0.08859663, 0.10510136,
       0.02656481, 0.21982169, 0.43874779]), 'mean_score_time': array([0.21361915, 0.21202366, 0.208848  , 0.19980113, 0.20454621,
       0.20787152, 0.21358013, 0.20958996]), 'std_score_time': array([0.00310633, 0.01565195, 0.00821934, 0.00798772, 0.01256486,
       0.00183616, 0.0153611 , 0.01602806]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.        , -0.00661027, -0.5484375 , -0.54895397, -0.        ,
       -0.00661027, -0.5484375 , -0.54895397]), 'split1_test_score': array([-0.02394841, -0.025     , -0.54995475, -0.55      , -0.02394841,
       -0.025     , -0.54995475, -0.55      ]), 'split2_test_score': array([-1.31624112e-04, -8.61432991e-03, -5.48550312e-01, -5.49085091e-01,
       -1.31624112e-04, -8.61432991e-03, -5.48550312e-01, -5.49085091e-01]), 'mean_test_score': array([-0.00802668, -0.0134082 , -0.54898086, -0.54934635, -0.00802668,
       -0.0134082 , -0.54898086, -0.54934635]), 'std_test_score': array([0.01125849, 0.00823737, 0.00069019, 0.00046529, 0.01125849,
       0.00823737, 0.00069019, 0.00046529]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 12:49:47,778 - __main__ - INFO - (6) - BEST_SCORE_: -0.008026678309773026
2020-02-13 12:49:47,781 - __main__ - INFO - (6) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 12:49:47,788 - __main__ - INFO - (7) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 13:13:11,795 - __main__ - INFO - (7) - CV_RESULTS_: {'mean_fit_time': array([55.41931502, 55.52893178, 56.29358141, 56.01745407, 55.24983883,
       55.49595968, 55.99579271, 55.74888976]), 'std_fit_time': array([0.32803806, 0.13065451, 0.33549309, 0.25059179, 0.20059322,
       0.62404386, 0.1254931 , 0.26112285]), 'mean_score_time': array([0.20602393, 0.20609911, 0.20917336, 0.22239431, 0.20557515,
       0.20976917, 0.20579314, 0.19993718]), 'std_score_time': array([0.01815524, 0.00569554, 0.01377759, 0.01428448, 0.01166159,
       0.01219066, 0.01202339, 0.00730455]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01074224, -0.02489852, -0.54928852, -0.54999091, -0.01074224,
       -0.02489852, -0.54928852, -0.54999091]), 'split1_test_score': array([-0.00984222, -0.02415155, -0.54924444, -0.54995544, -0.00984222,
       -0.02415155, -0.54924444, -0.54995544]), 'split2_test_score': array([-0.02344999, -0.025     , -0.54984781, -0.54999993, -0.02344999,
       -0.025     , -0.54984781, -0.54999993]), 'mean_test_score': array([-0.01467815, -0.02468336, -0.54946026, -0.54998209, -0.01467815,
       -0.02468336, -0.54946026, -0.54998209]), 'std_test_score': array([6.21350287e-03, 3.78319445e-04, 2.74634676e-04, 1.92031398e-05,
       6.21350287e-03, 3.78319445e-04, 2.74634676e-04, 1.92031398e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 13:13:11,801 - __main__ - INFO - (7) - BEST_SCORE_: -0.014678147292168925
2020-02-13 13:13:11,809 - __main__ - INFO - (7) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 13:13:11,814 - __main__ - INFO - (8) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 13:36:34,896 - __main__ - INFO - (8) - CV_RESULTS_: {'mean_fit_time': array([54.4669679 , 55.03470365, 55.90061649, 56.4918886 , 55.37595169,
       55.31870834, 56.17297419, 56.41439557]), 'std_fit_time': array([0.04226622, 0.68681766, 0.14877143, 0.37106602, 0.07335608,
       0.26363631, 0.19587045, 0.1521248 ]), 'mean_score_time': array([0.21069948, 0.19673721, 0.20916724, 0.21705405, 0.20611215,
       0.21627673, 0.19652518, 0.20396805]), 'std_score_time': array([0.01311884, 0.00172689, 0.01074117, 0.00911052, 0.00646617,
       0.00692402, 0.00335579, 0.01136015]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-4.82894839e-04, -1.95408479e-02, -2.21954966e-04, -5.49659792e-01,
       -4.82894839e-04, -1.95408479e-02, -2.21954979e-04, -5.49659792e-01]), 'split1_test_score': array([-0.025     , -0.025     , -0.00156234, -0.55      , -0.025     ,
       -0.025     , -0.00156234, -0.55      ]), 'split2_test_score': array([-0.02044144, -0.02499902, -0.00946926, -0.54999995, -0.02044144,
       -0.02499902, -0.00858982, -0.54999995]), 'mean_test_score': array([-0.01530811, -0.02317996, -0.00375118, -0.54988658, -0.01530811,
       -0.02317996, -0.00345804, -0.54988658]), 'std_test_score': array([0.01064692, 0.00257324, 0.00408015, 0.00016036, 0.01064692,
       0.00257324, 0.00366975, 0.00016036]), 'rank_test_score': array([3, 5, 2, 7, 3, 5, 1, 7], dtype=int32)}
2020-02-13 13:36:34,909 - __main__ - INFO - (8) - BEST_SCORE_: -0.0034580387201641597
2020-02-13 13:36:34,910 - __main__ - INFO - (8) - BEST_PARAMS_: {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 13:36:34,914 - __main__ - INFO - (9) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 14:00:01,554 - __main__ - INFO - (9) - CV_RESULTS_: {'mean_fit_time': array([55.11408718, 55.09412376, 55.80985053, 55.92664552, 55.56901725,
       55.52301423, 56.57957395, 56.63987398]), 'std_fit_time': array([0.2388436 , 0.32966471, 0.17677492, 0.11118406, 0.23824311,
       0.13321912, 0.21172408, 0.20196417]), 'mean_score_time': array([0.20405189, 0.22360206, 0.21054252, 0.19785865, 0.20275847,
       0.21661059, 0.2087489 , 0.21111401]), 'std_score_time': array([0.00590919, 0.00578163, 0.00605797, 0.00110335, 0.0081579 ,
       0.0076274 , 0.00990488, 0.00425875]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-8.93147462e-11, -5.48301672e-09, -5.48510292e-01, -5.48437892e-01,
       -8.93147462e-11, -5.48301672e-09, -5.48510292e-01, -5.48437892e-01]), 'split1_test_score': array([-0.02500028, -0.025     , -0.55003913, -0.55      , -0.02500028,
       -0.025     , -0.55003913, -0.55      ]), 'split2_test_score': array([-0.01604137, -0.02498823, -0.5494635 , -0.54999569, -0.01604137,
       -0.02498823, -0.5494635 , -0.54999569]), 'mean_test_score': array([-0.01368055, -0.01666275, -0.54933764, -0.54947786, -0.01368055,
       -0.01666275, -0.54933764, -0.54947786]), 'std_test_score': array([0.01034194, 0.01178234, 0.00063046, 0.00073537, 0.01034194,
       0.01178234, 0.00063046, 0.00073537]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 14:00:01,560 - __main__ - INFO - (9) - BEST_SCORE_: -0.013680548893748442
2020-02-13 14:00:01,570 - __main__ - INFO - (9) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 14:00:01,575 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 14:23:35,749 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([55.35967652, 55.76294557, 56.73390802, 56.38324904, 55.92730633,
       56.14518015, 56.04356496, 56.53944993]), 'std_fit_time': array([0.05018298, 0.26697016, 0.333228  , 0.39150994, 0.85613767,
       0.44587474, 0.11763444, 0.55213135]), 'mean_score_time': array([0.2107331 , 0.20207453, 0.22192653, 0.23416448, 0.2244664 ,
       0.22743281, 0.21748972, 0.2120448 ]), 'std_score_time': array([0.00609413, 0.01064623, 0.02290334, 0.00737609, 0.02415546,
       0.02489353, 0.01354449, 0.01434686]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-4.74016218e-04, -1.90336395e-02, -5.48666600e-01, -5.49674535e-01,
       -4.74016218e-04, -1.90336395e-02, -5.48666600e-01, -5.49674535e-01]), 'split1_test_score': array([-0.00787885, -0.02484316, -0.54919559, -0.54999007, -0.00787885,
       -0.02484316, -0.54919559, -0.54999007]), 'split2_test_score': array([-0.00696695, -0.02487039, -0.54909702, -0.54999153, -0.00696695,
       -0.02487039, -0.54909702, -0.54999153]), 'mean_test_score': array([-0.0051066 , -0.02291573, -0.5489864 , -0.54988538, -0.0051066 ,
       -0.02291573, -0.5489864 , -0.54988538]), 'std_test_score': array([0.00329682, 0.00274507, 0.00022969, 0.00014909, 0.00329682,
       0.00274507, 0.00022969, 0.00014909]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 14:23:35,755 - __main__ - INFO - (10) - BEST_SCORE_: -0.0051066036039288274
2020-02-13 14:23:35,764 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 14:23:35,774 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 14:47:30,816 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([55.8606468 , 56.06787745, 57.20507916, 57.53872291, 57.1538496 ,
       56.35454957, 57.38626758, 57.77618074]), 'std_fit_time': array([0.16071523, 0.19559088, 0.18534271, 0.32946281, 0.74206571,
       0.14400952, 0.10453763, 0.21690552]), 'mean_score_time': array([0.20455472, 0.21377707, 0.21949458, 0.21187973, 0.20938857,
       0.21868928, 0.21995711, 0.22235584]), 'std_score_time': array([0.00950256, 0.00321797, 0.00467372, 0.011697  , 0.01003476,
       0.00276934, 0.0073874 , 0.01782606]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02270752, -0.025     , -0.54988688, -0.54999998, -0.02270752,
       -0.025     , -0.54988688, -0.54999998]), 'split1_test_score': array([-0.01359622, -0.02494648, -0.54942411, -0.54999685, -0.01359622,
       -0.02494648, -0.54942411, -0.54999685]), 'split2_test_score': array([-0.01896268, -0.02498598, -0.54970827, -0.54999902, -0.01896268,
       -0.02498598, -0.54970827, -0.54999902]), 'mean_test_score': array([-0.01842214, -0.02497749, -0.54967309, -0.54999862, -0.01842214,
       -0.02497749, -0.54967309, -0.54999862]), 'std_test_score': array([3.73925825e-03, 2.26588921e-05, 1.90555020e-04, 1.31015907e-06,
       3.73925825e-03, 2.26588921e-05, 1.90555020e-04, 1.31015907e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 14:47:30,822 - __main__ - INFO - (11) - BEST_SCORE_: -0.018422142233377087
2020-02-13 14:47:30,834 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 14:47:30,841 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 15:11:19,517 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([57.00626707, 56.63363965, 57.10203815, 56.9081134 , 55.97066387,
       56.10826945, 57.00272512, 56.84706354]), 'std_fit_time': array([0.33141419, 0.09516439, 0.12980528, 0.17156478, 0.24819989,
       0.28436929, 0.18016154, 0.08487901]), 'mean_score_time': array([0.2018826 , 0.22171021, 0.21878481, 0.22575752, 0.2204833 ,
       0.23533432, 0.21469776, 0.21762753]), 'std_score_time': array([0.0091073 , 0.0051037 , 0.01846901, 0.02321591, 0.01571786,
       0.02605397, 0.02493576, 0.00326816]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01874686, -0.02439199, -0.55374562, -0.55098602, -0.01874686,
       -0.02439199, -0.55374562, -0.55098602]), 'split1_test_score': array([-0.        , -0.01918751, -0.54873635, -0.54938994, -0.        ,
       -0.01918751, -0.54873635, -0.54938994]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.01458229, -0.02285983, -0.55082732, -0.55012532, -0.01458229,
       -0.02285983, -0.55082732, -0.55012532]), 'std_test_score': array([0.01062255, 0.00260856, 0.00212706, 0.00065759, 0.01062255,
       0.00260856, 0.00212706, 0.00065759]), 'rank_test_score': array([1, 3, 7, 5, 1, 3, 7, 5], dtype=int32)}
2020-02-13 15:11:19,524 - __main__ - INFO - (12) - BEST_SCORE_: -0.014582285493321781
2020-02-13 15:11:19,534 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 15:11:19,543 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 15:34:52,083 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([56.28122409, 55.44306278, 55.94681629, 57.58836333, 55.52787034,
       54.9602499 , 56.41941778, 56.22298272]), 'std_fit_time': array([0.43709199, 0.16465977, 0.11066469, 0.33620079, 0.23336031,
       0.09727375, 1.06106667, 0.47598645]), 'mean_score_time': array([0.23161221, 0.23242108, 0.22492019, 0.2054882 , 0.20530661,
       0.23983049, 0.21819758, 0.21760583]), 'std_score_time': array([0.00517792, 0.03079764, 0.00701021, 0.01664022, 0.012979  ,
       0.01567675, 0.02156791, 0.01796273]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00365357, -0.02376719, -0.54891127, -0.54993378, -0.00365357,
       -0.02376719, -0.54891127, -0.54993378]), 'split1_test_score': array([-0.01198634, -0.025     , -0.54945365, -0.54999819, -0.01198634,
       -0.025     , -0.54945365, -0.54999819]), 'split2_test_score': array([-0.00229755, -0.02300245, -0.54877792, -0.54989212, -0.00229755,
       -0.02300245, -0.54877792, -0.54989212]), 'mean_test_score': array([-0.00597915, -0.02392321, -0.54904761, -0.54994136, -0.00597915,
       -0.02392321, -0.54904761, -0.54994136]), 'std_test_score': array([4.28364757e-03, 8.22925858e-04, 2.92225983e-04, 4.36363654e-05,
       4.28364757e-03, 8.22925858e-04, 2.92225983e-04, 4.36363654e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 15:34:52,090 - __main__ - INFO - (13) - BEST_SCORE_: -0.005979153100552238
2020-02-13 15:34:52,100 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 15:34:52,111 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 15:58:17,054 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([55.63401238, 55.55358195, 56.33478951, 55.55452736, 55.36715015,
       55.61489487, 56.32119791, 55.32047987]), 'std_fit_time': array([0.81325894, 0.17399149, 0.96609343, 0.59595792, 0.08963024,
       0.45461033, 0.27197712, 0.33933899]), 'mean_score_time': array([0.21782295, 0.22269368, 0.20504371, 0.21892277, 0.21557283,
       0.21553715, 0.20060754, 0.21597815]), 'std_score_time': array([0.02641922, 0.01990281, 0.01745451, 0.0205319 , 0.02313983,
       0.01181065, 0.00828126, 0.01177858]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00295462, -0.02422924, -0.54889186, -0.54995224, -0.00295462,
       -0.02422924, -0.54889186, -0.54995224]), 'split1_test_score': array([-0.00788418, -0.02470862, -0.54920812, -0.54998197, -0.00788418,
       -0.02470862, -0.54920812, -0.54998197]), 'split2_test_score': array([-0.0028908 , -0.02435731, -0.54888723, -0.54996017, -0.0028908 ,
       -0.02435731, -0.54888723, -0.54996017]), 'mean_test_score': array([-0.00457653, -0.02443172, -0.54899574, -0.5499648 , -0.00457653,
       -0.02443172, -0.54899574, -0.5499648 ]), 'std_test_score': array([2.33900133e-03, 2.02654132e-04, 1.50189028e-04, 1.25698689e-05,
       2.33900133e-03, 2.02654132e-04, 1.50189028e-04, 1.25698689e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 15:58:17,060 - __main__ - INFO - (14) - BEST_SCORE_: -0.004576534895865802
2020-02-13 15:58:17,064 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 15:58:17,070 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 16:21:59,756 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([55.50422104, 55.55601557, 56.53721627, 56.40856719, 56.32941969,
       57.28314137, 56.66774503, 57.13442024]), 'std_fit_time': array([0.24652727, 0.16172193, 0.186375  , 0.1310121 , 0.07229608,
       1.39001339, 0.10786982, 0.31266374]), 'mean_score_time': array([0.20647327, 0.22907368, 0.1989572 , 0.20870741, 0.20965981,
       0.21294522, 0.22099892, 0.21522228]), 'std_score_time': array([0.01373409, 0.01135817, 0.00557279, 0.00865354, 0.00136191,
       0.00549371, 0.00502236, 0.00538709]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.        , -0.        , -0.54847723, -0.54858482, -0.        ,
       -0.        , -0.54847723, -0.54858482]), 'split1_test_score': array([-0.00000000e+00, -3.74097412e-10, -5.48483580e-01, -5.48585589e-01,
       -0.00000000e+00, -3.74097412e-10, -5.48483580e-01, -5.48585589e-01]), 'split2_test_score': array([-0.00000000e+00, -1.00608487e-08, -5.48637403e-01, -5.48585984e-01,
       -0.00000000e+00, -1.00608487e-08, -5.48637403e-01, -5.48585984e-01]), 'mean_test_score': array([ 0.00000000e+00, -3.47831537e-09, -5.48532739e-01, -5.48585463e-01,
        0.00000000e+00, -3.47831537e-09, -5.48532739e-01, -5.48585463e-01]), 'std_test_score': array([0.00000000e+00, 4.65705887e-09, 7.40540116e-05, 4.84718109e-07,
       0.00000000e+00, 4.65705887e-09, 7.40540116e-05, 4.84718109e-07]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 16:21:59,763 - __main__ - INFO - (15) - BEST_SCORE_: 0.0
2020-02-13 16:21:59,770 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 16:21:59,781 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 20:45:24,300 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 22:31:24,583 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 22:56:49,027 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([59.73596573, 60.41090504, 60.80069757, 61.09620825, 59.99717585,
       60.07412354, 60.91582783, 60.90618428]), 'std_fit_time': array([0.25593062, 0.12630693, 0.06936859, 0.06822855, 0.2857711 ,
       0.14229334, 0.2248032 , 0.1477407 ]), 'mean_score_time': array([0.21298194, 0.20754615, 0.20948172, 0.2096831 , 0.20897794,
       0.205796  , 0.21755894, 0.20794113]), 'std_score_time': array([0.00706268, 0.00271222, 0.00554354, 0.0080473 , 0.0085735 ,
       0.00297764, 0.01021133, 0.00411217]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00093979, -0.02005317, -0.54870999, -0.54973235, -0.00093979,
       -0.02005317, -0.54870999, -0.54973235]), 'split1_test_score': array([-0.00746038, -0.02476377, -0.54913996, -0.5499859 , -0.00746038,
       -0.02476377, -0.54913996, -0.5499859 ]), 'split2_test_score': array([-0.00670943, -0.02486683, -0.54908649, -0.54999129, -0.00670943,
       -0.02486683, -0.54908649, -0.54999129]), 'mean_test_score': array([-0.00503653, -0.02322792, -0.54897882, -0.54990318, -0.00503653,
       -0.02322792, -0.54897882, -0.54990318]), 'std_test_score': array([0.00291301, 0.00224528, 0.00019134, 0.00012082, 0.00291301,
       0.00224528, 0.00019134, 0.00012082]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 22:56:49,045 - __main__ - INFO - (10) - BEST_SCORE_: -0.005036533361513123
2020-02-13 22:56:49,051 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 22:56:49,060 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 23:22:27,184 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([60.92939878, 60.87837251, 61.23334527, 61.56656528, 60.34887195,
       60.62202986, 61.44274879, 61.50070071]), 'std_fit_time': array([0.28424514, 0.23695348, 0.09868748, 0.03508251, 0.12534638,
       0.25495447, 0.37187905, 0.1889323 ]), 'mean_score_time': array([0.20333028, 0.20863255, 0.19758709, 0.20742726, 0.21714457,
       0.20871592, 0.20626012, 0.2144955 ]), 'std_score_time': array([0.01042337, 0.0045503 , 0.00664797, 0.00327841, 0.00496072,
       0.00458601, 0.00278527, 0.00414263]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02192812, -0.025     , -0.54984951, -0.54999994, -0.02192812,
       -0.025     , -0.54984951, -0.54999994]), 'split1_test_score': array([-0.01157809, -0.02489524, -0.5493316 , -0.5499938 , -0.01157809,
       -0.02489524, -0.5493316 , -0.5499938 ]), 'split2_test_score': array([-0.01892309, -0.02499079, -0.54970836, -0.54999899, -0.01892309,
       -0.02499079, -0.54970836, -0.54999899]), 'mean_test_score': array([-0.01747643, -0.02496201, -0.54962982, -0.54999758, -0.01747643,
       -0.02496201, -0.54962982, -0.54999758]), 'std_test_score': array([4.34744329e-03, 4.73649649e-05, 2.18607218e-04, 2.69871351e-06,
       4.34744329e-03, 4.73649649e-05, 2.18607218e-04, 2.69871351e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 23:22:27,195 - __main__ - INFO - (11) - BEST_SCORE_: -0.017476430410384144
2020-02-13 23:22:27,198 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 23:22:27,205 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-13 23:48:07,162 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([60.64914854, 60.81282369, 61.10279942, 61.5650595 , 60.85839732,
       61.03526767, 61.36669699, 61.59923108]), 'std_fit_time': array([0.25459714, 0.33876305, 0.11321993, 0.17722144, 0.3609633 ,
       0.05781353, 0.0354909 , 0.1176813 ]), 'mean_score_time': array([0.20973078, 0.2163376 , 0.20765352, 0.21501978, 0.19939311,
       0.20233035, 0.20142174, 0.20646667]), 'std_score_time': array([0.0072393 , 0.01253532, 0.00722528, 0.0012368 , 0.00820945,
       0.00898908, 0.0054109 , 0.0024824 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02116371, -0.02492953, -0.04799927, -0.55123603, -0.02116371,
       -0.02492953, -0.04801272, -0.55123603]), 'split1_test_score': array([-0.        , -0.02378824, -0.01445309, -0.54954567, -0.        ,
       -0.02378824, -0.01445309, -0.54954567]), 'split2_test_score': array([-0.025     , -0.025     , -0.05177156, -0.55      , -0.025     ,
       -0.025     , -0.05015966, -0.55      ]), 'mean_test_score': array([-0.0153879 , -0.02457259, -0.03807464, -0.55026057, -0.0153879 ,
       -0.02457259, -0.03754183, -0.55026057]), 'std_test_score': array([0.01099303, 0.00055537, 0.0167738 , 0.00071426, 0.01099303,
       0.00055537, 0.01634971, 0.00071426]), 'rank_test_score': array([1, 3, 6, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-13 23:48:07,169 - __main__ - INFO - (12) - BEST_SCORE_: -0.015387904810309107
2020-02-13 23:48:07,178 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-13 23:48:07,186 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 00:14:11,392 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([61.00233881, 60.66115634, 62.45955634, 64.22060649, 61.93547511,
       61.63028097, 62.69552151, 62.19309839]), 'std_fit_time': array([0.7092622 , 0.36048539, 0.61804425, 0.30460045, 0.36231529,
       0.2785364 , 0.08973282, 0.45742724]), 'mean_score_time': array([0.20975312, 0.20832864, 0.20640937, 0.22407047, 0.22300688,
       0.1992712 , 0.20466336, 0.20070235]), 'std_score_time': array([0.00227185, 0.00159642, 0.00593552, 0.01702232, 0.0138647 ,
       0.00697315, 0.01091843, 0.0071515 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00338832, -0.0236447 , -0.54888015, -0.54992816, -0.00338832,
       -0.0236447 , -0.54888015, -0.54992816]), 'split1_test_score': array([-0.01152786, -0.025     , -0.54943899, -0.54999775, -0.01152786,
       -0.025     , -0.54943899, -0.54999775]), 'split2_test_score': array([-0.0022766 , -0.02299384, -0.5487862 , -0.54989346, -0.0022766 ,
       -0.02299384, -0.5487862 , -0.54989346]), 'mean_test_score': array([-0.00573093, -0.02387951, -0.54903511, -0.54993979, -0.00573093,
       -0.02387951, -0.54903511, -0.54993979]), 'std_test_score': array([4.12409953e-03, 8.35673132e-04, 2.88146038e-04, 4.33610621e-05,
       4.12409953e-03, 8.35673132e-04, 2.88146038e-04, 4.33610621e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 00:14:11,398 - __main__ - INFO - (13) - BEST_SCORE_: -0.005730925288655352
2020-02-14 00:14:11,410 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 00:14:11,420 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 00:39:56,331 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([61.72254713, 61.22899516, 61.26281206, 61.39975746, 60.64736883,
       60.91084321, 61.81282218, 61.48386844]), 'std_fit_time': array([0.1608194 , 0.13628075, 0.25642074, 0.45325907, 0.79462327,
       0.18878985, 0.38166754, 0.18820082]), 'mean_score_time': array([0.21274606, 0.21136244, 0.20549027, 0.20541533, 0.21964216,
       0.20248564, 0.21252147, 0.19954149]), 'std_score_time': array([0.00582328, 0.00505395, 0.00430773, 0.00943933, 0.00183757,
       0.00155522, 0.00214114, 0.00750858]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.0027176 , -0.02396947, -0.54887903, -0.54994315, -0.0027176 ,
       -0.02396947, -0.54887903, -0.54994315]), 'split1_test_score': array([-0.01376498, -0.02497412, -0.54954504, -0.54999808, -0.01376498,
       -0.02497412, -0.54954504, -0.54999808]), 'split2_test_score': array([-0.00323031, -0.02433414, -0.54891767, -0.54996327, -0.00323031,
       -0.02433414, -0.54891767, -0.54996327]), 'mean_test_score': array([-0.00657096, -0.02442591, -0.54911391, -0.54996816, -0.00657096,
       -0.02442591, -0.54911391, -0.54996816]), 'std_test_score': array([5.09124247e-03, 4.15247462e-04, 3.05263503e-04, 2.26912351e-05,
       5.09124247e-03, 4.15247462e-04, 3.05263503e-04, 2.26912351e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 00:39:56,339 - __main__ - INFO - (14) - BEST_SCORE_: -0.006570961314226923
2020-02-14 00:39:56,349 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 00:39:56,361 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 01:05:52,139 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([60.98639456, 61.43186704, 62.37739023, 62.52287134, 61.61244901,
       61.37856205, 61.92023126, 61.51630902]), 'std_fit_time': array([0.38674271, 0.07525818, 0.23627904, 0.50430515, 0.26927598,
       0.39268325, 0.32170475, 0.56481631]), 'mean_score_time': array([0.20544759, 0.20975852, 0.21827054, 0.21271873, 0.21761298,
       0.21680625, 0.21043468, 0.21320208]), 'std_score_time': array([0.00664447, 0.01752039, 0.01593296, 0.00394243, 0.00426566,
       0.00587654, 0.00776875, 0.00349984]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00000000e+00, -3.85583816e-05, -5.48484537e-01, -5.48610407e-01,
       -0.00000000e+00, -3.85583816e-05, -5.48484537e-01, -5.48610407e-01]), 'split1_test_score': array([-0.00000000e+00, -4.20245906e-05, -5.48502637e-01, -5.48611843e-01,
       -0.00000000e+00, -4.20245906e-05, -5.48502637e-01, -5.48611843e-01]), 'split2_test_score': array([-0.00000000e+00, -1.09884421e-06, -5.48633832e-01, -5.48595021e-01,
       -0.00000000e+00, -1.09884421e-06, -5.48633832e-01, -5.48595021e-01]), 'mean_test_score': array([ 0.00000000e+00, -2.72272721e-05, -5.48540335e-01, -5.48605757e-01,
        0.00000000e+00, -2.72272721e-05, -5.48540335e-01, -5.48605757e-01]), 'std_test_score': array([0.00000000e+00, 1.85297007e-05, 6.65239620e-05, 7.61410329e-06,
       0.00000000e+00, 1.85297007e-05, 6.65239620e-05, 7.61410329e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 01:05:52,145 - __main__ - INFO - (15) - BEST_SCORE_: 0.0
2020-02-14 01:05:52,149 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 01:05:52,155 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 01:31:16,798 - __main__ - INFO - (16) - CV_RESULTS_: {'mean_fit_time': array([60.27405953, 61.21732187, 60.84885065, 60.76939813, 59.19172112,
       60.14472795, 60.68470279, 61.16181835]), 'std_fit_time': array([1.23548925, 0.2633421 , 0.25284755, 0.59185371, 0.10998645,
       0.64538058, 0.66763804, 0.48217406]), 'mean_score_time': array([0.21194959, 0.20352538, 0.19738094, 0.21398934, 0.20166906,
       0.20253952, 0.21443168, 0.21459476]), 'std_score_time': array([0.00694939, 0.01258578, 0.01116536, 0.01309576, 0.00279852,
       0.01091559, 0.00681443, 0.01141423]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-6.55270272e-06, -0.00000000e+00, -5.48652509e-01, -5.48484111e-01,
       -6.55270272e-06, -0.00000000e+00, -5.48652509e-01, -5.48484111e-01]), 'split1_test_score': array([-0.02068817, -0.025     , -0.54982987, -0.54999996, -0.02068817,
       -0.025     , -0.54982987, -0.54999996]), 'split2_test_score': array([-0.00056813, -0.02185901, -0.54878278, -0.54984968, -0.00056813,
       -0.02185901, -0.54878278, -0.54984968]), 'mean_test_score': array([-0.00708761, -0.01561967, -0.54908839, -0.54944458, -0.00708761,
       -0.01561967, -0.54908839, -0.54944458]), 'std_test_score': array([0.00961977, 0.01111896, 0.000527  , 0.00068192, 0.00961977,
       0.01111896, 0.000527  , 0.00068192]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 01:31:16,805 - __main__ - INFO - (16) - BEST_SCORE_: -0.007087614505952221
2020-02-14 01:31:16,810 - __main__ - INFO - (16) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 01:31:16,821 - __main__ - INFO - (17) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 01:56:43,138 - __main__ - INFO - (17) - CV_RESULTS_: {'mean_fit_time': array([59.94002525, 59.9756279 , 61.04237707, 61.24103785, 60.08817498,
       60.52074472, 60.61790442, 61.20982194]), 'std_fit_time': array([0.35408951, 0.35667925, 0.41330678, 0.76004735, 0.49430771,
       0.12499163, 0.38026582, 0.4918773 ]), 'mean_score_time': array([0.20978069, 0.21029822, 0.21136228, 0.21016637, 0.21029806,
       0.20936473, 0.21620846, 0.19651421]), 'std_score_time': array([0.00611739, 0.00917979, 0.00715008, 0.00768698, 0.00839113,
       0.00257496, 0.0060631 , 0.01388861]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01473391, -0.02495882, -0.54957258, -0.54999749, -0.01473391,
       -0.02495882, -0.54957258, -0.54999749]), 'split1_test_score': array([-0.00883042, -0.02431378, -0.54918805, -0.54995721, -0.00883042,
       -0.02431378, -0.54918805, -0.54995721]), 'split2_test_score': array([-0.00857003, -0.02431357, -0.54925497, -0.54995721, -0.00857003,
       -0.02431357, -0.54925497, -0.54995721]), 'mean_test_score': array([-0.01071146, -0.02452873, -0.54933853, -0.54997064, -0.01071146,
       -0.02452873, -0.54933853, -0.54997064]), 'std_test_score': array([2.84629193e-03, 3.04123736e-04, 1.67732901e-04, 1.89878408e-05,
       2.84629193e-03, 3.04123736e-04, 1.67732901e-04, 1.89878408e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 01:56:43,145 - __main__ - INFO - (17) - BEST_SCORE_: -0.010711455250206836
2020-02-14 01:56:43,150 - __main__ - INFO - (17) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 01:56:43,161 - __main__ - INFO - (18) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 02:21:58,251 - __main__ - INFO - (18) - CV_RESULTS_: {'mean_fit_time': array([60.6563561 , 59.98815203, 60.4399426 , 59.8863794 , 59.57208578,
       59.90417711, 60.31379239, 60.56640371]), 'std_fit_time': array([0.32364561, 0.25991025, 0.57218479, 0.15675394, 0.44566908,
       0.29728686, 0.38459793, 0.48081291]), 'mean_score_time': array([0.22427018, 0.19047117, 0.2024258 , 0.21636717, 0.19682137,
       0.18928107, 0.20852073, 0.20442152]), 'std_score_time': array([0.04216189, 0.00370269, 0.01335658, 0.00552116, 0.01237092,
       0.00334854, 0.0089328 , 0.00597748]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00407382, -0.02462023, -0.54895955, -0.54997602, -0.00407382,
       -0.02462023, -0.54895955, -0.54997602]), 'split1_test_score': array([-0.0102013 , -0.02480582, -0.549341  , -0.54998457, -0.0102013 ,
       -0.02480582, -0.549341  , -0.54998457]), 'split2_test_score': array([-0.0166268 , -0.025     , -0.54959222, -0.54999912, -0.0166268 ,
       -0.025     , -0.54959222, -0.54999912]), 'mean_test_score': array([-0.01030064, -0.02480868, -0.54929759, -0.54998657, -0.01030064,
       -0.02480868, -0.54929759, -0.54998657]), 'std_test_score': array([5.12521517e-03, 1.55055349e-04, 2.60107318e-04, 9.53771624e-06,
       5.12521517e-03, 1.55055349e-04, 2.60107318e-04, 9.53771624e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 02:21:58,257 - __main__ - INFO - (18) - BEST_SCORE_: -0.010300638043776197
2020-02-14 02:21:58,261 - __main__ - INFO - (18) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 02:21:58,271 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 08:37:31,763 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 08:42:02,424 - __main__ - INFO - (19) - Started GridSearchCV with: <function params at 0x7f91f394e950>
2020-02-14 08:42:24,203 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 09:08:42,658 - __main__ - INFO - (19) - CV_RESULTS_: {'mean_fit_time': array([61.39569887, 62.86232821, 64.24385087, 63.21965313, 62.2815032 ,
       61.47134407, 62.78979564, 61.96449852]), 'std_fit_time': array([0.49361997, 0.35479438, 0.15157137, 0.41196519, 0.82066626,
       0.52229193, 0.65727357, 0.39538362]), 'mean_score_time': array([0.22153107, 0.22603766, 0.22712596, 0.22533997, 0.2262609 ,
       0.20749585, 0.22854042, 0.21479853]), 'std_score_time': array([0.00278946, 0.0040904 , 0.00221203, 0.00494202, 0.00818848,
       0.0130227 , 0.00962734, 0.00474022]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00225699, -0.02231223, -0.5489716 , -0.54986756, -0.00225699,
       -0.02231223, -0.5489716 , -0.54986756]), 'split1_test_score': array([-0.00786213, -0.02239835, -0.54922146, -0.54987044, -0.00786213,
       -0.02239835, -0.54922146, -0.54987044]), 'split2_test_score': array([-0.        , -0.        , -0.54865033, -0.54844883, -0.        ,
       -0.        , -0.54865033, -0.54844883]), 'mean_test_score': array([-0.00337304, -0.01490352, -0.5489478 , -0.54939561, -0.00337304,
       -0.01490352, -0.5489478 , -0.54939561]), 'std_test_score': array([0.00330529, 0.01053844, 0.00023377, 0.00066948, 0.00330529,
       0.01053844, 0.00023377, 0.00066948]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 09:08:42,672 - __main__ - INFO - (19) - BEST_SCORE_: -0.0033730385106293275
2020-02-14 09:08:42,681 - __main__ - INFO - (19) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 09:08:42,683 - __main__ - INFO - (20) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 09:34:45,140 - __main__ - INFO - (20) - CV_RESULTS_: {'mean_fit_time': array([62.28370206, 63.05071004, 63.06810323, 61.50780153, 60.699253  ,
       61.03309902, 62.60265223, 61.90041979]), 'std_fit_time': array([0.60371727, 0.51283118, 0.6574306 , 0.25923533, 0.06682592,
       0.55794221, 0.80105548, 0.35391635]), 'mean_score_time': array([0.22696638, 0.23144134, 0.23463146, 0.21481506, 0.23445137,
       0.23305575, 0.21938141, 0.23168739]), 'std_score_time': array([0.00549362, 0.00441874, 0.00458586, 0.01206264, 0.00644256,
       0.01205035, 0.01578998, 0.00025298]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.0040706 , -0.01802712, -0.5489365 , -0.54962551, -0.0040706 ,
       -0.01802712, -0.5489365 , -0.54962551]), 'split1_test_score': array([-0.00308712, -0.02240409, -0.54885179, -0.54986307, -0.00308712,
       -0.02240409, -0.54885179, -0.54986307]), 'split2_test_score': array([-0.00133769, -0.01390361, -0.54871126, -0.54938524, -0.00133769,
       -0.01390361, -0.54871126, -0.54938524]), 'mean_test_score': array([-0.0028318 , -0.0181116 , -0.54883319, -0.54962461, -0.0028318 ,
       -0.0181116 , -0.54883319, -0.54962461]), 'std_test_score': array([1.13022059e-03, 3.47081991e-03, 9.28908166e-05, 1.95072379e-04,
       1.13022059e-03, 3.47081991e-03, 9.28908166e-05, 1.95072379e-04]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 09:34:45,146 - __main__ - INFO - (20) - BEST_SCORE_: -0.002831804809941189
2020-02-14 09:34:45,147 - __main__ - INFO - (20) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 09:34:45,148 - __main__ - INFO - (21) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 10:00:25,514 - __main__ - INFO - (21) - CV_RESULTS_: {'mean_fit_time': array([60.65208952, 60.9264946 , 61.66078782, 61.2180477 , 61.06606078,
       60.64131451, 62.07808932, 60.65482696]), 'std_fit_time': array([0.26204413, 0.42564891, 0.49373046, 0.5460104 , 0.57994119,
       0.37768743, 0.78779289, 0.34212344]), 'mean_score_time': array([0.21869318, 0.22341665, 0.20976297, 0.21984053, 0.22153592,
       0.21883837, 0.20508846, 0.20155064]), 'std_score_time': array([0.00194452, 0.00195883, 0.0168275 , 0.00652882, 0.00501271,
       0.00386068, 0.00830725, 0.01238181]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01744748, -0.0249971 , -0.54961944, -0.54999982, -0.01744748,
       -0.0249971 , -0.54961944, -0.54999982]), 'split1_test_score': array([-0.00205833, -0.0246133 , -0.5488153 , -0.54997583, -0.00205833,
       -0.0246133 , -0.5488153 , -0.54997583]), 'split2_test_score': array([-0.025     , -0.025     , -0.54999815, -0.55      , -0.025     ,
       -0.025     , -0.54999815, -0.55      ]), 'mean_test_score': array([-0.01483527, -0.02487013, -0.54947763, -0.54999188, -0.01483527,
       -0.02487013, -0.54947763, -0.54999188]), 'std_test_score': array([9.54630144e-03, 1.81613521e-04, 4.93197018e-04, 1.13521919e-05,
       9.54630144e-03, 1.81613521e-04, 4.93197018e-04, 1.13521919e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 10:00:25,520 - __main__ - INFO - (21) - BEST_SCORE_: -0.014835267935637242
2020-02-14 10:00:25,521 - __main__ - INFO - (21) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 10:00:25,524 - __main__ - INFO - (22) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 10:26:17,443 - __main__ - INFO - (22) - CV_RESULTS_: {'mean_fit_time': array([61.08604995, 60.95020207, 62.237348  , 61.54262614, 61.59921122,
       60.76976546, 62.30448461, 62.24678183]), 'std_fit_time': array([0.42336947, 0.80594944, 0.25978742, 0.3667569 , 0.53200086,
       0.10355059, 0.03289854, 0.59366207]), 'mean_score_time': array([0.21055206, 0.22994526, 0.22253601, 0.22832568, 0.22693865,
       0.21846159, 0.22089036, 0.23531294]), 'std_score_time': array([0.01298082, 0.00771355, 0.00743489, 0.00927539, 0.00312885,
       0.02087292, 0.00346987, 0.00108135]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54886573, -0.54993222, -0.025     ,
       -0.025     , -0.54886573, -0.54993222]), 'split1_test_score': array([-0.02910426, -0.0250192 , -0.55259479, -0.55021083, -0.02910426,
       -0.0250192 , -0.55259479, -0.55021083]), 'split2_test_score': array([-0.00166578, -0.00223248, -0.5486159 , -0.54873587, -0.00166578,
       -0.00223248, -0.5486159 , -0.54873587]), 'mean_test_score': array([-0.01859001, -0.01741723, -0.55002547, -0.54962631, -0.01859001,
       -0.01741723, -0.55002547, -0.54962631]), 'std_test_score': array([0.01208397, 0.01073724, 0.00181964, 0.00063982, 0.01208397,
       0.01073724, 0.00181964, 0.00063982]), 'rank_test_score': array([3, 1, 7, 5, 3, 1, 7, 5], dtype=int32)}
2020-02-14 10:26:17,449 - __main__ - INFO - (22) - BEST_SCORE_: -0.01741722702852774
2020-02-14 10:26:17,453 - __main__ - INFO - (22) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}
2020-02-14 10:26:17,456 - __main__ - INFO - (23) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 10:52:33,869 - __main__ - INFO - (23) - CV_RESULTS_: {'mean_fit_time': array([60.82896495, 60.74768098, 61.65744289, 62.30850792, 63.07654746,
       63.23289132, 65.98862402, 62.87810707]), 'std_fit_time': array([0.07986157, 0.27670149, 0.24144125, 0.29842919, 0.92397313,
       0.42216967, 1.72258332, 0.11227965]), 'mean_score_time': array([0.22536023, 0.22055928, 0.22208039, 0.22781897, 0.22446728,
       0.23987714, 0.23445813, 0.22651935]), 'std_score_time': array([0.00455824, 0.00162254, 0.0052745 , 0.00627707, 0.00287501,
       0.00226886, 0.00924596, 0.00451407]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01682389, -0.025     , -0.54967528, -0.54999976, -0.01682389,
       -0.025     , -0.54967528, -0.54999976]), 'split1_test_score': array([-8.89814439e-05, -1.39399065e-02, -5.48606426e-01, -5.49387712e-01,
       -8.89814439e-05, -1.39399065e-02, -5.48606426e-01, -5.49387712e-01]), 'split2_test_score': array([-0.01520736, -0.025     , -0.54959159, -0.54999893, -0.01520736,
       -0.025     , -0.54959159, -0.54999893]), 'mean_test_score': array([-0.01070674, -0.0213133 , -0.5492911 , -0.54979547, -0.01070674,
       -0.0213133 , -0.5492911 , -0.54979547]), 'std_test_score': array([0.00753684, 0.00521378, 0.00048534, 0.00028833, 0.00753684,
       0.00521378, 0.00048534, 0.00028833]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 10:52:33,876 - __main__ - INFO - (23) - BEST_SCORE_: -0.010706741060007444
2020-02-14 10:52:33,881 - __main__ - INFO - (23) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 10:52:33,886 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 19:55:26,118 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 19:56:20,598 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 19:56:43,294 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 19:58:31,413 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 20:21:43,975 - __main__ - INFO - (24) - CV_RESULTS_: {'mean_fit_time': array([54.02678219, 54.50734615, 55.41149433, 55.650407  , 54.79345997,
       55.28724821, 56.05749361, 56.16986052]), 'std_fit_time': array([0.58245643, 0.20928892, 0.08803152, 0.30006434, 0.14862451,
       0.24800026, 0.11607169, 0.29521811]), 'mean_score_time': array([0.20464945, 0.19359398, 0.19943802, 0.19523311, 0.19586428,
       0.20163107, 0.19717526, 0.20633547]), 'std_score_time': array([0.00595792, 0.00480456, 0.01106351, 0.00397335, 0.00139519,
       0.01147396, 0.00239285, 0.00361591]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.        , -0.02040292, -0.54851819, -0.54971315, -0.        ,
       -0.02040292, -0.54851819, -0.54971315]), 'split1_test_score': array([-0.01463765, -0.02498128, -0.54950503, -0.54999886, -0.01463765,
       -0.02498128, -0.54950503, -0.54999886]), 'split2_test_score': array([-0.00966541, -0.02490122, -0.54923759, -0.54999396, -0.00966541,
       -0.02490122, -0.54923759, -0.54999396]), 'mean_test_score': array([-0.00810102, -0.02342847, -0.54908694, -0.54990199, -0.00810102,
       -0.02342847, -0.54908694, -0.54990199]), 'std_test_score': array([0.00607732, 0.00213964, 0.00041672, 0.00013354, 0.00607732,
       0.00213964, 0.00041672, 0.00013354]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 20:21:43,989 - __main__ - INFO - (24) - BEST_SCORE_: -0.008101019573925602
2020-02-14 20:21:43,996 - __main__ - INFO - (24) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 20:21:43,997 - __main__ - INFO - (25) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 20:45:55,704 - __main__ - INFO - (25) - CV_RESULTS_: {'mean_fit_time': array([56.19232599, 56.39369051, 58.68243829, 57.35061232, 57.82193311,
       58.56444669, 57.57965128, 58.3683881 ]), 'std_fit_time': array([0.57742082, 0.16520625, 1.07421297, 0.19252091, 0.84496903,
       0.76329662, 0.09050661, 0.19801457]), 'mean_score_time': array([0.19642663, 0.20449932, 0.20451371, 0.19875622, 0.20917288,
       0.19863129, 0.20689599, 0.21625113]), 'std_score_time': array([0.0042918 , 0.00640958, 0.00722305, 0.00519778, 0.02030737,
       0.00619418, 0.01213437, 0.0050417 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.55170677, -0.55002765, -0.025     ,
       -0.025     , -0.55170677, -0.55002765]), 'split1_test_score': array([-0.025    , -0.025    , -0.5499984, -0.55     , -0.025    ,
       -0.025    , -0.5499984, -0.55     ]), 'split2_test_score': array([-0.025     , -0.025     , -0.54997811, -0.55      , -0.025     ,
       -0.025     , -0.54997811, -0.55      ]), 'mean_test_score': array([-0.025     , -0.025     , -0.55056109, -0.55000922, -0.025     ,
       -0.025     , -0.55056109, -0.55000922]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 8.10158047e-04, 1.30346072e-05,
       3.46944695e-18, 3.46944695e-18, 8.10158047e-04, 1.30346072e-05]), 'rank_test_score': array([1, 1, 7, 5, 1, 1, 7, 5], dtype=int32)}
2020-02-14 20:45:55,710 - __main__ - INFO - (25) - BEST_SCORE_: -0.025000000000000005
2020-02-14 20:45:55,718 - __main__ - INFO - (25) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 20:45:55,721 - __main__ - INFO - (26) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 21:09:27,558 - __main__ - INFO - (26) - CV_RESULTS_: {'mean_fit_time': array([57.1295596 , 56.39362899, 56.40913939, 56.12814967, 54.93786001,
       54.94457539, 55.61303926, 56.56390858]), 'std_fit_time': array([0.21791585, 0.38474783, 0.20034664, 0.21982024, 0.30136154,
       0.30661313, 0.17106507, 0.69539937]), 'mean_score_time': array([0.21067381, 0.20044025, 0.20476929, 0.19965402, 0.19550268,
       0.20274154, 0.19462792, 0.20267932]), 'std_score_time': array([0.00053238, 0.00838851, 0.01246517, 0.00718316, 0.00534507,
       0.01449444, 0.00442861, 0.00383197]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00417664, -0.02494887, -0.54894928, -0.54999682, -0.00417664,
       -0.02494887, -0.54894928, -0.54999682]), 'split1_test_score': array([-0.00428721, -0.02453289, -0.54897237, -0.54997091, -0.00428721,
       -0.02453289, -0.54897237, -0.54997091]), 'split2_test_score': array([-0.02262985, -0.02499993, -0.54988806, -0.55      , -0.02262985,
       -0.02499993, -0.54988806, -0.55      ]), 'mean_test_score': array([-0.01036457, -0.02482723, -0.5492699 , -0.54998924, -0.01036457,
       -0.02482723, -0.5492699 , -0.54998924]), 'std_test_score': array([8.67298264e-03, 2.09171919e-04, 4.37203563e-04, 1.30282012e-05,
       8.67298264e-03, 2.09171919e-04, 4.37203563e-04, 1.30282012e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 21:09:27,568 - __main__ - INFO - (26) - BEST_SCORE_: -0.010364566467422356
2020-02-14 21:09:27,569 - __main__ - INFO - (26) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 21:09:27,571 - __main__ - INFO - (27) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 21:32:53,274 - __main__ - INFO - (27) - CV_RESULTS_: {'mean_fit_time': array([56.29274964, 56.16029811, 56.86748242, 56.06177227, 55.27355957,
       54.7688911 , 55.34925691, 55.80024727]), 'std_fit_time': array([0.15565987, 0.07455707, 0.66652292, 0.16489323, 0.25615862,
       0.42775109, 0.38281265, 0.62332943]), 'mean_score_time': array([0.19984976, 0.19896785, 0.19111133, 0.20809992, 0.20059315,
       0.19887622, 0.19407717, 0.19709762]), 'std_score_time': array([0.00823554, 0.00475402, 0.00203819, 0.01097097, 0.00479769,
       0.01248356, 0.00725906, 0.00030664]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02212986, -0.025     , -0.01729119, -0.55      , -0.02212986,
       -0.025     , -0.01719037, -0.55      ]), 'split1_test_score': array([-0.025, -0.025, -0.025, -0.55 , -0.025, -0.025, -0.075, -0.55 ]), 'split2_test_score': array([-0.        , -0.        , -0.02813228, -0.54844178, -0.        ,
       -0.        , -0.08594478, -0.54844178]), 'mean_test_score': array([-0.01570995, -0.01666667, -0.02347449, -0.54948059, -0.01570995,
       -0.01666667, -0.05937838, -0.54948059]), 'std_test_score': array([0.01117024, 0.01178511, 0.00455541, 0.00073455, 0.01117024,
       0.01178511, 0.0301642 , 0.00073455]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 6, 7], dtype=int32)}
2020-02-14 21:32:53,280 - __main__ - INFO - (27) - BEST_SCORE_: -0.01570995322783332
2020-02-14 21:32:53,284 - __main__ - INFO - (27) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 21:32:53,289 - __main__ - INFO - (28) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 21:55:45,745 - __main__ - INFO - (28) - CV_RESULTS_: {'mean_fit_time': array([54.41351215, 54.36341651, 55.36875017, 54.83464662, 54.35898225,
       53.76866849, 54.33457406, 54.43737078]), 'std_fit_time': array([0.07557638, 0.28870513, 0.23472185, 0.41390168, 1.00959446,
       0.10189901, 0.35869364, 0.14575729]), 'mean_score_time': array([0.19115146, 0.20220574, 0.19580332, 0.18840686, 0.19033782,
       0.19490568, 0.19286529, 0.19462768]), 'std_score_time': array([0.00544155, 0.00292957, 0.01001556, 0.00256587, 0.00629519,
       0.00836566, 0.00570188, 0.00400515]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00717001, -0.02286872, -0.54911468, -0.54986883, -0.00717001,
       -0.02286872, -0.54911468, -0.54986883]), 'split1_test_score': array([-0.00346426, -0.02225671, -0.54885506, -0.54983068, -0.00346426,
       -0.02225671, -0.54885506, -0.54983068]), 'split2_test_score': array([-0.00630766, -0.02459047, -0.54905389, -0.54997695, -0.00630766,
       -0.02459047, -0.54905389, -0.54997695]), 'mean_test_score': array([-0.00564731, -0.02323863, -0.54900788, -0.54989215, -0.00564731,
       -0.02323863, -0.54900788, -0.54989215]), 'std_test_score': array([1.58328651e-03, 9.88004342e-04, 1.10869703e-04, 6.19505940e-05,
       1.58328651e-03, 9.88004342e-04, 1.10869703e-04, 6.19505940e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 21:55:45,751 - __main__ - INFO - (28) - BEST_SCORE_: -0.005647310439094812
2020-02-14 21:55:45,754 - __main__ - INFO - (28) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 21:55:45,756 - __main__ - INFO - (29) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 22:18:49,580 - __main__ - INFO - (29) - CV_RESULTS_: {'mean_fit_time': array([53.26713403, 53.35115727, 53.4777139 , 53.4266843 , 53.0157191 ,
       54.57829571, 58.25402292, 58.93790833]), 'std_fit_time': array([0.33236959, 0.78372198, 0.20633194, 0.23441646, 0.39894273,
       0.33962263, 1.07464093, 0.67937212]), 'mean_score_time': array([0.19325972, 0.21887541, 0.1902895 , 0.19118722, 0.20402733,
       0.19597395, 0.20231724, 0.1955409 ]), 'std_score_time': array([0.00424762, 0.01099593, 0.00459287, 0.00515381, 0.00260508,
       0.00749447, 0.00445518, 0.0065084 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01284166, -0.02452987, -0.54934885, -0.54997098, -0.01284166,
       -0.02452987, -0.54934885, -0.54997098]), 'split1_test_score': array([-0.01214386, -0.02488677, -0.5493095 , -0.54999302, -0.01214386,
       -0.02488677, -0.5493095 , -0.54999302]), 'split2_test_score': array([-0.00899953, -0.02484137, -0.5491945 , -0.54999022, -0.00899953,
       -0.02484137, -0.5491945 , -0.54999022]), 'mean_test_score': array([-0.01132835, -0.02475267, -0.54928429, -0.54998474, -0.01132835,
       -0.02475267, -0.54928429, -0.54998474]), 'std_test_score': array([1.67118340e-03, 1.58629853e-04, 6.54880955e-05, 9.79575765e-06,
       1.67118340e-03, 1.58629853e-04, 6.54880955e-05, 9.79575765e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 22:18:49,587 - __main__ - INFO - (29) - BEST_SCORE_: -0.011328351993354477
2020-02-14 22:18:49,591 - __main__ - INFO - (29) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 22:18:49,594 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 22:26:26,042 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 22:51:45,507 - __main__ - INFO - (30) - CV_RESULTS_: {'mean_fit_time': array([60.1201698 , 60.01810034, 60.97270409, 60.85788767, 59.97626925,
       60.10822026, 60.31020331, 60.29981709]), 'std_fit_time': array([0.26775184, 0.1981869 , 0.22673256, 0.27834649, 0.15985585,
       0.37315049, 0.14218018, 0.20774733]), 'mean_score_time': array([0.22054966, 0.22257956, 0.22691909, 0.20667299, 0.22232278,
       0.21606779, 0.2047987 , 0.22203517]), 'std_score_time': array([0.00849238, 0.00395307, 0.00283863, 0.00719113, 0.02978234,
       0.00684822, 0.00597552, 0.00706794]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.        , -0.01767693, -0.54848709, -0.54962735, -0.        ,
       -0.01767693, -0.54848709, -0.54962735]), 'split1_test_score': array([-0.01231596, -0.02475314, -0.54939286, -0.54998217, -0.01231596,
       -0.02475314, -0.54939286, -0.54998217]), 'split2_test_score': array([-0.00863841, -0.02449285, -0.54919116, -0.54997019, -0.00863841,
       -0.02449285, -0.54919116, -0.54997019]), 'mean_test_score': array([-0.00698479, -0.02230764, -0.5490237 , -0.5498599 , -0.00698479,
       -0.02230764, -0.5490237 , -0.5498599 ]), 'std_test_score': array([0.00516214, 0.00327613, 0.00038828, 0.00016452, 0.00516214,
       0.00327613, 0.00038828, 0.00016452]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 22:51:45,514 - __main__ - INFO - (30) - BEST_SCORE_: -0.00698478875937638
2020-02-14 22:51:45,528 - __main__ - INFO - (30) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 22:51:45,529 - __main__ - INFO - (31) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 23:16:56,895 - __main__ - INFO - (31) - CV_RESULTS_: {'mean_fit_time': array([59.75941888, 59.73886379, 59.89662051, 60.25959293, 59.17834942,
       59.3893106 , 60.2603391 , 60.85055065]), 'std_fit_time': array([0.06896276, 0.06352538, 0.29191812, 0.86334259, 0.14933595,
       0.35559822, 0.33697911, 0.25132737]), 'mean_score_time': array([0.20752247, 0.2140859 , 0.20062184, 0.22359967, 0.20874842,
       0.2052296 , 0.21080176, 0.21605635]), 'std_score_time': array([0.0057436 , 0.01139684, 0.00726597, 0.00965772, 0.0122857 ,
       0.00322489, 0.00710052, 0.0104577 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00161617, -0.02106932, -0.54878821, -0.54980829, -0.00161617,
       -0.02106932, -0.54878821, -0.54980829]), 'split1_test_score': array([-0.00560757, -0.02397114, -0.54907947, -0.54994659, -0.00560757,
       -0.02397114, -0.54907947, -0.54994659]), 'split2_test_score': array([-7.72812574e-05, -2.94145829e-04, -5.48590344e-01, -5.48518407e-01,
       -7.72812574e-05, -2.94145829e-04, -5.48590344e-01, -5.48518407e-01]), 'mean_test_score': array([-0.00243367, -0.01511154, -0.54881934, -0.54942443, -0.00243367,
       -0.01511154, -0.54881934, -0.54942443]), 'std_test_score': array([0.00233056, 0.01054424, 0.00020089, 0.00064314, 0.00233056,
       0.01054424, 0.00020089, 0.00064314]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 23:16:56,901 - __main__ - INFO - (31) - BEST_SCORE_: -0.002433673456964399
2020-02-14 23:16:56,913 - __main__ - INFO - (31) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 23:16:56,915 - __main__ - INFO - (32) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-14 23:42:28,752 - __main__ - INFO - (32) - CV_RESULTS_: {'mean_fit_time': array([59.89497113, 59.44660648, 60.5611554 , 61.59957902, 61.34541035,
       60.9671433 , 61.68968924, 60.99095583]), 'std_fit_time': array([0.13456053, 0.32161245, 0.01583714, 0.71007126, 0.28989249,
       0.32519704, 0.15497834, 0.37695465]), 'mean_score_time': array([0.19876202, 0.20821452, 0.20761736, 0.23020236, 0.20573807,
       0.23862958, 0.2121559 , 0.23062452]), 'std_score_time': array([0.00282809, 0.00797476, 0.00525332, 0.00943257, 0.0083462 ,
       0.00389322, 0.00199508, 0.00912499]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00460409, -0.02463484, -0.54891771, -0.5499774 , -0.00460409,
       -0.02463484, -0.54891771, -0.5499774 ]), 'split1_test_score': array([-0.00086639, -0.02346746, -0.54871708, -0.54990445, -0.00086639,
       -0.02346746, -0.54871708, -0.54990445]), 'split2_test_score': array([-0.02111467, -0.02499794, -0.54981703, -0.54999987, -0.02111467,
       -0.02499794, -0.54981703, -0.54999987]), 'mean_test_score': array([-0.00886171, -0.02436675, -0.54915061, -0.54996057, -0.00886171,
       -0.02436675, -0.54915061, -0.54996057]), 'std_test_score': array([8.79749007e-03, 6.52938254e-04, 4.78298593e-04, 4.07329296e-05,
       8.79749007e-03, 6.52938254e-04, 4.78298593e-04, 4.07329296e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-14 23:42:28,759 - __main__ - INFO - (32) - BEST_SCORE_: -0.008861714479881622
2020-02-14 23:42:28,767 - __main__ - INFO - (32) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-14 23:42:28,770 - __main__ - INFO - (33) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 00:08:10,126 - __main__ - INFO - (33) - CV_RESULTS_: {'mean_fit_time': array([60.44329063, 60.39678923, 61.91308888, 61.57735896, 60.33630562,
       60.30015071, 62.0079782 , 62.24515867]), 'std_fit_time': array([0.27675541, 0.32656552, 0.98970895, 0.34560735, 0.45422938,
       0.40685614, 0.17781422, 0.17279265]), 'mean_score_time': array([0.20291432, 0.21545879, 0.21830686, 0.21592005, 0.20921199,
       0.22429403, 0.23505012, 0.23143848]), 'std_score_time': array([0.01022045, 0.00910707, 0.00354572, 0.00145758, 0.01228376,
       0.01493873, 0.02058517, 0.00163859]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.        , -0.02476278, -0.54916136, -0.54998527, -0.        ,
       -0.02476278, -0.54916136, -0.54998527]), 'split1_test_score': array([-0.        , -0.02466844, -0.54935937, -0.54998043, -0.        ,
       -0.02466844, -0.54935937, -0.54998043]), 'split2_test_score': array([-0.        , -0.02467716, -0.54921283, -0.54998028, -0.        ,
       -0.02467716, -0.54921283, -0.54998028]), 'mean_test_score': array([ 0.        , -0.0247028 , -0.54924452, -0.549982  ,  0.        ,
       -0.0247028 , -0.54924452, -0.549982  ]), 'std_test_score': array([0.00000000e+00, 4.25650873e-05, 8.38825566e-05, 2.31843287e-06,
       0.00000000e+00, 4.25650873e-05, 8.38825566e-05, 2.31843287e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 00:08:10,134 - __main__ - INFO - (33) - BEST_SCORE_: 0.0
2020-02-15 00:08:10,147 - __main__ - INFO - (33) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-15 00:08:10,161 - __main__ - INFO - (34) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 00:33:53,652 - __main__ - INFO - (34) - CV_RESULTS_: {'mean_fit_time': array([60.30541078, 61.4747266 , 63.61500812, 64.12526067, 62.84374666,
       58.36929719, 58.67003608, 60.77282095]), 'std_fit_time': array([0.53694146, 0.83434635, 0.214964  , 1.57713381, 0.15270443,
       1.38458382, 0.48509331, 1.57251447]), 'mean_score_time': array([0.2298309 , 0.22336316, 0.23314182, 0.20988369, 0.22038627,
       0.20765114, 0.2093099 , 0.21826251]), 'std_score_time': array([0.0059124 , 0.01283008, 0.00362598, 0.00690187, 0.01359165,
       0.00460869, 0.0074495 , 0.00854652]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54995478, -0.55      , -0.025     ,
       -0.025     , -0.54995478, -0.55      ]), 'split2_test_score': array([-1.96900686e-05, -1.16860280e-02, -5.48745550e-01, -5.49357418e-01,
       -1.96900686e-05, -1.16860280e-02, -5.48745550e-01, -5.49357418e-01]), 'mean_test_score': array([-0.01667323, -0.02056201, -0.54956678, -0.54978581, -0.01667323,
       -0.02056201, -0.54956678, -0.54978581]), 'std_test_score': array([0.01177583, 0.00627627, 0.00058099, 0.00030292, 0.01177583,
       0.00627627, 0.00058099, 0.00030292]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 00:33:53,658 - __main__ - INFO - (34) - BEST_SCORE_: -0.0166732300228804
2020-02-15 00:33:53,671 - __main__ - INFO - (34) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-15 00:33:53,684 - __main__ - INFO - (35) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 00:58:38,840 - __main__ - INFO - (35) - CV_RESULTS_: {'mean_fit_time': array([59.84119844, 57.82597605, 59.29066269, 58.8611447 , 58.40354609,
       59.36223944, 59.6477414 , 58.74284252]), 'std_fit_time': array([0.61732068, 0.10300649, 0.30864346, 0.04227236, 0.56544045,
       0.1921258 , 0.40439262, 0.82685788]), 'mean_score_time': array([0.2102743 , 0.21553143, 0.20761514, 0.21175249, 0.21844117,
       0.22416472, 0.20963033, 0.21497782]), 'std_score_time': array([0.01494365, 0.01179085, 0.01056987, 0.00318159, 0.00536483,
       0.00770088, 0.00567825, 0.00174312]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-5.39114390e-05, -1.19430295e-02, -5.48645599e-01, -5.49348501e-01,
       -5.39114390e-05, -1.19430295e-02, -5.48645599e-01, -5.49348501e-01]), 'split1_test_score': array([-0.0228935 , -0.025     , -0.54991337, -0.55      , -0.0228935 ,
       -0.025     , -0.54991337, -0.55      ]), 'split2_test_score': array([-0.00433947, -0.02096626, -0.54901711, -0.54980216, -0.00433947,
       -0.02096626, -0.54901711, -0.54980216]), 'mean_test_score': array([-0.00909563, -0.0193031 , -0.54919203, -0.54971689, -0.00909563,
       -0.0193031 , -0.54919203, -0.54971689]), 'std_test_score': array([0.0099122 , 0.00545868, 0.00053214, 0.00027272, 0.0099122 ,
       0.00545868, 0.00053214, 0.00027272]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 00:58:38,847 - __main__ - INFO - (35) - BEST_SCORE_: -0.009095625572515968
2020-02-15 00:58:38,849 - __main__ - INFO - (35) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-15 00:58:38,852 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 01:05:06,870 - __main__ - INFO - (36) - Started GridSearchCV with: <function params at 0x7f207ac098c8>
2020-02-15 01:05:16,266 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 01:28:59,620 - __main__ - INFO - (36) - CV_RESULTS_: {'mean_fit_time': array([56.26761699, 56.72104971, 57.25526611, 57.21486489, 56.31582427,
       55.68904932, 56.46199171, 56.17703923]), 'std_fit_time': array([0.30044894, 0.34962746, 0.15210352, 0.08705293, 0.31258819,
       0.04372404, 0.11954762, 0.05328399]), 'mean_score_time': array([0.21052265, 0.20926491, 0.2018834 , 0.19611216, 0.20528102,
       0.205676  , 0.19624996, 0.19465089]), 'std_score_time': array([0.00624367, 0.00937658, 0.00602642, 0.00943001, 0.01244719,
       0.00961376, 0.01034173, 0.00731651]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00059091, -0.0189863 , -0.54867026, -0.54967421, -0.00059091,
       -0.0189863 , -0.54867026, -0.54967421]), 'split1_test_score': array([-0.00946443, -0.02408414, -0.54934635, -0.54995051, -0.00946443,
       -0.02408414, -0.54934635, -0.54995051]), 'split2_test_score': array([-0.00209474, -0.02252676, -0.54891803, -0.5498692 , -0.00209474,
       -0.02252676, -0.54891803, -0.5498692 ]), 'mean_test_score': array([-0.00405003, -0.02186573, -0.54897821, -0.54983131, -0.00405003,
       -0.02186573, -0.54897821, -0.54983131]), 'std_test_score': array([0.00387747, 0.00213303, 0.00027927, 0.00011594, 0.00387747,
       0.00213303, 0.00027927, 0.00011594]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 01:28:59,627 - __main__ - INFO - (36) - BEST_SCORE_: -0.004050025645429261
2020-02-15 01:28:59,628 - __main__ - INFO - (36) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-15 01:28:59,641 - __main__ - INFO - (37) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 01:52:20,630 - __main__ - INFO - (37) - CV_RESULTS_: {'mean_fit_time': array([55.54527402, 55.00111945, 55.93999235, 55.56068365, 54.94416293,
       54.84641735, 55.63363894, 56.93566728]), 'std_fit_time': array([0.18094263, 0.02843744, 0.34750393, 0.21461622, 0.04368316,
       0.14637729, 0.17868555, 1.12602189]), 'mean_score_time': array([0.20729478, 0.20329603, 0.19866784, 0.19244719, 0.19639254,
       0.20644188, 0.20103733, 0.20527212]), 'std_score_time': array([0.01907454, 0.00598361, 0.00224277, 0.00221799, 0.00852406,
       0.00277405, 0.0022845 , 0.00504426]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.00151445, -0.02444558, -0.54878502, -0.54996545, -0.00151445,
       -0.02444558, -0.54878502, -0.54996545]), 'split1_test_score': array([-0.01320651, -0.02466827, -0.54936972, -0.54997935, -0.01320651,
       -0.02466827, -0.54936972, -0.54997935]), 'split2_test_score': array([-0.01423941, -0.02482935, -0.54949382, -0.54998938, -0.01423941,
       -0.02482935, -0.54949382, -0.54998938]), 'mean_test_score': array([-0.00965346, -0.02464773, -0.54921619, -0.54997806, -0.00965346,
       -0.02464773, -0.54921619, -0.54997806]), 'std_test_score': array([5.77057332e-03, 1.57346443e-04, 3.09059447e-04, 9.81116126e-06,
       5.77057332e-03, 1.57346443e-04, 3.09059447e-04, 9.81116126e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 01:52:20,637 - __main__ - INFO - (37) - BEST_SCORE_: -0.00965345711192317
2020-02-15 01:52:20,644 - __main__ - INFO - (37) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-15 01:52:20,650 - __main__ - INFO - (38) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 02:15:39,724 - __main__ - INFO - (38) - CV_RESULTS_: {'mean_fit_time': array([55.11594057, 55.18514832, 56.02203727, 55.91564266, 54.80707987,
       55.25827527, 55.62290152, 55.95938651]), 'std_fit_time': array([0.16509869, 0.28263471, 0.51790347, 0.15431431, 0.07734353,
       0.13861219, 0.24255347, 0.44057979]), 'mean_score_time': array([0.19990945, 0.20488954, 0.21008865, 0.19846503, 0.202847  ,
       0.21326081, 0.20509648, 0.20581158]), 'std_score_time': array([0.01371379, 0.00940856, 0.01674673, 0.00686049, 0.01231466,
       0.0152612 , 0.00476094, 0.01754894]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01607715, -0.02497257, -0.54956297, -0.54999521, -0.01607715,
       -0.02497257, -0.54956297, -0.54999521]), 'split1_test_score': array([-0.00759989, -0.02411982, -0.54911506, -0.54995312, -0.00759989,
       -0.02411982, -0.54911506, -0.54995312]), 'split2_test_score': array([-0.00753591, -0.02411618, -0.54907968, -0.54995294, -0.00753591,
       -0.02411618, -0.54907968, -0.54995294]), 'mean_test_score': array([-0.01040432, -0.02440285, -0.54925257, -0.54996709, -0.01040432,
       -0.02440285, -0.54925257, -0.54996709]), 'std_test_score': array([4.01138428e-03, 4.02851707e-04, 2.19959153e-04, 1.98862299e-05,
       4.01138428e-03, 4.02851707e-04, 2.19959153e-04, 1.98862299e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 02:15:39,731 - __main__ - INFO - (38) - BEST_SCORE_: -0.0104043160826083
2020-02-15 02:15:39,736 - __main__ - INFO - (38) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-02-15 02:15:39,746 - __main__ - INFO - (39) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-02-15 02:39:09,624 - __main__ - INFO - (39) - CV_RESULTS_: {'mean_fit_time': array([55.63991491, 56.10662595, 56.42994308, 56.3798298 , 55.46610276,
       55.79419923, 56.2101136 , 55.83148066]), 'std_fit_time': array([0.04925457, 0.16267616, 0.27795101, 0.27539178, 0.06258618,
       0.14978077, 0.28292027, 0.12178323]), 'mean_score_time': array([0.20536542, 0.20571311, 0.19560973, 0.22182457, 0.22129027,
       0.20823971, 0.22564467, 0.19367854]), 'std_score_time': array([0.01867873, 0.01624267, 0.01374043, 0.0251522 , 0.02662757,
       0.00514438, 0.01591018, 0.00502408]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.01195374, -0.02405313, -0.54929761, -0.54995487, -0.01195374,
       -0.02405313, -0.54929761, -0.54995487]), 'split1_test_score': array([-2.11089426e-05, -0.00000000e+00, -5.48654785e-01, -5.48512070e-01,
       -2.11089426e-05, -0.00000000e+00, -5.48654785e-01, -5.48512070e-01]), 'split2_test_score': array([-0.025     , -0.025     , -0.54996412, -0.55      , -0.025     ,
       -0.025     , -0.54996412, -0.55      ]), 'mean_test_score': array([-0.01232495, -0.01635104, -0.54930551, -0.54948898, -0.01232495,
       -0.01635104, -0.54930551, -0.54948898]), 'std_test_score': array([0.01020097, 0.01156839, 0.00053456, 0.00069102, 0.01020097,
       0.01156839, 0.00053456, 0.00069102]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-02-15 02:39:09,630 - __main__ - INFO - (39) - BEST_SCORE_: -0.012324948150096417
2020-02-15 02:39:09,634 - __main__ - INFO - (39) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}