2020-03-20 09:29:00,111 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:29:00,117 - __main__ - INFO - (0) - DATA_DIMENSION_: 50
2020-03-20 09:52:00,424 - __main__ - INFO - (0) - CV_RESULTS_: {'mean_fit_time': array([54.55373311, 54.28079398, 54.89763021, 55.07886799, 54.2212495 ,
       54.44521554, 55.45499587, 55.25399176]), 'std_fit_time': array([1.03722121, 0.25202818, 0.24299545, 0.16065481, 0.04507234,
       0.24447607, 1.54569518, 0.23027249]), 'mean_score_time': array([0.19552199, 0.20240712, 0.18418725, 0.20387355, 0.18531235,
       0.19260327, 0.18955104, 0.18878126]), 'std_score_time': array([0.01163069, 0.01402222, 0.00206926, 0.01083445, 0.00122207,
       0.00635821, 0.00394232, 0.00195736]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 5, 1, 1, 5, 5], dtype=int32)}
2020-03-20 09:52:00,435 - __main__ - INFO - (0) - BEST_SCORE_: -0.025000000000000005
2020-03-20 09:52:00,440 - __main__ - INFO - (0) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 09:52:00,450 - __main__ - INFO - (1) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:52:00,453 - __main__ - INFO - (1) - DATA_DIMENSION_: 50
2020-03-20 10:14:59,838 - __main__ - INFO - (1) - CV_RESULTS_: {'mean_fit_time': array([54.66983493, 54.48201839, 54.95955809, 55.12361844, 54.25867494,
       54.14860018, 54.96516124, 55.07801533]), 'std_fit_time': array([0.3590277 , 0.18621725, 0.26720753, 0.04762407, 0.2119565 ,
       0.0913293 , 0.24134769, 0.28153754]), 'mean_score_time': array([0.19470962, 0.19853131, 0.19032693, 0.19505246, 0.19241834,
       0.1921049 , 0.1888636 , 0.1915791 ]), 'std_score_time': array([0.00465749, 0.0055498 , 0.00506297, 0.00083271, 0.00479776,
       0.00135418, 0.00229012, 0.00086935]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999998, -0.55      , -0.025     ,
       -0.025     , -0.54999998, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 8.95560163e-09, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 8.95560163e-09, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 10:14:59,844 - __main__ - INFO - (1) - BEST_SCORE_: -0.025000000000000005
2020-03-20 10:14:59,845 - __main__ - INFO - (1) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 10:14:59,850 - __main__ - INFO - (2) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:14:59,852 - __main__ - INFO - (2) - DATA_DIMENSION_: 50
2020-03-20 10:37:49,026 - __main__ - INFO - (2) - CV_RESULTS_: {'mean_fit_time': array([54.22744147, 54.4405822 , 55.4158078 , 55.14343842, 53.95719465,
       53.58310922, 53.86276944, 54.22180669]), 'std_fit_time': array([0.28712748, 0.06916139, 0.29885858, 0.15447214, 0.04181463,
       0.1080261 , 0.12673562, 0.22229068]), 'mean_score_time': array([0.19016449, 0.18701847, 0.18953681, 0.18848499, 0.18757764,
       0.18908056, 0.18640685, 0.19019596]), 'std_score_time': array([0.00752389, 0.00067039, 0.00316223, 0.0034838 , 0.00439106,
       0.00187523, 0.00095932, 0.00090852]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999998, -0.55      , -0.025     ,
       -0.025     , -0.54999998, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 7.14723322e-09, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 7.14723322e-09, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 10:37:49,032 - __main__ - INFO - (2) - BEST_SCORE_: -0.025000000000000005
2020-03-20 10:37:49,037 - __main__ - INFO - (2) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 10:37:49,043 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:37:49,047 - __main__ - INFO - (3) - DATA_DIMENSION_: 50
2020-03-20 11:00:49,689 - __main__ - INFO - (3) - CV_RESULTS_: {'mean_fit_time': array([53.32877898, 54.55677319, 55.22935899, 55.11803325, 55.05114436,
       55.15337276, 54.85734661, 54.80263241]), 'std_fit_time': array([0.27442009, 0.26933357, 0.14151904, 0.1240475 , 0.12816279,
       0.16075762, 0.23769446, 0.0357879 ]), 'mean_score_time': array([0.25944654, 0.19030205, 0.18638873, 0.19044058, 0.20062089,
       0.19385648, 0.18938311, 0.19488533]), 'std_score_time': array([0.09504254, 0.00267516, 0.00136986, 0.00246282, 0.00096663,
       0.00534047, 0.00078462, 0.00799078]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 5, 1, 1, 5, 5], dtype=int32)}
2020-03-20 11:00:49,694 - __main__ - INFO - (3) - BEST_SCORE_: -0.025000000000000005
2020-03-20 11:00:49,698 - __main__ - INFO - (3) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:00:49,703 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:00:49,705 - __main__ - INFO - (4) - DATA_DIMENSION_: 50
2020-03-20 11:23:48,946 - __main__ - INFO - (4) - CV_RESULTS_: {'mean_fit_time': array([54.49191578, 54.41332563, 54.92964196, 55.44575159, 53.85349139,
       54.50053167, 54.84937938, 55.52762826]), 'std_fit_time': array([0.50523063, 0.32004119, 0.10606537, 0.10355374, 0.27538552,
       0.34907264, 0.15623532, 0.4157177 ]), 'mean_score_time': array([0.18937842, 0.18911521, 0.18498309, 0.1907649 , 0.18527269,
       0.19021297, 0.18738476, 0.20855633]), 'std_score_time': array([0.00315915, 0.00207094, 0.00340014, 0.00106621, 0.00120613,
       0.00112724, 0.00370856, 0.00891274]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.78094503e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.78094503e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 11:23:48,951 - __main__ - INFO - (4) - BEST_SCORE_: -0.025000000000000005
2020-03-20 11:23:48,953 - __main__ - INFO - (4) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:23:48,966 - __main__ - INFO - (5) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:23:48,969 - __main__ - INFO - (5) - DATA_DIMENSION_: 50
2020-03-20 11:46:50,968 - __main__ - INFO - (5) - CV_RESULTS_: {'mean_fit_time': array([54.57002362, 54.448493  , 55.26828281, 54.95282173, 55.56753365,
       54.10247636, 54.85203346, 54.72943044]), 'std_fit_time': array([0.3318716 , 0.17763297, 0.33708107, 0.11785377, 1.37774975,
       0.34491032, 0.13168491, 0.15412956]), 'mean_score_time': array([0.18689831, 0.20216052, 0.18928337, 0.18875798, 0.20708116,
       0.19807092, 0.19958051, 0.19112968]), 'std_score_time': array([0.00244423, 0.00712785, 0.00498888, 0.0004313 , 0.02642546,
       0.00889866, 0.00520048, 0.00099262]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54999974, -0.55      , -0.025     ,
       -0.025     , -0.54999974, -0.55      ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999998, -0.55      , -0.025     ,
       -0.025     , -0.54999998, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999991, -0.55      , -0.025     ,
       -0.025     , -0.54999991, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.17163532e-07, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.17163532e-07, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 11:46:50,978 - __main__ - INFO - (5) - BEST_SCORE_: -0.025000000000000005
2020-03-20 11:46:50,980 - __main__ - INFO - (5) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:46:50,986 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:46:50,987 - __main__ - INFO - (6) - DATA_DIMENSION_: 50
2020-03-20 12:09:51,500 - __main__ - INFO - (6) - CV_RESULTS_: {'mean_fit_time': array([54.62296637, 55.00425243, 55.32267515, 54.53585704, 54.06146272,
       54.50404557, 54.84927177, 55.28025214]), 'std_fit_time': array([0.37049769, 0.15893553, 0.30292508, 0.23365795, 0.20307146,
       0.23395735, 0.11762495, 0.41904827]), 'mean_score_time': array([0.1871024 , 0.19090128, 0.18944478, 0.18791389, 0.18498047,
       0.19680723, 0.18995126, 0.1964821 ]), 'std_score_time': array([0.00568748, 0.00341007, 0.00335943, 0.00207517, 0.00072291,
       0.00772851, 0.01014198, 0.00986476]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.45972164e-14, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.45972164e-14, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 12:09:51,506 - __main__ - INFO - (6) - BEST_SCORE_: -0.025000000000000005
2020-03-20 12:09:51,507 - __main__ - INFO - (6) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:09:51,522 - __main__ - INFO - (7) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:09:51,527 - __main__ - INFO - (7) - DATA_DIMENSION_: 50
2020-03-20 12:32:49,691 - __main__ - INFO - (7) - CV_RESULTS_: {'mean_fit_time': array([54.3123339 , 54.35535796, 54.71577017, 55.04895782, 54.72583882,
       54.85077381, 54.60124127, 54.96655154]), 'std_fit_time': array([0.26967565, 0.26667003, 0.21052146, 0.25777204, 0.08247986,
       0.19415675, 0.13996916, 0.10157664]), 'mean_score_time': array([0.18808929, 0.19573228, 0.18890492, 0.18990835, 0.18399159,
       0.19971037, 0.19402003, 0.1904436 ]), 'std_score_time': array([0.0011833 , 0.00325125, 0.00151273, 0.00034423, 0.00020275,
       0.01285492, 0.01266391, 0.00138991]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 5, 1, 1, 5, 5], dtype=int32)}
2020-03-20 12:32:49,697 - __main__ - INFO - (7) - BEST_SCORE_: -0.025000000000000005
2020-03-20 12:32:49,702 - __main__ - INFO - (7) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:32:49,712 - __main__ - INFO - (8) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:32:49,714 - __main__ - INFO - (8) - DATA_DIMENSION_: 50
2020-03-20 12:56:01,667 - __main__ - INFO - (8) - CV_RESULTS_: {'mean_fit_time': array([54.58908868, 54.75854699, 55.10529701, 55.46668331, 54.84958482,
       55.24766755, 56.01423184, 55.81119744]), 'std_fit_time': array([0.15885276, 0.18377635, 0.1164568 , 0.05761059, 0.37293183,
       0.08260667, 0.32282571, 0.33024567]), 'mean_score_time': array([0.19242096, 0.18906069, 0.18966174, 0.18749905, 0.18716971,
       0.18898431, 0.18687415, 0.18900092]), 'std_score_time': array([0.00609349, 0.00081686, 0.00513313, 0.00117245, 0.00223323,
       0.00104478, 0.00054481, 0.00150029]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 3.58139702e-09, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 3.58139702e-09, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 12:56:01,673 - __main__ - INFO - (8) - BEST_SCORE_: -0.025000000000000005
2020-03-20 12:56:01,674 - __main__ - INFO - (8) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:56:01,679 - __main__ - INFO - (9) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:56:01,680 - __main__ - INFO - (9) - DATA_DIMENSION_: 50
2020-03-20 13:19:10,754 - __main__ - INFO - (9) - CV_RESULTS_: {'mean_fit_time': array([55.37494127, 55.18911854, 55.16982865, 55.76857964, 54.52631458,
       54.62178429, 55.09132155, 55.19247778]), 'std_fit_time': array([0.25284423, 0.02535661, 0.42625396, 0.14885008, 0.25152432,
       0.09114527, 0.03660046, 0.24628833]), 'mean_score_time': array([0.18972301, 0.19122513, 0.18829966, 0.19315457, 0.1996572 ,
       0.19643307, 0.18823131, 0.18986813]), 'std_score_time': array([0.00138553, 0.00251185, 0.00467637, 0.00474882, 0.01942947,
       0.01158755, 0.00130822, 0.00595269]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.60143150e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.60143150e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 13:19:10,760 - __main__ - INFO - (9) - BEST_SCORE_: -0.025000000000000005
2020-03-20 13:19:10,766 - __main__ - INFO - (9) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:19:10,775 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:19:10,777 - __main__ - INFO - (10) - DATA_DIMENSION_: 50
2020-03-20 13:42:08,866 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([55.05242308, 55.11551221, 54.84209601, 54.5109996 , 53.95956985,
       54.2938242 , 54.86413884, 54.58104817]), 'std_fit_time': array([0.27024401, 0.20705953, 0.37805845, 0.19970616, 0.23212291,
       0.25896455, 0.06597969, 0.12870068]), 'mean_score_time': array([0.19800655, 0.1913267 , 0.19176443, 0.18647869, 0.18554123,
       0.19229754, 0.1863579 , 0.18623241]), 'std_score_time': array([0.01437178, 0.00192208, 0.00809497, 0.001529  , 0.00076026,
       0.00729776, 0.00269179, 0.00251609]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54998321, -0.55      , -0.025     ,
       -0.025     , -0.54998321, -0.55      ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025    , -0.025    , -0.5499944, -0.55     , -0.025    ,
       -0.025    , -0.5499944, -0.55     ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 7.91323446e-06, 1.23984968e-12,
       3.46944695e-18, 3.46944695e-18, 7.91323446e-06, 1.23984968e-12]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 13:42:08,872 - __main__ - INFO - (10) - BEST_SCORE_: -0.025000000000000005
2020-03-20 13:42:08,874 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:42:08,881 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:42:08,883 - __main__ - INFO - (11) - DATA_DIMENSION_: 50
2020-03-20 14:05:21,708 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([54.55720194, 54.77528524, 55.82771738, 56.2404689 , 55.0149045 ,
       55.24759475, 55.35164595, 55.20171801]), 'std_fit_time': array([0.10456667, 0.25224947, 0.49615041, 0.23255568, 0.02909469,
       0.30074783, 0.07562899, 0.41304514]), 'mean_score_time': array([0.19751223, 0.19267305, 0.18720341, 0.19314774, 0.18676837,
       0.19182348, 0.1855247 , 0.19714371]), 'std_score_time': array([0.01360695, 0.00183789, 0.00356473, 0.00218076, 0.00223501,
       0.00244958, 0.00088541, 0.00992009]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 5, 1, 1, 5, 5], dtype=int32)}
2020-03-20 14:05:21,714 - __main__ - INFO - (11) - BEST_SCORE_: -0.025000000000000005
2020-03-20 14:05:21,724 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:05:21,732 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:05:21,734 - __main__ - INFO - (12) - DATA_DIMENSION_: 50
2020-03-20 14:28:32,051 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([54.73505425, 54.90831908, 55.79011623, 55.42878254, 54.83418679,
       55.01715056, 55.59313718, 54.95733666]), 'std_fit_time': array([0.06250858, 0.14047439, 0.27251508, 0.07252575, 0.09181213,
       0.43118988, 0.06668058, 0.05190102]), 'mean_score_time': array([0.1898044 , 0.21274535, 0.18735385, 0.19209782, 0.19299984,
       0.18873636, 0.18934703, 0.18852464]), 'std_score_time': array([0.00545433, 0.03391377, 0.00503714, 0.00497538, 0.01230352,
       0.00164021, 0.00492169, 0.00149922]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025    , -0.025    , -0.5499999, -0.55     , -0.025    ,
       -0.025    , -0.5499999, -0.55     ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999997, -0.55      , -0.025     ,
       -0.025     , -0.54999997, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 4.54728974e-08, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 4.54728974e-08, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 14:28:32,057 - __main__ - INFO - (12) - BEST_SCORE_: -0.025000000000000005
2020-03-20 14:28:32,060 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:28:32,065 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:28:32,067 - __main__ - INFO - (13) - DATA_DIMENSION_: 50
2020-03-20 14:51:37,798 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([54.63791696, 54.6301411 , 55.19868938, 55.37656069, 54.48372316,
       54.60860133, 55.09813523, 55.61060516]), 'std_fit_time': array([0.22235901, 0.31293841, 0.20675637, 0.19325135, 0.06507629,
       0.41180098, 0.03427627, 0.31290558]), 'mean_score_time': array([0.18802762, 0.20391448, 0.19517533, 0.19771663, 0.1903758 ,
       0.1930236 , 0.1968983 , 0.19336478]), 'std_score_time': array([0.00167572, 0.01800309, 0.01091287, 0.00884289, 0.00447325,
       0.00137608, 0.00805778, 0.00496322]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 3.69620445e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 3.69620445e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 14:51:37,805 - __main__ - INFO - (13) - BEST_SCORE_: -0.025000000000000005
2020-03-20 14:51:37,811 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:51:37,816 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:51:37,818 - __main__ - INFO - (14) - DATA_DIMENSION_: 50
2020-03-20 15:14:43,085 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([54.86311984, 54.34851201, 55.01410596, 55.29337128, 54.52743498,
       54.58068617, 55.37996912, 55.73347576]), 'std_fit_time': array([0.09287385, 0.20409746, 0.21150744, 0.50328376, 0.4253765 ,
       0.25454775, 0.09109766, 0.28660571]), 'mean_score_time': array([0.18668954, 0.20168638, 0.20284486, 0.18750644, 0.18931349,
       0.20558   , 0.18398062, 0.19107405]), 'std_score_time': array([0.00431416, 0.01567181, 0.01928711, 0.00094414, 0.0069135 ,
       0.01104537, 0.0018399 , 0.00283176]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 6.77352566e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 6.77352566e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 15:14:43,091 - __main__ - INFO - (14) - BEST_SCORE_: -0.025000000000000005
2020-03-20 15:14:43,097 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:14:43,104 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:14:43,106 - __main__ - INFO - (15) - DATA_DIMENSION_: 50
2020-03-20 15:37:53,202 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([54.74404772, 54.75522939, 55.68423891, 55.6291008 , 54.9123679 ,
       55.22554318, 55.31753476, 55.13898253]), 'std_fit_time': array([0.45256751, 0.19891421, 0.13272717, 0.06447116, 0.2239055 ,
       0.33626131, 0.17712073, 0.15532673]), 'mean_score_time': array([0.18681685, 0.19288397, 0.18572601, 0.19117634, 0.19365493,
       0.19092862, 0.18738484, 0.19148684]), 'std_score_time': array([0.00142638, 0.00374253, 0.0003606 , 0.0018301 , 0.00060267,
       0.00097679, 0.00204573, 0.00415576]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02494831, -0.025     , -0.54999371, -0.55      , -0.02494831,
       -0.025     , -0.54999371, -0.55      ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999371, -0.55      , -0.025     ,
       -0.025     , -0.54999371, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.02498277, -0.025     , -0.5499958 , -0.55      , -0.02498277,
       -0.025     , -0.5499958 , -0.55      ]), 'std_test_score': array([2.43686095e-05, 3.46944695e-18, 2.96737497e-06, 2.43887976e-14,
       2.43686095e-05, 3.46944695e-18, 2.96737497e-06, 2.43887976e-14]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 15:37:53,208 - __main__ - INFO - (15) - BEST_SCORE_: -0.024982768790968293
2020-03-20 15:37:53,214 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:37:53,223 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:37:53,227 - __main__ - INFO - (16) - DATA_DIMENSION_: 50
2020-03-20 16:00:59,903 - __main__ - INFO - (16) - CV_RESULTS_: {'mean_fit_time': array([54.58585707, 54.82901335, 55.51757073, 54.9884123 , 54.96170505,
       54.54792468, 54.83272076, 55.72798602]), 'std_fit_time': array([0.11234904, 0.08278494, 0.30466354, 0.39279367, 0.43701752,
       0.20652164, 0.1260663 , 0.16288977]), 'mean_score_time': array([0.19339728, 0.1925025 , 0.19980772, 0.19389049, 0.18501767,
       0.18886765, 0.18826397, 0.19403291]), 'std_score_time': array([0.00869882, 0.00726896, 0.00929436, 0.00548312, 0.00050569,
       0.00301426, 0.00297354, 0.00285086]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 3.30384460e-09, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 3.30384460e-09, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 16:00:59,909 - __main__ - INFO - (16) - BEST_SCORE_: -0.025000000000000005
2020-03-20 16:00:59,911 - __main__ - INFO - (16) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:00:59,925 - __main__ - INFO - (17) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:00:59,927 - __main__ - INFO - (17) - DATA_DIMENSION_: 50
2020-03-20 16:24:28,010 - __main__ - INFO - (17) - CV_RESULTS_: {'mean_fit_time': array([55.12444973, 55.149309  , 56.28416665, 56.36509418, 55.77478925,
       55.69945256, 56.07149935, 56.45184104]), 'std_fit_time': array([0.20095899, 0.29024697, 0.52027119, 0.09579855, 0.27350193,
       0.35674048, 0.41543092, 0.30123891]), 'mean_score_time': array([0.19295359, 0.19591554, 0.18823489, 0.19309608, 0.19344028,
       0.18981719, 0.1909097 , 0.19249582]), 'std_score_time': array([0.00483407, 0.00358757, 0.00184035, 0.00229018, 0.00616231,
       0.00342024, 0.00095927, 0.00268598]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.08393761e-09, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.08393761e-09, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 16:24:28,016 - __main__ - INFO - (17) - BEST_SCORE_: -0.025000000000000005
2020-03-20 16:24:28,017 - __main__ - INFO - (17) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:24:28,026 - __main__ - INFO - (18) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:24:28,028 - __main__ - INFO - (18) - DATA_DIMENSION_: 50
2020-03-20 16:47:46,216 - __main__ - INFO - (18) - CV_RESULTS_: {'mean_fit_time': array([55.52027146, 55.39045715, 55.88698332, 55.43664002, 54.94356608,
       54.95064433, 55.9999102 , 55.87557205]), 'std_fit_time': array([0.32740582, 0.08890787, 0.31102042, 0.38367956, 0.08435396,
       0.06153217, 0.0808586 , 0.33626582]), 'mean_score_time': array([0.19359175, 0.19393905, 0.19205165, 0.18561721, 0.18610819,
       0.19117943, 0.18642338, 0.19572528]), 'std_score_time': array([0.00872432, 0.00335358, 0.01032813, 0.00082334, 0.0011402 ,
       0.00538873, 0.00086702, 0.007217  ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 8.55444048e-11, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 8.55444048e-11, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 16:47:46,227 - __main__ - INFO - (18) - BEST_SCORE_: -0.025000000000000005
2020-03-20 16:47:46,228 - __main__ - INFO - (18) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:47:46,233 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:47:46,235 - __main__ - INFO - (19) - DATA_DIMENSION_: 50
2020-03-20 17:10:58,234 - __main__ - INFO - (19) - CV_RESULTS_: {'mean_fit_time': array([54.83533573, 55.10565901, 55.70809277, 55.91717275, 54.60068607,
       55.04645562, 55.48615344, 55.22548572]), 'std_fit_time': array([0.16771889, 0.19295859, 0.00761182, 0.41914754, 0.24314146,
       0.41292438, 0.1079228 , 0.10393446]), 'mean_score_time': array([0.19031072, 0.19295939, 0.18728725, 0.19023458, 0.18643594,
       0.19281467, 0.19117037, 0.19154787]), 'std_score_time': array([0.0017921 , 0.00310741, 0.00264034, 0.00080316, 0.00122749,
       0.0017498 , 0.00616821, 0.0037858 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.77420448e-13, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.77420448e-13, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 17:10:58,240 - __main__ - INFO - (19) - BEST_SCORE_: -0.025000000000000005
2020-03-20 17:10:58,241 - __main__ - INFO - (19) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:10:58,249 - __main__ - INFO - (20) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:10:58,251 - __main__ - INFO - (20) - DATA_DIMENSION_: 50
2020-03-20 17:34:19,523 - __main__ - INFO - (20) - CV_RESULTS_: {'mean_fit_time': array([54.93510556, 55.38526098, 55.85148923, 56.27172963, 55.49135629,
       55.56798522, 55.5158151 , 55.86050566]), 'std_fit_time': array([0.14967676, 0.08592116, 0.08744857, 0.5465181 , 0.14448495,
       0.16415763, 0.07818229, 0.2921386 ]), 'mean_score_time': array([0.19001333, 0.19223237, 0.18544404, 0.19087418, 0.18566211,
       0.18916241, 0.18455736, 0.19242485]), 'std_score_time': array([0.0048167 , 0.00132304, 0.00289012, 0.00214714, 0.00169631,
       0.00476221, 0.00082302, 0.00375207]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025     , -0.025     , -0.54999994, -0.55      , -0.025     ,
       -0.025     , -0.54999994, -0.55      ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999998, -0.55      , -0.025     ,
       -0.025     , -0.54999998, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 2.86684399e-08, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 2.86684399e-08, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 17:34:19,533 - __main__ - INFO - (20) - BEST_SCORE_: -0.025000000000000005
2020-03-20 17:34:19,543 - __main__ - INFO - (20) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:34:19,553 - __main__ - INFO - (21) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:34:19,557 - __main__ - INFO - (21) - DATA_DIMENSION_: 50
2020-03-20 17:57:42,345 - __main__ - INFO - (21) - CV_RESULTS_: {'mean_fit_time': array([55.53628929, 55.39561272, 55.94144805, 55.59221244, 55.2467498 ,
       55.26597953, 56.2031823 , 56.21323808]), 'std_fit_time': array([0.1774011 , 0.16281493, 0.07976396, 0.16764753, 0.22568959,
       0.27354963, 0.46860515, 0.18312048]), 'mean_score_time': array([0.19743554, 0.19214996, 0.19063807, 0.19387873, 0.18599455,
       0.18958354, 0.18852894, 0.18950629]), 'std_score_time': array([0.00100124, 0.00175069, 0.0088018 , 0.00412137, 0.00066807,
       0.00088129, 0.00428873, 0.00257396]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999996, -0.55      , -0.025     ,
       -0.025     , -0.54999996, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.82958111e-08, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.82958111e-08, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 17:57:42,351 - __main__ - INFO - (21) - BEST_SCORE_: -0.025000000000000005
2020-03-20 17:57:42,359 - __main__ - INFO - (21) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:57:42,369 - __main__ - INFO - (22) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:57:42,371 - __main__ - INFO - (22) - DATA_DIMENSION_: 50
2020-03-20 18:21:06,405 - __main__ - INFO - (22) - CV_RESULTS_: {'mean_fit_time': array([55.24743859, 55.37700113, 56.24865675, 56.14161197, 55.36235142,
       55.26147985, 55.87148778, 56.17852855]), 'std_fit_time': array([0.13377539, 0.44731581, 0.10286763, 0.13694217, 0.0859259 ,
       0.2829585 , 0.14392291, 0.0479454 ]), 'mean_score_time': array([0.18688814, 0.19158157, 0.18656866, 0.18837555, 0.19253135,
       0.18796643, 0.18826612, 0.18991661]), 'std_score_time': array([0.0013862 , 0.00380619, 0.00234017, 0.00195684, 0.00626941,
       0.000712  , 0.00247412, 0.00061679]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 6.48227383e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 6.48227383e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 18:21:06,415 - __main__ - INFO - (22) - BEST_SCORE_: -0.025000000000000005
2020-03-20 18:21:06,417 - __main__ - INFO - (22) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 18:21:06,424 - __main__ - INFO - (23) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:21:06,426 - __main__ - INFO - (23) - DATA_DIMENSION_: 50
2020-03-20 18:44:30,667 - __main__ - INFO - (23) - CV_RESULTS_: {'mean_fit_time': array([55.81274954, 55.54076974, 56.05370291, 56.19495559, 55.23517187,
       55.40179205, 55.99043957, 55.69045862]), 'std_fit_time': array([0.26351632, 0.11068177, 0.31174019, 0.07161485, 0.0781098 ,
       0.15986198, 0.27277547, 0.27149504]), 'mean_score_time': array([0.18931929, 0.19092679, 0.19429127, 0.18988665, 0.19459271,
       0.18913873, 0.2017475 , 0.19209441]), 'std_score_time': array([0.00257893, 0.00227916, 0.00839906, 0.00235146, 0.00200016,
       0.00049084, 0.01938757, 0.00137839]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.0166402 , -0.025     , -0.54957383, -0.54999853, -0.0166402 ,
       -0.025     , -0.54957383, -0.54999853]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.0222134 , -0.025     , -0.54985794, -0.54999951, -0.0222134 ,
       -0.025     , -0.54985794, -0.54999951]), 'std_test_score': array([3.94084739e-03, 3.46944695e-18, 2.00897155e-04, 6.91632188e-07,
       3.94084739e-03, 3.46944695e-18, 2.00897155e-04, 6.91632188e-07]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 18:44:30,673 - __main__ - INFO - (23) - BEST_SCORE_: -0.022213400087627927
2020-03-20 18:44:30,674 - __main__ - INFO - (23) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 18:44:30,683 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:44:30,687 - __main__ - INFO - (24) - DATA_DIMENSION_: 50
2020-03-20 19:07:44,844 - __main__ - INFO - (24) - CV_RESULTS_: {'mean_fit_time': array([54.76162076, 55.04376101, 55.8286407 , 56.06440878, 54.82402992,
       55.13925505, 55.09808175, 55.48741341]), 'std_fit_time': array([0.18261758, 0.27624634, 0.5331159 , 0.24429073, 0.234647  ,
       0.14780187, 0.39199207, 0.60511734]), 'mean_score_time': array([0.19306564, 0.1892337 , 0.20163075, 0.187404  , 0.18767206,
       0.19103622, 0.18433181, 0.19205976]), 'std_score_time': array([0.00957887, 0.002045  , 0.01117005, 0.00075422, 0.00188707,
       0.0026491 , 0.00066388, 0.00414479]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02482924, -0.025     , -0.54995901, -0.55      , -0.02482924,
       -0.025     , -0.54995901, -0.55      ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.02494308, -0.025     , -0.54998633, -0.55      , -0.02494308,
       -0.025     , -0.54998633, -0.55      ]), 'std_test_score': array([8.04955158e-05, 3.46944695e-18, 1.93209624e-05, 4.46870295e-11,
       8.04955158e-05, 3.46944695e-18, 1.93209624e-05, 4.46870295e-11]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:07:44,850 - __main__ - INFO - (24) - BEST_SCORE_: -0.024943081074953674
2020-03-20 19:07:44,863 - __main__ - INFO - (24) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:07:44,869 - __main__ - INFO - (25) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:07:44,871 - __main__ - INFO - (25) - DATA_DIMENSION_: 50
2020-03-20 19:31:09,215 - __main__ - INFO - (25) - CV_RESULTS_: {'mean_fit_time': array([55.68810471, 55.16628218, 56.18535169, 55.59144171, 54.92135739,
       55.45094538, 56.38054999, 56.4029967 ]), 'std_fit_time': array([0.17258103, 0.42913923, 0.21893185, 0.71479167, 0.36012094,
       0.29348742, 0.19153877, 0.3250369 ]), 'mean_score_time': array([0.19099704, 0.19654616, 0.19315235, 0.19931483, 0.19839597,
       0.19199944, 0.19588486, 0.19248923]), 'std_score_time': array([0.00553497, 0.00418157, 0.00367576, 0.0081755 , 0.00672548,
       0.00292796, 0.00942542, 0.00106723]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 0.00000000e+00, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 5, 1, 1, 5, 5], dtype=int32)}
2020-03-20 19:31:09,221 - __main__ - INFO - (25) - BEST_SCORE_: -0.025000000000000005
2020-03-20 19:31:09,222 - __main__ - INFO - (25) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:31:09,228 - __main__ - INFO - (26) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:31:09,232 - __main__ - INFO - (26) - DATA_DIMENSION_: 50
2020-03-20 19:54:27,441 - __main__ - INFO - (26) - CV_RESULTS_: {'mean_fit_time': array([55.72428298, 54.98265147, 55.67660507, 55.54430079, 54.7521979 ,
       54.90357765, 55.81918009, 56.49894142]), 'std_fit_time': array([0.51469393, 0.17680733, 0.1450376 , 0.17640586, 0.39119351,
       0.18611276, 0.19833744, 0.20001375]), 'mean_score_time': array([0.19022274, 0.19268545, 0.18756763, 0.18648505, 0.20317531,
       0.19434285, 0.18943954, 0.20542288]), 'std_score_time': array([0.00697067, 0.00079711, 0.00334884, 0.00075599, 0.01774549,
       0.00592118, 0.00524012, 0.01040184]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999997, -0.55      , -0.025     ,
       -0.025     , -0.54999997, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999999, -0.55      , -0.025     ,
       -0.025     , -0.54999999, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.29740709e-08, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.29740709e-08, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 19:54:27,447 - __main__ - INFO - (26) - BEST_SCORE_: -0.025000000000000005
2020-03-20 19:54:27,455 - __main__ - INFO - (26) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:54:27,469 - __main__ - INFO - (27) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:54:27,471 - __main__ - INFO - (27) - DATA_DIMENSION_: 50
2020-03-20 20:17:59,968 - __main__ - INFO - (27) - CV_RESULTS_: {'mean_fit_time': array([55.59568357, 55.89846047, 56.29545315, 55.99813231, 55.45523556,
       55.71929653, 57.39934619, 56.14351312]), 'std_fit_time': array([0.28307219, 0.2103299 , 0.2137518 , 0.16745919, 0.05192559,
       0.2964964 , 1.31577417, 0.04297563]), 'mean_score_time': array([0.19297282, 0.20598761, 0.19008048, 0.20279153, 0.20059029,
       0.20117307, 0.18815668, 0.19954729]), 'std_score_time': array([0.00381498, 0.01355824, 0.00052171, 0.00915117, 0.01020332,
       0.01298859, 0.00217288, 0.0077828 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.        , -0.025     , -0.54929931, -0.54998633, -0.        ,
       -0.025     , -0.54929931, -0.54998633]), 'mean_test_score': array([-0.01666667, -0.025     , -0.54976644, -0.54999544, -0.01666667,
       -0.025     , -0.54976644, -0.54999544]), 'std_test_score': array([1.17851130e-02, 3.46944695e-18, 3.30310481e-04, 6.44564414e-06,
       1.17851130e-02, 3.46944695e-18, 3.30310481e-04, 6.44564414e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 20:17:59,974 - __main__ - INFO - (27) - BEST_SCORE_: -0.016666666666666666
2020-03-20 20:17:59,980 - __main__ - INFO - (27) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 20:17:59,986 - __main__ - INFO - (28) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:17:59,988 - __main__ - INFO - (28) - DATA_DIMENSION_: 50
2020-03-20 20:41:18,317 - __main__ - INFO - (28) - CV_RESULTS_: {'mean_fit_time': array([55.82054933, 55.69645047, 55.803756  , 55.34245165, 55.6847407 ,
       55.01258977, 55.18591158, 55.55577183]), 'std_fit_time': array([0.43432074, 0.4350922 , 0.31087274, 0.19997325, 0.11079841,
       0.23085923, 0.05494882, 0.28536929]), 'mean_score_time': array([0.18534676, 0.1901776 , 0.18269412, 0.1919229 , 0.18606544,
       0.19285162, 0.1832761 , 0.19770741]), 'std_score_time': array([0.00125149, 0.00119058, 0.00090355, 0.00120482, 0.00097919,
       0.00578961, 0.00201508, 0.01136716]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 7.59512839e-11, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 7.59512839e-11, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 20:41:18,323 - __main__ - INFO - (28) - BEST_SCORE_: -0.025000000000000005
2020-03-20 20:41:18,324 - __main__ - INFO - (28) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 20:41:18,330 - __main__ - INFO - (29) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:41:18,332 - __main__ - INFO - (29) - DATA_DIMENSION_: 50
2020-03-20 21:04:33,583 - __main__ - INFO - (29) - CV_RESULTS_: {'mean_fit_time': array([55.17384322, 54.90751847, 56.02762516, 56.44124214, 55.26398579,
       54.63813591, 55.2659444 , 55.31544431]), 'std_fit_time': array([0.40435079, 0.07664901, 0.20685958, 0.03418898, 0.2724342 ,
       0.06682262, 0.19779715, 0.21866609]), 'mean_score_time': array([0.18977714, 0.19062519, 0.19349289, 0.19879166, 0.19232305,
       0.19718488, 0.18812633, 0.19500271]), 'std_score_time': array([0.00282616, 0.00195102, 0.00405873, 0.01164973, 0.00358234,
       0.0050638 , 0.00129625, 0.00436579]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 5.95838645e-12, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 5.95838645e-12, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 21:04:33,589 - __main__ - INFO - (29) - BEST_SCORE_: -0.025000000000000005
2020-03-20 21:04:33,601 - __main__ - INFO - (29) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 21:04:33,610 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 21:04:33,612 - __main__ - INFO - (30) - DATA_DIMENSION_: 50
2020-03-20 21:27:47,887 - __main__ - INFO - (30) - CV_RESULTS_: {'mean_fit_time': array([54.94058744, 54.58382813, 55.53132677, 55.42507052, 55.17667015,
       55.50943851, 56.12449233, 55.59531474]), 'std_fit_time': array([0.15771695, 0.25107789, 0.02077467, 0.18702115, 0.04251696,
       0.38674477, 0.09168517, 0.32168637]), 'mean_score_time': array([0.18854483, 0.19651874, 0.19633905, 0.18999728, 0.19170626,
       0.1964759 , 0.19382715, 0.19824576]), 'std_score_time': array([0.00266844, 0.0058365 , 0.00613573, 0.00156696, 0.00511241,
       0.00942987, 0.00542163, 0.01282288]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54999859, -0.55      , -0.025     ,
       -0.025     , -0.54999859, -0.55      ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999953, -0.55      , -0.025     ,
       -0.025     , -0.54999953, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 6.65987722e-07, 1.11022302e-16,
       3.46944695e-18, 3.46944695e-18, 6.65987722e-07, 1.11022302e-16]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 21:27:47,893 - __main__ - INFO - (30) - BEST_SCORE_: -0.025000000000000005
2020-03-20 21:27:47,895 - __main__ - INFO - (30) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:07:36,152 - __main__ - INFO - (31) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:07:36,157 - __main__ - INFO - (31) - DATA_DIMENSION_: 50
2020-03-20 23:29:50,442 - __main__ - INFO - (31) - CV_RESULTS_: {'mean_fit_time': array([54.2349577 , 52.76946425, 52.95372804, 54.7761445 , 52.13714655,
       53.04945111, 52.64320342, 51.81647619]), 'std_fit_time': array([0.29913765, 0.22059781, 0.0963302 , 2.75928228, 0.48936404,
       0.22743586, 0.16711676, 0.35153568]), 'mean_score_time': array([0.17877928, 0.18360853, 0.17991447, 0.18809334, 0.17741378,
       0.18338124, 0.17738954, 0.18238497]), 'std_score_time': array([0.00209314, 0.00189776, 0.00045339, 0.0096237 , 0.00062634,
       0.00239678, 0.00231142, 0.00153333]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 6.41326920e-11, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 6.41326920e-11, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 23:29:50,457 - __main__ - INFO - (31) - BEST_SCORE_: -0.025000000000000005
2020-03-20 23:29:50,459 - __main__ - INFO - (31) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:29:50,469 - __main__ - INFO - (32) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:29:50,471 - __main__ - INFO - (32) - DATA_DIMENSION_: 50
2020-03-20 23:51:56,225 - __main__ - INFO - (32) - CV_RESULTS_: {'mean_fit_time': array([51.61203114, 54.58780471, 52.84996049, 52.58952975, 51.86076299,
       51.87946939, 52.63740706, 52.97868276]), 'std_fit_time': array([0.08046822, 4.09378162, 0.04387929, 0.03532721, 0.08881225,
       0.15678816, 0.67047469, 0.38735844]), 'mean_score_time': array([0.1803898 , 0.18349314, 0.18124151, 0.1849618 , 0.18038774,
       0.18635972, 0.18329342, 0.18386825]), 'std_score_time': array([0.00139772, 0.00209415, 0.00324292, 0.00370098, 0.00171067,
       0.00157186, 0.0032997 , 0.00070312]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54999994, -0.55      , -0.025     ,
       -0.025     , -0.54999994, -0.55      ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999904, -0.55      , -0.025     ,
       -0.025     , -0.54999904, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999966, -0.55      , -0.025     ,
       -0.025     , -0.54999966, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 4.38746653e-07, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 4.38746653e-07, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-20 23:51:56,231 - __main__ - INFO - (32) - BEST_SCORE_: -0.025000000000000005
2020-03-20 23:51:56,233 - __main__ - INFO - (32) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:51:56,237 - __main__ - INFO - (33) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:51:56,240 - __main__ - INFO - (33) - DATA_DIMENSION_: 50
2020-03-21 00:13:21,365 - __main__ - INFO - (33) - CV_RESULTS_: {'mean_fit_time': array([51.30324149, 51.17821972, 51.33903917, 51.42731786, 50.68589234,
       50.41914169, 50.72179675, 50.74583197]), 'std_fit_time': array([0.39205566, 0.30551803, 0.09194972, 0.3327179 , 0.41861345,
       0.10098175, 0.2097856 , 0.07878187]), 'mean_score_time': array([0.17465766, 0.19079614, 0.17778627, 0.17927098, 0.17401457,
       0.1791869 , 0.17274578, 0.17894165]), 'std_score_time': array([0.00104546, 0.0094926 , 0.00158435, 0.00226154, 0.00055078,
       0.00235407, 0.00177377, 0.0037392 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.02499633, -0.025     , -0.54999936, -0.55      , -0.02499633,
       -0.025     , -0.54999936, -0.55      ]), 'split1_test_score': array([-0.02499982, -0.025     , -0.54999999, -0.55      , -0.02499982,
       -0.025     , -0.54999999, -0.55      ]), 'split2_test_score': array([-0.02499986, -0.025     , -0.54999999, -0.55      , -0.02499986,
       -0.025     , -0.54999999, -0.55      ]), 'mean_test_score': array([-0.02499867, -0.025     , -0.54999978, -0.55      , -0.02499867,
       -0.025     , -0.54999978, -0.55      ]), 'std_test_score': array([1.65386700e-06, 3.46944695e-18, 2.96589095e-07, 0.00000000e+00,
       1.65386700e-06, 3.46944695e-18, 2.96589095e-07, 0.00000000e+00]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 00:13:21,374 - __main__ - INFO - (33) - BEST_SCORE_: -0.0249986729034813
2020-03-21 00:13:21,376 - __main__ - INFO - (33) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:13:21,384 - __main__ - INFO - (34) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:13:21,388 - __main__ - INFO - (34) - DATA_DIMENSION_: 50
2020-03-21 00:35:00,373 - __main__ - INFO - (34) - CV_RESULTS_: {'mean_fit_time': array([50.97825623, 51.195285  , 51.76528716, 51.67778087, 51.33680844,
       52.11689782, 52.35252452, 51.06500069]), 'std_fit_time': array([0.1963405 , 0.07220968, 0.12892311, 0.25778892, 0.15388127,
       0.28820111, 0.33512567, 0.24231492]), 'mean_score_time': array([0.17729656, 0.18547901, 0.17772595, 0.18247263, 0.17854706,
       0.1846261 , 0.18018397, 0.18230573]), 'std_score_time': array([0.00087225, 0.0038382 , 0.00322392, 0.00069391, 0.00202495,
       0.00201422, 0.00265214, 0.00148618]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 8.96936723e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 8.96936723e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-21 00:35:00,378 - __main__ - INFO - (34) - BEST_SCORE_: -0.025000000000000005
2020-03-21 00:35:00,380 - __main__ - INFO - (34) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:35:00,386 - __main__ - INFO - (35) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:35:00,388 - __main__ - INFO - (35) - DATA_DIMENSION_: 50
2020-03-21 00:56:38,740 - __main__ - INFO - (35) - CV_RESULTS_: {'mean_fit_time': array([50.90758467, 51.06947494, 51.71640213, 51.57656217, 50.8442173 ,
       51.24608525, 51.80156883, 52.66210365]), 'std_fit_time': array([0.18883445, 0.26064741, 0.21279737, 0.09775124, 0.21357292,
       0.12666731, 0.10767632, 0.41763915]), 'mean_score_time': array([0.17619395, 0.18256553, 0.17512735, 0.18129269, 0.17637555,
       0.18261226, 0.17514769, 0.18240253]), 'std_score_time': array([0.00171825, 0.00135718, 0.00158123, 0.00010868, 0.00194332,
       0.00362127, 0.00424028, 0.00042802]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 3.22842411e-11, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 3.22842411e-11, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-21 00:56:38,745 - __main__ - INFO - (35) - BEST_SCORE_: -0.025000000000000005
2020-03-21 00:56:38,746 - __main__ - INFO - (35) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:56:38,751 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:56:38,752 - __main__ - INFO - (36) - DATA_DIMENSION_: 50
2020-03-21 01:18:34,873 - __main__ - INFO - (36) - CV_RESULTS_: {'mean_fit_time': array([51.21364323, 51.51662954, 52.43151045, 52.52889419, 51.98540958,
       52.23262906, 52.34127037, 53.20105251]), 'std_fit_time': array([0.28271116, 0.20876799, 0.1465393 , 0.45255284, 0.42999535,
       0.2400097 , 0.27149592, 0.28656326]), 'mean_score_time': array([0.17867533, 0.1809411 , 0.17861803, 0.18119899, 0.17786288,
       0.1805315 , 0.17711163, 0.1823794 ]), 'std_score_time': array([0.00511016, 0.00033261, 0.00126211, 0.00103497, 0.00201712,
       0.00279349, 0.00131488, 0.00164049]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025     , -0.025     , -0.54999939, -0.55      , -0.025     ,
       -0.025     , -0.54999939, -0.55      ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.02499999, -0.025     , -0.55      , -0.55      , -0.02499999,
       -0.025     , -0.55      , -0.55      ]), 'mean_test_score': array([-0.025    , -0.025    , -0.5499998, -0.55     , -0.025    ,
       -0.025    , -0.5499998, -0.55     ]), 'std_test_score': array([5.18523841e-09, 3.46944695e-18, 2.88477305e-07, 0.00000000e+00,
       5.18523841e-09, 3.46944695e-18, 2.88477305e-07, 0.00000000e+00]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 01:18:34,879 - __main__ - INFO - (36) - BEST_SCORE_: -0.024999996333482755
2020-03-21 01:18:34,882 - __main__ - INFO - (36) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 01:18:34,888 - __main__ - INFO - (37) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 01:18:34,890 - __main__ - INFO - (37) - DATA_DIMENSION_: 50
2020-03-21 01:40:42,726 - __main__ - INFO - (37) - CV_RESULTS_: {'mean_fit_time': array([52.66700268, 53.46997658, 53.87438027, 53.38531065, 51.75134667,
       51.75198015, 52.59377265, 52.27753878]), 'std_fit_time': array([0.13142803, 0.28167899, 0.25425007, 0.46792218, 0.14955696,
       0.12807178, 0.25233864, 0.08351638]), 'mean_score_time': array([0.17876816, 0.18458056, 0.17693297, 0.1831193 , 0.17766007,
       0.19134633, 0.177543  , 0.18319122]), 'std_score_time': array([0.00103088, 0.00309522, 0.00186186, 0.00011536, 0.00078835,
       0.01157678, 0.00226072, 0.00147917]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.57271200e-09, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 1.57271200e-09, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-21 01:40:42,732 - __main__ - INFO - (37) - BEST_SCORE_: -0.025000000000000005
2020-03-21 01:40:42,737 - __main__ - INFO - (37) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 01:40:42,744 - __main__ - INFO - (38) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 01:40:42,748 - __main__ - INFO - (38) - DATA_DIMENSION_: 50
2020-03-21 02:02:44,072 - __main__ - INFO - (38) - CV_RESULTS_: {'mean_fit_time': array([51.72208309, 51.978333  , 52.52512391, 53.2701323 , 52.49021912,
       52.27027599, 52.37831052, 52.78238066]), 'std_fit_time': array([0.11542814, 0.33245382, 0.08697553, 0.31504065, 0.07616198,
       0.23642311, 0.0641241 , 0.06378739]), 'mean_score_time': array([0.17947706, 0.18571528, 0.17942317, 0.19135578, 0.17997368,
       0.18412113, 0.18060899, 0.1869785 ]), 'std_score_time': array([0.00081076, 0.00080721, 0.00270521, 0.00752348, 0.00316149,
       0.00173938, 0.00338825, 0.00377562]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 2.02040895e-10, 0.00000000e+00,
       3.46944695e-18, 3.46944695e-18, 2.02040895e-10, 0.00000000e+00]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-21 02:02:44,077 - __main__ - INFO - (38) - BEST_SCORE_: -0.025000000000000005
2020-03-21 02:02:44,080 - __main__ - INFO - (38) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 02:02:44,088 - __main__ - INFO - (39) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.25)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 02:02:44,090 - __main__ - INFO - (39) - DATA_DIMENSION_: 50
2020-03-21 02:24:54,907 - __main__ - INFO - (39) - CV_RESULTS_: {'mean_fit_time': array([52.24149108, 52.3262016 , 52.68301932, 52.64593236, 52.97714273,
       53.22121223, 52.96646158, 53.30905755]), 'std_fit_time': array([0.15817009, 0.13147061, 0.12865342, 0.10520352, 0.9282836 ,
       0.21707891, 0.07804988, 0.10216323]), 'mean_score_time': array([0.18015695, 0.18555005, 0.17872492, 0.1797576 , 0.18022807,
       0.18255369, 0.17992361, 0.18347232]), 'std_score_time': array([0.00368653, 0.00365745, 0.00229935, 0.00071733, 0.00412743,
       0.0009295 , 0.00298943, 0.0019192 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25),
                   GaussianKernel(0.5), GaussianKernel(0.25)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.25)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.25)}], 'split0_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split1_test_score': array([-0.025     , -0.025     , -0.54999644, -0.55      , -0.025     ,
       -0.025     , -0.54999644, -0.55      ]), 'split2_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'mean_test_score': array([-0.025     , -0.025     , -0.54999881, -0.55      , -0.025     ,
       -0.025     , -0.54999881, -0.55      ]), 'std_test_score': array([3.46944695e-18, 3.46944695e-18, 1.68008865e-06, 2.51214793e-15,
       3.46944695e-18, 3.46944695e-18, 1.68008865e-06, 2.51214793e-15]), 'rank_test_score': array([1, 1, 5, 7, 1, 1, 5, 7], dtype=int32)}
2020-03-21 02:24:54,913 - __main__ - INFO - (39) - BEST_SCORE_: -0.025000000000000005
2020-03-21 02:24:54,918 - __main__ - INFO - (39) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
