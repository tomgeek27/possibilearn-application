2020-03-20 22:04:14,849 - __main__ - INFO - (0) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:04:14,852 - __main__ - INFO - (0) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:04:14,853 - __main__ - INFO - (0) - DATA_REDUCTION_: t
2020-03-20 22:04:14,855 - __main__ - INFO - (0) - DATA_DIMENSION_: 2
2020-03-20 22:25:26,383 - __main__ - INFO - (0) - CV_RESULTS_: {'mean_fit_time': array([50.24723164, 49.90017851, 50.75127323, 52.57928499, 50.30257543,
       49.03440134, 50.08414698, 51.27123054]), 'std_fit_time': array([0.30304273, 0.09072092, 0.93746393, 0.40560481, 0.73794742,
       0.56318867, 0.20019043, 0.56220229]), 'mean_score_time': array([0.18836625, 0.18220663, 0.17958204, 0.19425233, 0.19281411,
       0.19710112, 0.18812513, 0.1766301 ]), 'std_score_time': array([0.00355318, 0.00522891, 0.01883554, 0.01340334, 0.02937206,
       0.00874689, 0.02705023, 0.01214878]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.02098236, -0.025     , -0.54979712, -0.55      , -0.02098236,
       -0.025     , -0.54979712, -0.55      ]), 'split1_test_score': array([-0.02207402, -0.025     , -0.54984998, -0.55      , -0.02207402,
       -0.025     , -0.54984998, -0.55      ]), 'split2_test_score': array([-0.00432265, -0.02329292, -0.54886226, -0.54989339, -0.00432265,
       -0.02329292, -0.54886226, -0.54989339]), 'mean_test_score': array([-0.01579301, -0.02443097, -0.54950312, -0.54996446, -0.01579301,
       -0.02443097, -0.54950312, -0.54996446]), 'std_test_score': array([8.12300098e-03, 8.04727346e-04, 4.53668211e-04, 5.02547451e-05,
       8.12300098e-03, 8.04727346e-04, 4.53668211e-04, 5.02547451e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 22:25:26,395 - __main__ - INFO - (0) - BEST_SCORE_: -0.015793007964418068
2020-03-20 22:25:26,400 - __main__ - INFO - (0) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 22:27:51,244 - __main__ - INFO - (0) - NESTED CROSS VALIDATION with 3 fold: [-0.02098236 -0.02207402 -0.00432265]
2020-03-20 22:27:51,246 - __main__ - INFO - (0) - NESTED CROSS VALIDATION (mean): -0.015793007964418068
2020-03-20 22:27:51,252 - __main__ - INFO - (1) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:27:51,254 - __main__ - INFO - (1) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:27:51,257 - __main__ - INFO - (1) - DATA_REDUCTION_: t
2020-03-20 22:27:51,259 - __main__ - INFO - (1) - DATA_DIMENSION_: 2
2020-03-20 22:49:36,814 - __main__ - INFO - (1) - CV_RESULTS_: {'mean_fit_time': array([47.8281463 , 47.99870133, 50.19338433, 52.18961747, 54.36259858,
       53.23761622, 52.46322942, 54.3392295 ]), 'std_fit_time': array([0.2966266 , 0.62209777, 0.29088451, 0.72077609, 0.54722721,
       0.69863789, 0.40430877, 1.43910922]), 'mean_score_time': array([0.17277598, 0.16989215, 0.18244195, 0.17643189, 0.20480402,
       0.19924267, 0.20513304, 0.20392132]), 'std_score_time': array([0.01536932, 0.01187846, 0.01709974, 0.00582535, 0.00800798,
       0.01440095, 0.0031434 , 0.0154685 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00285673, -0.02423179, -0.54882827, -0.54995782, -0.00285673,
       -0.02423179, -0.54882827, -0.54995782]), 'split1_test_score': array([-0.00768784, -0.025     , -0.54910924, -0.54999804, -0.00768784,
       -0.025     , -0.54910924, -0.54999804]), 'split2_test_score': array([-0.01490806, -0.025     , -0.5495268 , -0.55      , -0.01490806,
       -0.025     , -0.5495268 , -0.55      ]), 'mean_test_score': array([-0.00848421, -0.02474393, -0.54915477, -0.54998529, -0.00848421,
       -0.02474393, -0.54915477, -0.54998529]), 'std_test_score': array([4.95205523e-03, 3.62138477e-04, 2.86982838e-04, 1.94391917e-05,
       4.95205523e-03, 3.62138477e-04, 2.86982838e-04, 1.94391917e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 22:49:36,819 - __main__ - INFO - (1) - BEST_SCORE_: -0.008484209322054624
2020-03-20 22:49:36,827 - __main__ - INFO - (1) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 22:52:24,684 - __main__ - INFO - (1) - NESTED CROSS VALIDATION with 3 fold: [-0.00285673 -0.00768784 -0.01490806]
2020-03-20 22:52:24,689 - __main__ - INFO - (1) - NESTED CROSS VALIDATION (mean): -0.008484209322054624
2020-03-20 22:52:24,690 - __main__ - INFO - (2) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:52:24,692 - __main__ - INFO - (2) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 22:52:24,693 - __main__ - INFO - (2) - DATA_REDUCTION_: t
2020-03-20 22:52:24,694 - __main__ - INFO - (2) - DATA_DIMENSION_: 2
2020-03-20 23:15:37,647 - __main__ - INFO - (2) - CV_RESULTS_: {'mean_fit_time': array([55.11173773, 54.88278405, 54.61395923, 56.0882291 , 54.93962701,
       54.84939837, 55.46675571, 56.10366869]), 'std_fit_time': array([0.47917487, 0.68536068, 0.46670422, 0.4623707 , 0.1737843 ,
       0.04894764, 0.144847  , 0.27487214]), 'mean_score_time': array([0.19659241, 0.19850826, 0.19114582, 0.19012499, 0.18338434,
       0.19065515, 0.19078286, 0.19667522]), 'std_score_time': array([1.26088938e-02, 1.60061524e-02, 1.31502104e-02, 6.34548836e-03,
       9.00865442e-05, 8.43607687e-03, 8.97589830e-03, 6.92039523e-03]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-3.39286890e-03, -2.39011613e-02, -5.15117148e-04, -5.49942569e-01,
       -3.39286890e-03, -2.39011613e-02, -5.15117141e-04, -5.49942569e-01]), 'split1_test_score': array([-0.00537381, -0.02407736, -0.00063084, -0.549951  , -0.00537381,
       -0.02407736, -0.00063084, -0.549951  ]), 'split2_test_score': array([-1.25630248e-04, -2.50000000e-02, -1.18582413e-02, -5.49999866e-01,
       -1.25630248e-04, -2.50000000e-02, -1.29749104e-02, -5.49999866e-01]), 'mean_test_score': array([-0.0029641 , -0.02432617, -0.00433473, -0.54996448, -0.0029641 ,
       -0.02432617, -0.00470695, -0.54996448]), 'std_test_score': array([2.16390347e-03, 4.81866102e-04, 5.32013433e-03, 2.52579189e-05,
       2.16390347e-03, 4.81866102e-04, 5.84651829e-03, 2.52579189e-05]), 'rank_test_score': array([1, 5, 3, 7, 1, 5, 4, 7], dtype=int32)}
2020-03-20 23:15:37,653 - __main__ - INFO - (2) - BEST_SCORE_: -0.0029641016031551905
2020-03-20 23:15:37,654 - __main__ - INFO - (2) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:18:24,025 - __main__ - INFO - (2) - NESTED CROSS VALIDATION with 3 fold: [-0.00339287 -0.00537381 -0.00012563]
2020-03-20 23:18:24,027 - __main__ - INFO - (2) - NESTED CROSS VALIDATION (mean): -0.0029641016031551905
2020-03-20 23:18:24,029 - __main__ - INFO - (3) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:18:24,031 - __main__ - INFO - (3) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:18:24,033 - __main__ - INFO - (3) - DATA_REDUCTION_: t
2020-03-20 23:18:24,036 - __main__ - INFO - (3) - DATA_DIMENSION_: 2
2020-03-20 23:41:11,737 - __main__ - INFO - (3) - CV_RESULTS_: {'mean_fit_time': array([55.29152719, 54.52582479, 55.70211109, 55.55738282, 54.33681305,
       53.08940371, 52.74152295, 53.48861368]), 'std_fit_time': array([0.5443077 , 0.17851576, 0.11738621, 0.25900316, 0.17245171,
       0.37633091, 0.42286861, 0.5588683 ]), 'mean_score_time': array([0.19668404, 0.1990722 , 0.18550603, 0.1935633 , 0.18644484,
       0.18935593, 0.19227123, 0.19269427]), 'std_score_time': array([0.01556539, 0.01286681, 0.00216787, 0.01065764, 0.00293255,
       0.01018031, 0.02890771, 0.01336519]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.00515271, -0.0672398 , -0.54888547, -0.        ,
       -0.00515271, -0.06713992, -0.54888547]), 'split1_test_score': array([-0.00844357, -0.02484345, -0.54926426, -0.54998655, -0.00844357,
       -0.02484345, -0.54926426, -0.54998655]), 'split2_test_score': array([-0.02406741, -0.025     , -0.07690683, -0.55      , -0.02406741,
       -0.025     , -0.07690683, -0.55      ]), 'mean_test_score': array([-0.01083699, -0.01833206, -0.23113696, -0.54962401, -0.01083699,
       -0.01833206, -0.23110367, -0.54962401]), 'std_test_score': array([0.00997017, 0.00931942, 0.22498458, 0.00052225, 0.00997017,
       0.00931942, 0.22500884, 0.00052225]), 'rank_test_score': array([1, 3, 6, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 23:41:11,745 - __main__ - INFO - (3) - BEST_SCORE_: -0.010836994486297899
2020-03-20 23:41:11,749 - __main__ - INFO - (3) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 23:43:50,731 - __main__ - INFO - (3) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00844357 -0.02406741]
2020-03-20 23:43:50,733 - __main__ - INFO - (3) - NESTED CROSS VALIDATION (mean): -0.010836994486297899
2020-03-20 01:21:05,992 - __main__ - INFO - (4) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 01:21:05,995 - __main__ - INFO - (4) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 01:21:05,998 - __main__ - INFO - (4) - DATA_REDUCTION_: t
2020-03-20 01:21:06,005 - __main__ - INFO - (4) - DATA_DIMENSION_: 2
2020-03-20 01:44:28,629 - __main__ - INFO - (4) - CV_RESULTS_: {'mean_fit_time': array([56.83010729, 55.93566084, 55.34122451, 55.45288118, 55.05345321,
       55.18108471, 55.88254388, 55.68399072]), 'std_fit_time': array([0.0432779 , 0.36781626, 0.10599714, 0.04173741, 0.15755514,
       0.17473117, 0.17954689, 0.30308793]), 'mean_score_time': array([0.19260963, 0.18824172, 0.19149295, 0.18978596, 0.18571099,
       0.18479419, 0.18689315, 0.18738095]), 'std_score_time': array([0.01080428, 0.00290671, 0.00720735, 0.00293304, 0.00054211,
       0.00076143, 0.00346407, 0.000613  ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00187261, -0.01695326, -0.54892483, -0.54961818, -0.00187261,
       -0.01695326, -0.54892483, -0.54961818]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-3.23371442e-05, -5.16727193e-04, -5.48702844e-01, -5.48620342e-01,
       -3.23371442e-05, -5.16727193e-04, -5.48702844e-01, -5.48620342e-01]), 'mean_test_score': array([-0.00896832, -0.01415666, -0.54920922, -0.54941284, -0.00896832,
       -0.01415666, -0.54920922, -0.54941284]), 'std_test_score': array([0.01136098, 0.01018899, 0.00056646, 0.00058166, 0.01136098,
       0.01018899, 0.00056646, 0.00058166]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 01:44:28,641 - __main__ - INFO - (4) - BEST_SCORE_: -0.008968316390478029
2020-03-20 01:44:28,643 - __main__ - INFO - (4) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 01:47:14,207 - __main__ - INFO - (4) - NESTED CROSS VALIDATION with 3 fold: [-1.87261203e-03 -2.50000000e-02 -3.23371442e-05]
2020-03-20 01:47:14,212 - __main__ - INFO - (4) - NESTED CROSS VALIDATION (mean): -0.008968316390478029
2020-03-20 01:47:14,214 - __main__ - INFO - (5) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 01:47:14,216 - __main__ - INFO - (5) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 01:47:14,218 - __main__ - INFO - (5) - DATA_REDUCTION_: t
2020-03-20 01:47:14,221 - __main__ - INFO - (5) - DATA_DIMENSION_: 2
2020-03-20 02:10:17,639 - __main__ - INFO - (5) - CV_RESULTS_: {'mean_fit_time': array([54.91989875, 55.2950627 , 55.27706297, 55.21969382, 54.31815632,
       54.10796102, 54.46257242, 55.64136306]), 'std_fit_time': array([0.04388178, 0.23086972, 0.14337832, 0.21892526, 0.05677729,
       0.43453755, 0.06896184, 0.19022004]), 'mean_score_time': array([0.18658725, 0.19248533, 0.18535686, 0.18982816, 0.1866401 ,
       0.18676702, 0.18526363, 0.18684904]), 'std_score_time': array([0.00168108, 0.00508946, 0.00112571, 0.00235547, 0.00176866,
       0.0019269 , 0.00077177, 0.00157995]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00329707, -0.02304284, -0.548824  , -0.5498779 , -0.00329707,
       -0.02304284, -0.548824  , -0.5498779 ]), 'split1_test_score': array([-0.00262345, -0.02490684, -0.5487891 , -0.54999424, -0.00262345,
       -0.02490684, -0.5487891 , -0.54999424]), 'split2_test_score': array([-0.01022597, -0.02499938, -0.54926702, -0.54999996, -0.01022597,
       -0.02499938, -0.54926702, -0.54999996]), 'mean_test_score': array([-0.00538216, -0.02431635, -0.54896004, -0.54995737, -0.00538216,
       -0.02431635, -0.54896004, -0.54995737]), 'std_test_score': array([3.43611038e-03, 9.01304440e-04, 2.17534382e-04, 5.62421418e-05,
       3.43611038e-03, 9.01304440e-04, 2.17534382e-04, 5.62421418e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 02:10:17,645 - __main__ - INFO - (5) - BEST_SCORE_: -0.005382163742827473
2020-03-20 02:10:17,650 - __main__ - INFO - (5) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 02:13:02,899 - __main__ - INFO - (5) - NESTED CROSS VALIDATION with 3 fold: [-0.00329707 -0.00262345 -0.01022597]
2020-03-20 02:13:02,901 - __main__ - INFO - (5) - NESTED CROSS VALIDATION (mean): -0.005382163742827473
2020-03-20 02:13:02,906 - __main__ - INFO - (6) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 02:13:02,907 - __main__ - INFO - (6) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 02:13:02,910 - __main__ - INFO - (6) - DATA_REDUCTION_: t
2020-03-20 02:13:02,913 - __main__ - INFO - (6) - DATA_DIMENSION_: 2
2020-03-20 02:36:03,757 - __main__ - INFO - (6) - CV_RESULTS_: {'mean_fit_time': array([55.57815226, 54.81056595, 56.05284643, 55.31567804, 54.54801361,
       53.79209566, 54.58980346, 53.98467986]), 'std_fit_time': array([0.26426484, 0.32710617, 0.31403243, 0.36088829, 0.72008869,
       0.43572366, 0.33851484, 0.22313893]), 'mean_score_time': array([0.18718417, 0.18588559, 0.18505065, 0.18524806, 0.18493605,
       0.18639437, 0.18414919, 0.18566942]), 'std_score_time': array([0.00086777, 0.0004515 , 0.002103  , 0.00149971, 0.00084404,
       0.00047715, 0.0003253 , 0.00293795]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00427608, -0.02499872, -0.54897732, -0.54999988, -0.00427608,
       -0.02499872, -0.54897732, -0.54999988]), 'split1_test_score': array([-0.01959293, -0.025     , -0.5497365 , -0.55      , -0.01959293,
       -0.025     , -0.5497365 , -0.55      ]), 'split2_test_score': array([-0.01724455, -0.02499999, -0.54960462, -0.55      , -0.01724455,
       -0.02499999, -0.54960462, -0.55      ]), 'mean_test_score': array([-0.01370452, -0.02499957, -0.54943948, -0.54999996, -0.01370452,
       -0.02499957, -0.54943948, -0.54999996]), 'std_test_score': array([6.73549457e-03, 5.98699376e-07, 3.31203350e-04, 5.59823914e-08,
       6.73549457e-03, 5.98699376e-07, 3.31203350e-04, 5.59823914e-08]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 02:36:03,763 - __main__ - INFO - (6) - BEST_SCORE_: -0.013704523623659454
2020-03-20 02:36:03,768 - __main__ - INFO - (6) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 02:38:44,252 - __main__ - INFO - (6) - NESTED CROSS VALIDATION with 3 fold: [-0.00427608 -0.01959293 -0.01724455]
2020-03-20 02:38:44,253 - __main__ - INFO - (6) - NESTED CROSS VALIDATION (mean): -0.013704523623659454
2020-03-20 02:38:44,256 - __main__ - INFO - (7) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 02:38:44,258 - __main__ - INFO - (7) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 02:38:44,260 - __main__ - INFO - (7) - DATA_REDUCTION_: t
2020-03-20 02:38:44,261 - __main__ - INFO - (7) - DATA_DIMENSION_: 2
2020-03-20 03:01:48,601 - __main__ - INFO - (7) - CV_RESULTS_: {'mean_fit_time': array([53.56846722, 53.91823864, 54.18851495, 55.56094035, 55.58327142,
       55.39470482, 56.17053636, 55.37779339]), 'std_fit_time': array([0.4771376 , 0.13441671, 0.11766807, 0.48482765, 0.10429131,
       0.43988611, 0.05795285, 0.37935044]), 'mean_score_time': array([0.18607299, 0.18800354, 0.18363015, 0.18376128, 0.18415109,
       0.18769081, 0.18718441, 0.18636282]), 'std_score_time': array([0.0011479 , 0.00397243, 0.00129153, 0.00162158, 0.00169261,
       0.00189384, 0.00238002, 0.00063899]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00109489, -0.02490524, -0.54870737, -0.54999475, -0.00109489,
       -0.02490524, -0.54870737, -0.54999475]), 'split1_test_score': array([-0.01195626, -0.02497193, -0.54939912, -0.54999845, -0.01195626,
       -0.02497193, -0.54939912, -0.54999845]), 'split2_test_score': array([-0.00634972, -0.0249334 , -0.54912143, -0.54999631, -0.00634972,
       -0.0249334 , -0.54912143, -0.54999631]), 'mean_test_score': array([-0.00646696, -0.02493686, -0.54907597, -0.5499965 , -0.00646696,
       -0.02493686, -0.54907597, -0.5499965 ]), 'std_test_score': array([4.43490714e-03, 2.73348783e-05, 2.84226113e-04, 1.51590070e-06,
       4.43490714e-03, 2.73348783e-05, 2.84226113e-04, 1.51590070e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 03:01:48,609 - __main__ - INFO - (7) - BEST_SCORE_: -0.006466956111266266
2020-03-20 03:01:48,610 - __main__ - INFO - (7) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 03:04:29,324 - __main__ - INFO - (7) - NESTED CROSS VALIDATION with 3 fold: [-0.00109489 -0.01195626 -0.00634972]
2020-03-20 03:04:29,326 - __main__ - INFO - (7) - NESTED CROSS VALIDATION (mean): -0.006466956111266266
2020-03-20 03:04:29,330 - __main__ - INFO - (8) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 03:04:29,332 - __main__ - INFO - (8) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 03:04:29,333 - __main__ - INFO - (8) - DATA_REDUCTION_: t
2020-03-20 03:04:29,335 - __main__ - INFO - (8) - DATA_DIMENSION_: 2
2020-03-20 03:26:53,173 - __main__ - INFO - (8) - CV_RESULTS_: {'mean_fit_time': array([53.93299413, 54.32616258, 53.94160914, 53.40391294, 52.49068936,
       51.85809588, 53.53165785, 53.65342315]), 'std_fit_time': array([0.27049696, 0.4007676 , 0.42542415, 0.10880944, 0.15301063,
       0.34275397, 0.31295263, 0.1959163 ]), 'mean_score_time': array([0.18729583, 0.18607036, 0.18398388, 0.1856521 , 0.18426776,
       0.18222872, 0.18502522, 0.18662   ]), 'std_score_time': array([0.00433733, 0.00110777, 0.00049787, 0.00374155, 0.0006054 ,
       0.00153489, 0.00295348, 0.00639659]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00183609, -0.02492331, -0.54875949, -0.54999281, -0.00183609,
       -0.02492331, -0.54875949, -0.54999281]), 'split1_test_score': array([-0.02055207, -0.025     , -0.54977634, -0.55      , -0.02055207,
       -0.025     , -0.54977634, -0.55      ]), 'split2_test_score': array([-1.58295317e-04, -4.27492692e-03, -5.48574342e-01, -5.48705188e-01,
       -1.58295317e-04, -4.27492692e-03, -5.48574342e-01, -5.48705188e-01]), 'mean_test_score': array([-0.00751548, -0.01806608, -0.54903672, -0.549566  , -0.00751548,
       -0.01806608, -0.54903672, -0.549566  ]), 'std_test_score': array([0.00924367, 0.00975187, 0.00052842, 0.00060869, 0.00924367,
       0.00975187, 0.00052842, 0.00060869]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 03:26:53,179 - __main__ - INFO - (8) - BEST_SCORE_: -0.007515483987639752
2020-03-20 03:26:53,184 - __main__ - INFO - (8) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 03:29:29,349 - __main__ - INFO - (8) - NESTED CROSS VALIDATION with 3 fold: [-0.00183609 -0.02055207 -0.0001583 ]
2020-03-20 03:29:29,352 - __main__ - INFO - (8) - NESTED CROSS VALIDATION (mean): -0.007515483987639752
2020-03-20 03:29:29,356 - __main__ - INFO - (9) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 03:29:29,358 - __main__ - INFO - (9) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 03:29:29,359 - __main__ - INFO - (9) - DATA_REDUCTION_: t
2020-03-20 03:29:29,361 - __main__ - INFO - (9) - DATA_DIMENSION_: 2
2020-03-20 03:51:06,055 - __main__ - INFO - (9) - CV_RESULTS_: {'mean_fit_time': array([51.53940988, 51.40957411, 51.67112096, 51.36588899, 51.3785522 ,
       50.63728746, 51.39491304, 51.80352759]), 'std_fit_time': array([0.18403556, 0.18823794, 0.32895151, 0.12591921, 0.45496681,
       0.19491029, 0.55937983, 0.67730141]), 'mean_score_time': array([0.18361298, 0.18479451, 0.18068377, 0.18421936, 0.18120376,
       0.18397077, 0.18086799, 0.18718465]), 'std_score_time': array([0.00162325, 0.00187202, 0.00218497, 0.00282747, 0.00085144,
       0.00202569, 0.00070564, 0.00336275]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00084483, -0.02114548, -0.54870281, -0.54979876, -0.00084483,
       -0.02114548, -0.54870281, -0.54979876]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.01429918, -0.025     , -0.54948227, -0.54999975, -0.01429918,
       -0.025     , -0.54948227, -0.54999975]), 'mean_test_score': array([-0.01338134, -0.02371516, -0.54939503, -0.54993284, -0.01338134,
       -0.02371516, -0.54939503, -0.54993284]), 'std_test_score': array([9.88263988e-03, 1.81703925e-03, 5.33155388e-04, 9.48063805e-05,
       9.88263988e-03, 1.81703925e-03, 5.33155388e-04, 9.48063805e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 03:51:06,061 - __main__ - INFO - (9) - BEST_SCORE_: -0.01338133643788604
2020-03-20 03:51:06,065 - __main__ - INFO - (9) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 03:53:43,011 - __main__ - INFO - (9) - NESTED CROSS VALIDATION with 3 fold: [-0.00084483 -0.025      -0.01429918]
2020-03-20 03:53:43,014 - __main__ - INFO - (9) - NESTED CROSS VALIDATION (mean): -0.01338133643788604
2020-03-20 03:53:43,017 - __main__ - INFO - (10) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 03:53:43,020 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 03:53:43,021 - __main__ - INFO - (10) - DATA_REDUCTION_: t
2020-03-20 03:53:43,023 - __main__ - INFO - (10) - DATA_DIMENSION_: 2
2020-03-20 09:16:08,740 - __main__ - INFO - (10) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:16:08,744 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:16:08,746 - __main__ - INFO - (10) - DATA_REDUCTION_: t
2020-03-20 09:16:08,751 - __main__ - INFO - (10) - DATA_DIMENSION_: 2
2020-03-20 09:17:31,137 - __main__ - INFO - (10) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:17:31,151 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:17:31,158 - __main__ - INFO - (10) - DATA_REDUCTION_: t
2020-03-20 09:17:31,161 - __main__ - INFO - (10) - DATA_DIMENSION_: 2
2020-03-20 09:18:14,434 - __main__ - INFO - (10) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:18:14,440 - __main__ - INFO - (10) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:18:14,445 - __main__ - INFO - (10) - DATA_REDUCTION_: t
2020-03-20 09:18:14,450 - __main__ - INFO - (10) - DATA_DIMENSION_: 2
2020-03-20 09:40:49,709 - __main__ - INFO - (10) - CV_RESULTS_: {'mean_fit_time': array([53.31014252, 53.67420602, 54.16641132, 54.10584585, 53.4503595 ,
       53.49448133, 54.03054881, 53.98950823]), 'std_fit_time': array([0.19062989, 0.16059288, 0.18396514, 0.19467674, 0.13449452,
       0.36021316, 0.23576764, 0.23651038]), 'mean_score_time': array([0.19201096, 0.19163108, 0.19135006, 0.19120161, 0.19167034,
       0.19647129, 0.19327561, 0.19097288]), 'std_score_time': array([0.00260381, 0.00018423, 0.00042901, 0.001974  , 0.00163827,
       0.00175655, 0.00485541, 0.00175265]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00324686, -0.02493002, -0.54884732, -0.5499933 , -0.00324686,
       -0.02493002, -0.54884732, -0.5499933 ]), 'split1_test_score': array([-0.01389377, -0.025     , -0.54947486, -0.54999997, -0.01389377,
       -0.025     , -0.54947486, -0.54999997]), 'split2_test_score': array([-0.00443061, -0.02498221, -0.54900676, -0.54999581, -0.00443061,
       -0.02498221, -0.54900676, -0.54999581]), 'mean_test_score': array([-0.00719041, -0.02497074, -0.54910965, -0.54999636, -0.00719041,
       -0.02497074, -0.54910965, -0.54999636]), 'std_test_score': array([4.76455960e-03, 2.96985145e-05, 2.66321707e-04, 2.75193084e-06,
       4.76455960e-03, 2.96985145e-05, 2.66321707e-04, 2.75193084e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 09:40:49,725 - __main__ - INFO - (10) - BEST_SCORE_: -0.007190414273120967
2020-03-20 09:40:49,727 - __main__ - INFO - (10) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 09:43:29,958 - __main__ - INFO - (10) - NESTED CROSS VALIDATION with 3 fold: [-0.00324686 -0.01389377 -0.00443061]
2020-03-20 09:43:29,960 - __main__ - INFO - (10) - NESTED CROSS VALIDATION (mean): -0.007190414273120967
2020-03-20 09:43:29,963 - __main__ - INFO - (11) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:43:29,964 - __main__ - INFO - (11) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 09:43:29,965 - __main__ - INFO - (11) - DATA_REDUCTION_: t
2020-03-20 09:43:29,968 - __main__ - INFO - (11) - DATA_DIMENSION_: 2
2020-03-20 10:05:56,518 - __main__ - INFO - (11) - CV_RESULTS_: {'mean_fit_time': array([52.92180387, 52.75419323, 54.10796475, 53.91150959, 53.29318444,
       52.56152646, 53.6899778 , 53.97866241]), 'std_fit_time': array([0.18604014, 0.08999612, 0.06328497, 0.19457824, 0.18567619,
       0.1510358 , 0.20588496, 0.17472589]), 'mean_score_time': array([0.19129411, 0.19234149, 0.18986432, 0.19191146, 0.19240816,
       0.19298999, 0.19301081, 0.19226305]), 'std_score_time': array([0.00151138, 0.0018664 , 0.00070173, 0.0008082 , 0.00107426,
       0.00105189, 0.00224678, 0.00049278]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.0201116 , -0.025     , -0.54976416, -0.55      , -0.0201116 ,
       -0.025     , -0.54976416, -0.55      ]), 'split1_test_score': array([-0.00145354, -0.01862004, -0.54875515, -0.54960158, -0.00145354,
       -0.01862004, -0.54875515, -0.54960158]), 'split2_test_score': array([-0.01599987, -0.025     , -0.54970775, -0.54999998, -0.01599987,
       -0.025     , -0.54970775, -0.54999998]), 'mean_test_score': array([-0.01252167, -0.02287335, -0.54940902, -0.54986719, -0.01252167,
       -0.02287335, -0.54940902, -0.54986719]), 'std_test_score': array([0.00800434, 0.00300754, 0.00046293, 0.00018781, 0.00800434,
       0.00300754, 0.00046293, 0.00018781]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 10:05:56,524 - __main__ - INFO - (11) - BEST_SCORE_: -0.01252167124573096
2020-03-20 10:05:56,527 - __main__ - INFO - (11) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 10:08:37,494 - __main__ - INFO - (11) - NESTED CROSS VALIDATION with 3 fold: [-0.0201116  -0.00145354 -0.01599987]
2020-03-20 10:08:37,496 - __main__ - INFO - (11) - NESTED CROSS VALIDATION (mean): -0.01252167124573096
2020-03-20 10:08:37,502 - __main__ - INFO - (12) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:08:37,508 - __main__ - INFO - (12) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:08:37,512 - __main__ - INFO - (12) - DATA_REDUCTION_: t
2020-03-20 10:08:37,515 - __main__ - INFO - (12) - DATA_DIMENSION_: 2
2020-03-20 10:31:22,315 - __main__ - INFO - (12) - CV_RESULTS_: {'mean_fit_time': array([53.52880049, 53.2292703 , 54.14125212, 53.72057557, 54.69065277,
       54.47437143, 54.63235132, 54.71966998]), 'std_fit_time': array([0.29333438, 0.24307337, 0.12147313, 0.37445448, 0.31286106,
       0.04203522, 0.25451105, 0.32073476]), 'mean_score_time': array([0.18814476, 0.1889979 , 0.18894084, 0.19014756, 0.18822813,
       0.19360781, 0.18800775, 0.1899453 ]), 'std_score_time': array([4.24001031e-04, 2.27923618e-03, 9.05660798e-05, 1.76353589e-03,
       4.37973091e-04, 2.83751251e-03, 7.29948383e-04, 1.70202210e-03]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00000000e+00, -1.59302957e-05, -5.48693434e-01, -5.48575471e-01,
       -0.00000000e+00, -1.59302957e-05, -5.48693434e-01, -5.48575471e-01]), 'split1_test_score': array([-2.73347663e-04, -3.74522129e-03, -5.48694799e-01, -5.48955373e-01,
       -2.73347663e-04, -3.74522129e-03, -5.48694799e-01, -5.48955373e-01]), 'split2_test_score': array([-0.0163885 , -0.02499656, -0.5496535 , -0.54999986, -0.0163885 ,
       -0.02499656, -0.5496535 , -0.54999986]), 'mean_test_score': array([-0.00555395, -0.0095859 , -0.54901391, -0.5491769 , -0.00555395,
       -0.0095859 , -0.54901391, -0.5491769 ]), 'std_test_score': array([0.007662  , 0.01100282, 0.00045226, 0.00060223, 0.007662  ,
       0.01100282, 0.00045226, 0.00060223]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 10:31:22,321 - __main__ - INFO - (12) - BEST_SCORE_: -0.00555394878768798
2020-03-20 10:31:22,328 - __main__ - INFO - (12) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 10:34:05,230 - __main__ - INFO - (12) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00027335 -0.0163885 ]
2020-03-20 10:34:05,231 - __main__ - INFO - (12) - NESTED CROSS VALIDATION (mean): -0.00555394878768798
2020-03-20 10:34:05,236 - __main__ - INFO - (13) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:34:05,245 - __main__ - INFO - (13) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:34:05,247 - __main__ - INFO - (13) - DATA_REDUCTION_: t
2020-03-20 10:34:05,248 - __main__ - INFO - (13) - DATA_DIMENSION_: 2
2020-03-20 10:57:00,732 - __main__ - INFO - (13) - CV_RESULTS_: {'mean_fit_time': array([53.9923892 , 53.93753195, 54.62496376, 54.46980238, 54.16598916,
       54.79229426, 55.52273997, 55.08469192]), 'std_fit_time': array([0.11538015, 0.0718855 , 0.07517668, 0.1491791 , 0.33040078,
       0.27718439, 0.14449138, 0.24053862]), 'mean_score_time': array([0.19054747, 0.19061518, 0.19012308, 0.19205483, 0.18873215,
       0.19456251, 0.19490298, 0.19259079]), 'std_score_time': array([0.00110442, 0.00102471, 0.00116158, 0.00341333, 0.00037675,
       0.00527717, 0.00291396, 0.0017773 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-1.78587312e-07, -0.00000000e+00, -5.48637742e-01, -5.48500853e-01,
       -1.78587312e-07, -0.00000000e+00, -5.48637742e-01, -5.48500853e-01]), 'split1_test_score': array([-0.0220538 , -0.025     , -0.54988242, -0.55      , -0.0220538 ,
       -0.025     , -0.54988242, -0.55      ]), 'split2_test_score': array([-4.55427620e-04, -1.35856235e-02, -5.48823786e-01, -5.49466588e-01,
       -4.55427620e-04, -1.35856235e-02, -5.48823786e-01, -5.49466588e-01]), 'mean_test_score': array([-0.00750313, -0.01286187, -0.54911465, -0.54932248, -0.00750313,
       -0.01286187, -0.54911465, -0.54932248]), 'std_test_score': array([0.01029055, 0.01021903, 0.00054818, 0.00062045, 0.01029055,
       0.01021903, 0.00054818, 0.00062045]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 10:57:00,738 - __main__ - INFO - (13) - BEST_SCORE_: -0.00750313439716978
2020-03-20 10:57:00,739 - __main__ - INFO - (13) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 10:59:43,826 - __main__ - INFO - (13) - NESTED CROSS VALIDATION with 3 fold: [-1.78587312e-07 -2.20537970e-02 -4.55427620e-04]
2020-03-20 10:59:43,828 - __main__ - INFO - (13) - NESTED CROSS VALIDATION (mean): -0.00750313439716978
2020-03-20 10:59:43,832 - __main__ - INFO - (14) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:59:43,836 - __main__ - INFO - (14) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 10:59:43,838 - __main__ - INFO - (14) - DATA_REDUCTION_: t
2020-03-20 10:59:43,840 - __main__ - INFO - (14) - DATA_DIMENSION_: 2
2020-03-20 11:22:38,033 - __main__ - INFO - (14) - CV_RESULTS_: {'mean_fit_time': array([54.73356795, 54.43901674, 54.74725302, 54.58679461, 53.80252194,
       53.64802392, 54.63327193, 55.21084317]), 'std_fit_time': array([0.42682428, 0.21670097, 0.05576942, 0.14376214, 0.28244124,
       0.09612421, 0.22270325, 0.27064289]), 'mean_score_time': array([0.18984675, 0.19380871, 0.19308972, 0.19494454, 0.19010115,
       0.19114804, 0.19046164, 0.1904819 ]), 'std_score_time': array([0.00111173, 0.00088515, 0.00527357, 0.00635975, 0.00069257,
       0.00055789, 0.00270381, 0.0010771 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00000000e+00, -2.07686716e-02, -1.73126650e-04, -5.49738230e-01,
       -0.00000000e+00, -2.07686716e-02, -1.73130848e-04, -5.49738230e-01]), 'split1_test_score': array([-1.99257153e-04, -2.43453992e-02, -3.09600260e-04, -5.49963755e-01,
       -1.99257153e-04, -2.43453992e-02, -3.09592944e-04, -5.49963755e-01]), 'split2_test_score': array([-0.00443646, -0.02470762, -0.00068865, -0.54998379, -0.00443646,
       -0.02470762, -0.00068866, -0.54998379]), 'mean_test_score': array([-1.54524034e-03, -2.32738985e-02, -3.90459553e-04, -5.49895259e-01,
       -1.54524034e-03, -2.32738985e-02, -3.90462432e-04, -5.49895259e-01]), 'std_test_score': array([0.00204602, 0.00177762, 0.00021809, 0.00011134, 0.00204602,
       0.00177762, 0.0002181 , 0.00011134]), 'rank_test_score': array([3, 5, 1, 7, 3, 5, 2, 7], dtype=int32)}
2020-03-20 11:22:38,039 - __main__ - INFO - (14) - BEST_SCORE_: -0.00039045955298601994
2020-03-20 11:22:38,049 - __main__ - INFO - (14) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:25:24,607 - __main__ - INFO - (14) - NESTED CROSS VALIDATION with 3 fold: [-0.00017313 -0.00030958 -0.00068868]
2020-03-20 11:25:24,609 - __main__ - INFO - (14) - NESTED CROSS VALIDATION (mean): -0.00039046432896576726
2020-03-20 11:25:24,616 - __main__ - INFO - (15) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:25:24,617 - __main__ - INFO - (15) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:25:24,619 - __main__ - INFO - (15) - DATA_REDUCTION_: t
2020-03-20 11:25:24,621 - __main__ - INFO - (15) - DATA_DIMENSION_: 2
2020-03-20 11:48:07,790 - __main__ - INFO - (15) - CV_RESULTS_: {'mean_fit_time': array([54.04979316, 54.04156478, 54.41636197, 54.60847632, 53.78163377,
       53.40866629, 54.05759923, 54.26610454]), 'std_fit_time': array([0.19795105, 0.09675989, 0.18578534, 0.14711288, 0.34490326,
       0.20177653, 0.02061572, 0.10851662]), 'mean_score_time': array([0.19310284, 0.19348089, 0.19081632, 0.1911188 , 0.19134061,
       0.19111681, 0.18969568, 0.19038391]), 'std_score_time': array([0.00370819, 0.00221021, 0.00132301, 0.00166609, 0.0020066 ,
       0.00035273, 0.00195665, 0.0015953 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-5.32934863e-04, -2.36663160e-02, -5.48695610e-01, -5.49932081e-01,
       -5.32934863e-04, -2.36663160e-02, -5.48695610e-01, -5.49932081e-01]), 'split1_test_score': array([-0.        , -0.02369712, -0.54877952, -0.54993356, -0.        ,
       -0.02369712, -0.54877952, -0.54993356]), 'split2_test_score': array([-0.00352467, -0.02250495, -0.54899589, -0.54987582, -0.00352467,
       -0.02250495, -0.54899589, -0.54987582]), 'mean_test_score': array([-0.00135254, -0.02328946, -0.54882368, -0.54991382, -0.00135254,
       -0.02328946, -0.54882368, -0.54991382]), 'std_test_score': array([1.55126513e-03, 5.54875853e-04, 1.26503978e-04, 2.68787825e-05,
       1.55126513e-03, 5.54875853e-04, 1.26503978e-04, 2.68787825e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 11:48:07,795 - __main__ - INFO - (15) - BEST_SCORE_: -0.001352535314835199
2020-03-20 11:48:07,806 - __main__ - INFO - (15) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 11:50:51,602 - __main__ - INFO - (15) - NESTED CROSS VALIDATION with 3 fold: [-0.00053293 -0.         -0.00352467]
2020-03-20 11:50:51,605 - __main__ - INFO - (15) - NESTED CROSS VALIDATION (mean): -0.001352535314835199
2020-03-20 11:50:51,607 - __main__ - INFO - (16) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:50:51,609 - __main__ - INFO - (16) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 11:50:51,610 - __main__ - INFO - (16) - DATA_REDUCTION_: t
2020-03-20 11:50:51,612 - __main__ - INFO - (16) - DATA_DIMENSION_: 2
2020-03-20 12:13:38,676 - __main__ - INFO - (16) - CV_RESULTS_: {'mean_fit_time': array([54.73042576, 54.14338303, 54.38147124, 54.41340971, 54.1023713 ,
       53.73560627, 54.47669522, 54.13567265]), 'std_fit_time': array([0.14834524, 0.17533568, 0.22231794, 0.07503295, 0.27038113,
       0.28656865, 0.16084465, 0.15855502]), 'mean_score_time': array([0.19396822, 0.1909914 , 0.19276317, 0.19273408, 0.19063505,
       0.19275864, 0.19258189, 0.1909078 ]), 'std_score_time': array([0.00169235, 0.00105044, 0.00081166, 0.00198261, 0.00261939,
       0.00311022, 0.00103198, 0.00118338]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.        , -0.54868424, -0.54845209, -0.        ,
       -0.        , -0.54868424, -0.54845209]), 'split1_test_score': array([-0.00528885, -0.02413414, -0.54899161, -0.5499545 , -0.00528885,
       -0.02413414, -0.54899161, -0.5499545 ]), 'split2_test_score': array([-0.0136456 , -0.025     , -0.54946714, -0.54999997, -0.0136456 ,
       -0.025     , -0.54946714, -0.54999997]), 'mean_test_score': array([-0.00631148, -0.01637805, -0.54904766, -0.54946886, -0.00631148,
       -0.01637805, -0.54904766, -0.54946886]), 'std_test_score': array([0.00561753, 0.01158642, 0.00032207, 0.0007192 , 0.00561753,
       0.01158642, 0.00032207, 0.0007192 ]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 12:13:38,682 - __main__ - INFO - (16) - BEST_SCORE_: -0.0063114847047970254
2020-03-20 12:13:38,692 - __main__ - INFO - (16) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:16:19,965 - __main__ - INFO - (16) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.00528885 -0.0136456 ]
2020-03-20 12:16:19,967 - __main__ - INFO - (16) - NESTED CROSS VALIDATION (mean): -0.0063114847047970254
2020-03-20 12:16:19,971 - __main__ - INFO - (17) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:16:19,975 - __main__ - INFO - (17) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:16:19,977 - __main__ - INFO - (17) - DATA_REDUCTION_: t
2020-03-20 12:16:19,988 - __main__ - INFO - (17) - DATA_DIMENSION_: 2
2020-03-20 12:39:09,556 - __main__ - INFO - (17) - CV_RESULTS_: {'mean_fit_time': array([53.5680093 , 53.92176501, 55.31989725, 55.15721615, 53.73020736,
       53.78469412, 54.61721977, 54.66343776]), 'std_fit_time': array([0.12760957, 0.22688736, 0.29464121, 0.32304803, 0.1102326 ,
       0.12275923, 0.26452413, 0.35336835]), 'mean_score_time': array([0.19093204, 0.19400597, 0.18945384, 0.19562753, 0.18636918,
       0.19013151, 0.18649205, 0.18912919]), 'std_score_time': array([0.00153433, 0.00309763, 0.00235768, 0.00474622, 0.00098814,
       0.00132906, 0.0013518 , 0.00163431]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01097431, -0.02491223, -0.54928473, -0.54999453, -0.01097431,
       -0.02491223, -0.54928473, -0.54999453]), 'split1_test_score': array([-0.01763731, -0.025     , -0.54964573, -0.55      , -0.01763731,
       -0.025     , -0.54964573, -0.55      ]), 'split2_test_score': array([-0.00499457, -0.02489705, -0.54895761, -0.54999359, -0.00499457,
       -0.02489705, -0.54895761, -0.54999359]), 'mean_test_score': array([-0.01120206, -0.02493643, -0.54929602, -0.54999604, -0.01120206,
       -0.02493643, -0.54929602, -0.54999604]), 'std_test_score': array([5.16389027e-03, 4.53767228e-05, 2.81034779e-04, 2.82660832e-06,
       5.16389027e-03, 4.53767228e-05, 2.81034779e-04, 2.82660832e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 12:39:09,562 - __main__ - INFO - (17) - BEST_SCORE_: -0.011202061752089683
2020-03-20 12:39:09,569 - __main__ - INFO - (17) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 12:41:51,995 - __main__ - INFO - (17) - NESTED CROSS VALIDATION with 3 fold: [-0.01097431 -0.01763731 -0.00499457]
2020-03-20 12:41:51,997 - __main__ - INFO - (17) - NESTED CROSS VALIDATION (mean): -0.011202061752089683
2020-03-20 12:41:52,001 - __main__ - INFO - (18) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:41:52,002 - __main__ - INFO - (18) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 12:41:52,004 - __main__ - INFO - (18) - DATA_REDUCTION_: t
2020-03-20 12:41:52,005 - __main__ - INFO - (18) - DATA_DIMENSION_: 2
2020-03-20 13:04:32,214 - __main__ - INFO - (18) - CV_RESULTS_: {'mean_fit_time': array([54.02130365, 53.7886645 , 54.31547896, 54.71368575, 53.64211186,
       53.33272815, 53.9834547 , 54.19293801]), 'std_fit_time': array([0.14320292, 0.17323147, 0.25572504, 0.03967152, 0.3360845 ,
       0.16007023, 0.05451074, 0.09760473]), 'mean_score_time': array([0.18931707, 0.19335437, 0.18897351, 0.19045639, 0.18878071,
       0.19006165, 0.19116561, 0.1902895 ]), 'std_score_time': array([0.00090095, 0.00033258, 0.00185772, 0.00026076, 0.00228551,
       0.00166684, 0.00126909, 0.00055544]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00823111, -0.025     , -0.54925191, -0.54999921, -0.00823111,
       -0.025     , -0.54925191, -0.54999921]), 'split1_test_score': array([-0.00709628, -0.025     , -0.54918998, -0.54999673, -0.00709628,
       -0.025     , -0.54918998, -0.54999673]), 'split2_test_score': array([-0.02058692, -0.025     , -0.54982625, -0.55      , -0.02058692,
       -0.025     , -0.54982625, -0.55      ]), 'mean_test_score': array([-0.01197144, -0.025     , -0.54942272, -0.54999865, -0.01197144,
       -0.025     , -0.54942272, -0.54999865]), 'std_test_score': array([6.10965866e-03, 3.46944695e-18, 2.86460262e-04, 1.39214451e-06,
       6.10965866e-03, 3.46944695e-18, 2.86460262e-04, 1.39214451e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 13:04:32,220 - __main__ - INFO - (18) - BEST_SCORE_: -0.011971437946396934
2020-03-20 13:04:32,222 - __main__ - INFO - (18) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:07:13,049 - __main__ - INFO - (18) - NESTED CROSS VALIDATION with 3 fold: [-0.00823111 -0.00709628 -0.02058692]
2020-03-20 13:07:13,050 - __main__ - INFO - (18) - NESTED CROSS VALIDATION (mean): -0.011971437946396934
2020-03-20 13:07:13,055 - __main__ - INFO - (19) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:07:13,059 - __main__ - INFO - (19) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:07:13,060 - __main__ - INFO - (19) - DATA_REDUCTION_: t
2020-03-20 13:07:13,061 - __main__ - INFO - (19) - DATA_DIMENSION_: 2
2020-03-20 13:29:52,665 - __main__ - INFO - (19) - CV_RESULTS_: {'mean_fit_time': array([53.91371783, 53.42969441, 53.92807659, 54.19280903, 53.40747476,
       53.94262115, 54.63234067, 54.28695027]), 'std_fit_time': array([0.66176225, 0.0834915 , 0.09908179, 0.24440995, 0.11677321,
       0.17155709, 0.23402346, 0.06545032]), 'mean_score_time': array([0.19130611, 0.1927731 , 0.19087783, 0.19006324, 0.19043668,
       0.19102232, 0.18971443, 0.19024603]), 'std_score_time': array([0.00183244, 0.00272563, 0.00091727, 0.00033047, 0.0014092 ,
       0.00133281, 0.00083457, 0.00242145]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00613181, -0.025     , -0.54937297, -0.54999987, -0.00613181,
       -0.025     , -0.54937297, -0.54999987]), 'split1_test_score': array([-0.        , -0.02218394, -0.54871171, -0.54986012, -0.        ,
       -0.02218394, -0.54871171, -0.54986012]), 'split2_test_score': array([-0.        , -0.        , -0.54870283, -0.54844495, -0.        ,
       -0.        , -0.54870283, -0.54844495]), 'mean_test_score': array([-0.00204394, -0.01572798, -0.54892917, -0.54943498, -0.00204394,
       -0.01572798, -0.54892917, -0.54943498]), 'std_test_score': array([0.00289056, 0.01118062, 0.00031383, 0.00070238, 0.00289056,
       0.01118062, 0.00031383, 0.00070238]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 13:29:52,670 - __main__ - INFO - (19) - BEST_SCORE_: -0.002043936260205981
2020-03-20 13:29:52,676 - __main__ - INFO - (19) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:32:33,272 - __main__ - INFO - (19) - NESTED CROSS VALIDATION with 3 fold: [-0.00613181 -0.         -0.        ]
2020-03-20 13:32:33,274 - __main__ - INFO - (19) - NESTED CROSS VALIDATION (mean): -0.002043936260205981
2020-03-20 13:32:33,277 - __main__ - INFO - (20) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:32:33,278 - __main__ - INFO - (20) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:32:33,279 - __main__ - INFO - (20) - DATA_REDUCTION_: t
2020-03-20 13:32:33,280 - __main__ - INFO - (20) - DATA_DIMENSION_: 2
2020-03-20 13:55:07,706 - __main__ - INFO - (20) - CV_RESULTS_: {'mean_fit_time': array([53.43766991, 53.41425228, 53.9372584 , 54.02390893, 53.24729458,
       53.25133499, 54.48581568, 54.20244288]), 'std_fit_time': array([0.12883727, 0.08044546, 0.06606585, 0.21480365, 0.15766711,
       0.11631558, 0.18916946, 0.18045952]), 'mean_score_time': array([0.19099474, 0.1933461 , 0.19010472, 0.19270929, 0.19288437,
       0.19004258, 0.18785747, 0.19089476]), 'std_score_time': array([0.00205595, 0.00587131, 0.00209058, 0.00260367, 0.00262103,
       0.00086789, 0.00195153, 0.00151342]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00970599, -0.02481492, -0.54923263, -0.54998849, -0.00970599,
       -0.02481492, -0.54923263, -0.54998849]), 'split1_test_score': array([-0.00577629, -0.02483845, -0.54903783, -0.54998996, -0.00577629,
       -0.02483845, -0.54903783, -0.54998996]), 'split2_test_score': array([-0.01341083, -0.0249909 , -0.54943406, -0.54999943, -0.01341083,
       -0.0249909 , -0.54943406, -0.54999943]), 'mean_test_score': array([-0.00963104, -0.02488142, -0.54923484, -0.54999263, -0.00963104,
       -0.02488142, -0.54923484, -0.54999263]), 'std_test_score': array([3.11723882e-03, 7.80056375e-05, 1.61766395e-04, 4.84890458e-06,
       3.11723882e-03, 7.80056375e-05, 1.61766395e-04, 4.84890458e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 13:55:07,712 - __main__ - INFO - (20) - BEST_SCORE_: -0.009631036269932341
2020-03-20 13:55:07,716 - __main__ - INFO - (20) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 13:57:47,897 - __main__ - INFO - (20) - NESTED CROSS VALIDATION with 3 fold: [-0.00970599 -0.00577629 -0.01341083]
2020-03-20 13:57:47,901 - __main__ - INFO - (20) - NESTED CROSS VALIDATION (mean): -0.009631036269932341
2020-03-20 13:57:47,902 - __main__ - INFO - (21) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:57:47,903 - __main__ - INFO - (21) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 13:57:47,905 - __main__ - INFO - (21) - DATA_REDUCTION_: t
2020-03-20 13:57:47,907 - __main__ - INFO - (21) - DATA_DIMENSION_: 2
2020-03-20 14:20:26,462 - __main__ - INFO - (21) - CV_RESULTS_: {'mean_fit_time': array([53.15606411, 53.31079348, 54.20836576, 54.08587178, 54.18696642,
       53.55797362, 54.053871  , 54.52361091]), 'std_fit_time': array([0.12735859, 0.29723908, 0.14808552, 0.1009293 , 0.46265999,
       0.18111112, 0.07508849, 0.11109556]), 'mean_score_time': array([0.19057353, 0.19366455, 0.1895961 , 0.19123761, 0.21625106,
       0.1915315 , 0.19097439, 0.19216331]), 'std_score_time': array([0.00100391, 0.00337781, 0.00107436, 0.00095092, 0.03526757,
       0.00101436, 0.00060754, 0.00166484]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00896434, -0.02499862, -0.54912617, -0.54999991, -0.00896434,
       -0.02499862, -0.54912617, -0.54999991]), 'split1_test_score': array([-0.01250057, -0.02499201, -0.54936047, -0.5499995 , -0.01250057,
       -0.02499201, -0.54936047, -0.5499995 ]), 'split2_test_score': array([-0.02062624, -0.025     , -0.54978309, -0.55      , -0.02062624,
       -0.025     , -0.54978309, -0.55      ]), 'mean_test_score': array([-0.01403038, -0.02499688, -0.54942324, -0.5499998 , -0.01403038,
       -0.02499688, -0.54942324, -0.5499998 ]), 'std_test_score': array([4.88229985e-03, 3.48945199e-06, 2.71837430e-04, 2.18102169e-07,
       4.88229985e-03, 3.48945199e-06, 2.71837430e-04, 2.18102169e-07]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 14:20:26,468 - __main__ - INFO - (21) - BEST_SCORE_: -0.01403038406299146
2020-03-20 14:20:26,477 - __main__ - INFO - (21) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:23:08,372 - __main__ - INFO - (21) - NESTED CROSS VALIDATION with 3 fold: [-0.00896434 -0.01250057 -0.02062624]
2020-03-20 14:23:08,373 - __main__ - INFO - (21) - NESTED CROSS VALIDATION (mean): -0.01403038406299146
2020-03-20 14:23:08,377 - __main__ - INFO - (22) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:23:08,380 - __main__ - INFO - (22) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:23:08,382 - __main__ - INFO - (22) - DATA_REDUCTION_: t
2020-03-20 14:23:08,384 - __main__ - INFO - (22) - DATA_DIMENSION_: 2
2020-03-20 14:45:48,307 - __main__ - INFO - (22) - CV_RESULTS_: {'mean_fit_time': array([53.87430112, 53.68703   , 54.72151828, 54.01916409, 53.59091131,
       53.3638854 , 54.21813806, 54.25722869]), 'std_fit_time': array([0.54481677, 0.22610159, 0.22458725, 0.31084751, 0.10766014,
       0.12781557, 0.18105655, 0.22419569]), 'mean_score_time': array([0.18825881, 0.18957647, 0.19007572, 0.18924451, 0.1882507 ,
       0.19116871, 0.19315966, 0.19033305]), 'std_score_time': array([0.00016816, 0.00147967, 0.00137141, 0.00073033, 0.00160883,
       0.00069279, 0.00254209, 0.00043711]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-4.35051237e-06, -2.37324638e-04, -5.48725275e-01, -5.48588568e-01,
       -4.35051237e-06, -2.37324638e-04, -5.48725275e-01, -5.48588568e-01]), 'split1_test_score': array([-0.00155997, -0.01742969, -0.54894625, -0.5496696 , -0.00155997,
       -0.01742969, -0.54894625, -0.5496696 ]), 'split2_test_score': array([-0.        , -0.01391988, -0.54861623, -0.54950405, -0.        ,
       -0.01391988, -0.54861623, -0.54950405]), 'mean_test_score': array([-5.21441706e-04, -1.05289637e-02, -5.48762584e-01, -5.49254072e-01,
       -5.21441706e-04, -1.05289637e-02, -5.48762584e-01, -5.49254072e-01]), 'std_test_score': array([0.00073436, 0.00741701, 0.00013729, 0.00047541, 0.00073436,
       0.00741701, 0.00013729, 0.00047541]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 14:45:48,312 - __main__ - INFO - (22) - BEST_SCORE_: -0.000521441706194757
2020-03-20 14:45:48,319 - __main__ - INFO - (22) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 14:48:30,063 - __main__ - INFO - (22) - NESTED CROSS VALIDATION with 3 fold: [-4.35051237e-06 -1.55997461e-03 -0.00000000e+00]
2020-03-20 14:48:30,065 - __main__ - INFO - (22) - NESTED CROSS VALIDATION (mean): -0.000521441706194757
2020-03-20 14:48:30,073 - __main__ - INFO - (23) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:48:30,074 - __main__ - INFO - (23) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 14:48:30,075 - __main__ - INFO - (23) - DATA_REDUCTION_: t
2020-03-20 14:48:30,076 - __main__ - INFO - (23) - DATA_DIMENSION_: 2
2020-03-20 15:11:22,064 - __main__ - INFO - (23) - CV_RESULTS_: {'mean_fit_time': array([54.06110009, 54.03130841, 54.52558676, 54.30642136, 53.83240946,
       54.51048692, 54.92956161, 54.96512389]), 'std_fit_time': array([0.31186108, 0.20776565, 0.22003153, 0.04703674, 0.22906963,
       0.3558367 , 0.09144141, 0.12736003]), 'mean_score_time': array([0.18842483, 0.19273678, 0.18878325, 0.19203178, 0.19137851,
       0.18990374, 0.18964998, 0.19088785]), 'std_score_time': array([0.00092849, 0.00311807, 0.0012174 , 0.00242441, 0.00215789,
       0.00090889, 0.00062054, 0.00168083]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01013505, -0.02499707, -0.5493441 , -0.54999982, -0.01013505,
       -0.02499707, -0.5493441 , -0.54999982]), 'split1_test_score': array([-0.00399437, -0.02487063, -0.54895368, -0.54999201, -0.00399437,
       -0.02487063, -0.54895368, -0.54999201]), 'split2_test_score': array([-0.00119916, -0.0236408 , -0.54875424, -0.54991522, -0.00119916,
       -0.0236408 , -0.54875424, -0.54991522]), 'mean_test_score': array([-0.00510952, -0.02450283, -0.54901734, -0.54996902, -0.00510952,
       -0.02450283, -0.54901734, -0.54996902]), 'std_test_score': array([3.73230998e-03, 6.11731032e-04, 2.44977512e-04, 3.81699161e-05,
       3.73230998e-03, 6.11731032e-04, 2.44977512e-04, 3.81699161e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 15:11:22,070 - __main__ - INFO - (23) - BEST_SCORE_: -0.005109523243086163
2020-03-20 15:11:22,075 - __main__ - INFO - (23) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:14:07,010 - __main__ - INFO - (23) - NESTED CROSS VALIDATION with 3 fold: [-0.01013505 -0.00399437 -0.00119916]
2020-03-20 15:14:07,012 - __main__ - INFO - (23) - NESTED CROSS VALIDATION (mean): -0.005109523243086163
2020-03-20 15:14:07,013 - __main__ - INFO - (24) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:14:07,014 - __main__ - INFO - (24) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:14:07,016 - __main__ - INFO - (24) - DATA_REDUCTION_: t
2020-03-20 15:14:07,017 - __main__ - INFO - (24) - DATA_DIMENSION_: 2
2020-03-20 15:36:51,693 - __main__ - INFO - (24) - CV_RESULTS_: {'mean_fit_time': array([53.79947877, 53.72217107, 54.79847026, 54.52580754, 53.92214966,
       53.92380746, 54.1957775 , 54.25733622]), 'std_fit_time': array([0.18737657, 0.04002152, 0.30955624, 0.22554912, 0.13527985,
       0.17967188, 0.11879477, 0.54216448]), 'mean_score_time': array([0.19194786, 0.20327306, 0.1912268 , 0.19044081, 0.18945964,
       0.19027209, 0.19012658, 0.19214495]), 'std_score_time': array([0.00148946, 0.01594112, 0.00140724, 0.00068827, 0.00082986,
       0.00059875, 0.0003335 , 0.00085045]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00055304, -0.02472108, -0.54866953, -0.54998267, -0.00055304,
       -0.02472108, -0.54866953, -0.54998267]), 'split1_test_score': array([-0.00286554, -0.02487593, -0.54888492, -0.5499923 , -0.00286554,
       -0.02487593, -0.54888492, -0.5499923 ]), 'split2_test_score': array([-0.00765254, -0.02498874, -0.54910921, -0.54999931, -0.00765254,
       -0.02498874, -0.54910921, -0.54999931]), 'mean_test_score': array([-0.00369037, -0.02486192, -0.54888789, -0.54999142, -0.00369037,
       -0.02486192, -0.54888789, -0.54999142]), 'std_test_score': array([2.95646030e-03, 1.09720995e-04, 1.79511359e-04, 6.81811239e-06,
       2.95646030e-03, 1.09720995e-04, 1.79511359e-04, 6.81811239e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 15:36:51,704 - __main__ - INFO - (24) - BEST_SCORE_: -0.003690374889217748
2020-03-20 15:36:51,705 - __main__ - INFO - (24) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 15:39:32,936 - __main__ - INFO - (24) - NESTED CROSS VALIDATION with 3 fold: [-0.00055304 -0.00286554 -0.00765254]
2020-03-20 15:39:32,938 - __main__ - INFO - (24) - NESTED CROSS VALIDATION (mean): -0.003690374889217748
2020-03-20 15:39:32,939 - __main__ - INFO - (25) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:39:32,940 - __main__ - INFO - (25) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 15:39:32,941 - __main__ - INFO - (25) - DATA_REDUCTION_: t
2020-03-20 15:39:32,942 - __main__ - INFO - (25) - DATA_DIMENSION_: 2
2020-03-20 16:02:00,723 - __main__ - INFO - (25) - CV_RESULTS_: {'mean_fit_time': array([53.27907181, 53.04832013, 53.94210227, 54.1821483 , 53.57537556,
       52.91013177, 53.65082844, 53.29165514]), 'std_fit_time': array([0.12472425, 0.06913007, 0.12685478, 0.25985303, 0.10941575,
       0.14185711, 0.31574785, 0.04261985]), 'mean_score_time': array([0.18926541, 0.19231478, 0.19242644, 0.19091694, 0.19114391,
       0.19242048, 0.19031405, 0.1930596 ]), 'std_score_time': array([0.00065294, 0.00135964, 0.00116399, 0.00057383, 0.00206848,
       0.00319065, 0.00155425, 0.00283052]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00572767, -0.02466725, -0.54911442, -0.54998121, -0.00572767,
       -0.02466725, -0.54911442, -0.54998121]), 'split1_test_score': array([-0.        , -0.01355756, -0.54856663, -0.54928669, -0.        ,
       -0.01355756, -0.54856663, -0.54928669]), 'split2_test_score': array([-0.00076583, -0.0246424 , -0.5487328 , -0.54997993, -0.00076583,
       -0.0246424 , -0.5487328 , -0.54997993]), 'mean_test_score': array([-0.0021645 , -0.02095574, -0.54880462, -0.54974928, -0.0021645 ,
       -0.02095574, -0.54880462, -0.54974928]), 'std_test_score': array([0.00253886, 0.00523131, 0.00022933, 0.0003271 , 0.00253886,
       0.00523131, 0.00022933, 0.0003271 ]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 16:02:00,733 - __main__ - INFO - (25) - BEST_SCORE_: -0.002164500047273993
2020-03-20 16:02:00,737 - __main__ - INFO - (25) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:04:39,445 - __main__ - INFO - (25) - NESTED CROSS VALIDATION with 3 fold: [-0.00572767 -0.         -0.00076583]
2020-03-20 16:04:39,447 - __main__ - INFO - (25) - NESTED CROSS VALIDATION (mean): -0.002164500047273993
2020-03-20 16:04:39,455 - __main__ - INFO - (26) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:04:39,456 - __main__ - INFO - (26) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:04:39,457 - __main__ - INFO - (26) - DATA_REDUCTION_: t
2020-03-20 16:04:39,458 - __main__ - INFO - (26) - DATA_DIMENSION_: 2
2020-03-20 16:27:27,316 - __main__ - INFO - (26) - CV_RESULTS_: {'mean_fit_time': array([53.28204719, 53.36559669, 53.81904213, 54.33217192, 53.87214677,
       54.12542041, 55.29680427, 55.43648903]), 'std_fit_time': array([0.13153758, 0.41917781, 0.13045537, 0.03985144, 0.09870665,
       0.27438233, 0.13297649, 0.29654716]), 'mean_score_time': array([0.18990771, 0.19158522, 0.19215123, 0.19025723, 0.1931599 ,
       0.1944255 , 0.18974177, 0.19240546]), 'std_score_time': array([0.00125872, 0.00078025, 0.00220826, 0.00090619, 0.00273106,
       0.0020903 , 0.00165208, 0.00081373]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00214153, -0.02487934, -0.54885349, -0.54999258, -0.00214153,
       -0.02487934, -0.54885349, -0.54999258]), 'split1_test_score': array([-0.01810987, -0.02499978, -0.54972061, -0.54999998, -0.01810987,
       -0.02499978, -0.54972061, -0.54999998]), 'split2_test_score': array([-0.00663577, -0.02495667, -0.54916583, -0.54999733, -0.00663577,
       -0.02495667, -0.54916583, -0.54999733]), 'mean_test_score': array([-0.00896239, -0.02494526, -0.54924664, -0.54999663, -0.00896239,
       -0.02494526, -0.54924664, -0.54999663]), 'std_test_score': array([6.72343116e-03, 4.98258521e-05, 3.58578894e-04, 3.06029704e-06,
       6.72343116e-03, 4.98258521e-05, 3.58578894e-04, 3.06029704e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 16:27:27,322 - __main__ - INFO - (26) - BEST_SCORE_: -0.00896239090448977
2020-03-20 16:27:27,333 - __main__ - INFO - (26) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:30:12,173 - __main__ - INFO - (26) - NESTED CROSS VALIDATION with 3 fold: [-0.00214153 -0.01810987 -0.00663577]
2020-03-20 16:30:12,175 - __main__ - INFO - (26) - NESTED CROSS VALIDATION (mean): -0.00896239090448977
2020-03-20 16:30:12,179 - __main__ - INFO - (27) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:30:12,181 - __main__ - INFO - (27) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:30:12,184 - __main__ - INFO - (27) - DATA_REDUCTION_: t
2020-03-20 16:30:12,185 - __main__ - INFO - (27) - DATA_DIMENSION_: 2
2020-03-20 16:53:19,676 - __main__ - INFO - (27) - CV_RESULTS_: {'mean_fit_time': array([54.66716472, 54.5835797 , 55.14066188, 55.07715893, 54.98352512,
       55.29114652, 55.33003728, 55.51721764]), 'std_fit_time': array([0.12357183, 0.13326316, 0.02860558, 0.1920269 , 0.43162252,
       0.07265104, 0.20393193, 0.26315325]), 'mean_score_time': array([0.19036412, 0.19424097, 0.18956574, 0.19143915, 0.19175808,
       0.19099283, 0.19005148, 0.19079622]), 'std_score_time': array([0.00271982, 0.00386678, 0.0002694 , 0.00058343, 0.00114706,
       0.00113175, 0.00295061, 0.0013624 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.0122172 , -0.025     , -0.54938855, -0.54999981, -0.0122172 ,
       -0.025     , -0.54938855, -0.54999981]), 'split1_test_score': array([-0.01647467, -0.025     , -0.54958744, -0.54999981, -0.01647467,
       -0.025     , -0.54958744, -0.54999981]), 'split2_test_score': array([-1.62203962e-05, -4.20617703e-03, -5.48554528e-01, -5.48803805e-01,
       -1.62203962e-05, -4.20617703e-03, -5.48554528e-01, -5.48803805e-01]), 'mean_test_score': array([-0.00956936, -0.01806873, -0.54917684, -0.54960114, -0.00956936,
       -0.01806873, -0.54917684, -0.54960114]), 'std_test_score': array([0.00697512, 0.0098023 , 0.00044747, 0.0005638 , 0.00697512,
       0.0098023 , 0.00044747, 0.0005638 ]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 16:53:19,689 - __main__ - INFO - (27) - BEST_SCORE_: -0.009569363953444784
2020-03-20 16:53:19,692 - __main__ - INFO - (27) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 16:56:02,885 - __main__ - INFO - (27) - NESTED CROSS VALIDATION with 3 fold: [-1.22171991e-02 -1.64746724e-02 -1.62203962e-05]
2020-03-20 16:56:02,887 - __main__ - INFO - (27) - NESTED CROSS VALIDATION (mean): -0.009569363953444784
2020-03-20 16:56:02,891 - __main__ - INFO - (28) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:56:02,892 - __main__ - INFO - (28) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 16:56:02,893 - __main__ - INFO - (28) - DATA_REDUCTION_: t
2020-03-20 16:56:02,894 - __main__ - INFO - (28) - DATA_DIMENSION_: 2
2020-03-20 17:18:48,957 - __main__ - INFO - (28) - CV_RESULTS_: {'mean_fit_time': array([54.20266326, 54.20074383, 54.42249815, 54.39671342, 53.88522975,
       53.6251448 , 54.82035406, 54.38505228]), 'std_fit_time': array([0.08832733, 0.14905031, 0.15060925, 0.03198563, 0.06216365,
       0.04752542, 0.19560724, 0.15288765]), 'mean_score_time': array([0.18822686, 0.19445856, 0.18897462, 0.18883952, 0.18804049,
       0.19047618, 0.19038661, 0.19026423]), 'std_score_time': array([0.00091827, 0.00423838, 0.0004311 , 0.00205357, 0.00012003,
       0.00124632, 0.00176278, 0.00055491]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00494918, -0.02490198, -0.54899843, -0.54999263, -0.00494918,
       -0.02490198, -0.54899843, -0.54999263]), 'split1_test_score': array([-0.01589495, -0.025     , -0.54958699, -0.54999999, -0.01589495,
       -0.025     , -0.54958699, -0.54999999]), 'split2_test_score': array([-3.56204081e-04, -1.37018442e-02, -5.48639969e-01, -5.49294742e-01,
       -3.56204081e-04, -1.37018442e-02, -5.48639969e-01, -5.49294742e-01]), 'mean_test_score': array([-0.00706678, -0.02120128, -0.54907513, -0.54976246, -0.00706678,
       -0.02120128, -0.54907513, -0.54976246]), 'std_test_score': array([0.00651799, 0.00530305, 0.00039041, 0.00033074, 0.00651799,
       0.00530305, 0.00039041, 0.00033074]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 17:18:48,966 - __main__ - INFO - (28) - BEST_SCORE_: -0.007066775978275836
2020-03-20 17:18:48,969 - __main__ - INFO - (28) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:21:29,090 - __main__ - INFO - (28) - NESTED CROSS VALIDATION with 3 fold: [-0.00494918 -0.01589495 -0.0003562 ]
2020-03-20 17:21:29,092 - __main__ - INFO - (28) - NESTED CROSS VALIDATION (mean): -0.007066775978275836
2020-03-20 17:21:29,093 - __main__ - INFO - (29) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:21:29,096 - __main__ - INFO - (29) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:21:29,098 - __main__ - INFO - (29) - DATA_REDUCTION_: t
2020-03-20 17:21:29,100 - __main__ - INFO - (29) - DATA_DIMENSION_: 2
2020-03-20 17:44:05,705 - __main__ - INFO - (29) - CV_RESULTS_: {'mean_fit_time': array([53.31281145, 55.29871758, 55.64455533, 54.43406844, 52.70194697,
       52.85885262, 53.32806794, 53.35047015]), 'std_fit_time': array([0.18958012, 0.9066427 , 0.10079048, 0.73809531, 0.13087934,
       0.13611109, 0.03420333, 0.21330156]), 'mean_score_time': array([0.19138813, 0.19125875, 0.19545865, 0.1916151 , 0.18929752,
       0.19256798, 0.18757812, 0.1901745 ]), 'std_score_time': array([9.06810452e-04, 1.04987527e-03, 8.20893614e-03, 1.48088339e-03,
       2.11215027e-03, 2.47254876e-03, 9.86521676e-05, 7.73235361e-04]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01381892, -0.02499839, -0.54944686, -0.54999939, -0.01381892,
       -0.02499839, -0.54944686, -0.54999939]), 'split1_test_score': array([-0.00077902, -0.02246544, -0.54870589, -0.54986001, -0.00077902,
       -0.02246544, -0.54870589, -0.54986001]), 'split2_test_score': array([-0.00837704, -0.02498621, -0.54921885, -0.54999915, -0.00837704,
       -0.02498621, -0.54921885, -0.54999915]), 'mean_test_score': array([-0.00765832, -0.02415001, -0.54912387, -0.54995285, -0.00765832,
       -0.02415001, -0.54912387, -0.54995285]), 'std_test_score': array([5.34771971e-03, 1.19118069e-03, 3.09867819e-04, 6.56482600e-05,
       5.34771971e-03, 1.19118069e-03, 3.09867819e-04, 6.56482600e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 17:44:05,710 - __main__ - INFO - (29) - BEST_SCORE_: -0.0076583247959159245
2020-03-20 17:44:05,714 - __main__ - INFO - (29) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 17:46:46,255 - __main__ - INFO - (29) - NESTED CROSS VALIDATION with 3 fold: [-0.01381892 -0.00077902 -0.00837704]
2020-03-20 17:46:46,259 - __main__ - INFO - (29) - NESTED CROSS VALIDATION (mean): -0.0076583247959159245
2020-03-20 17:46:46,262 - __main__ - INFO - (30) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:46:46,263 - __main__ - INFO - (30) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 17:46:46,265 - __main__ - INFO - (30) - DATA_REDUCTION_: t
2020-03-20 17:46:46,266 - __main__ - INFO - (30) - DATA_DIMENSION_: 2
2020-03-20 18:09:43,162 - __main__ - INFO - (30) - CV_RESULTS_: {'mean_fit_time': array([53.80395381, 54.1634117 , 55.80890409, 55.68836761, 53.67393374,
       54.27206922, 54.97741143, 54.84530505]), 'std_fit_time': array([0.41140899, 0.31564547, 0.2350913 , 0.47951538, 0.28056499,
       0.28378378, 0.17654409, 0.20017733]), 'mean_score_time': array([0.19029713, 0.19230374, 0.19179225, 0.1945645 , 0.19041594,
       0.19287968, 0.19171349, 0.19261853]), 'std_score_time': array([0.0022818 , 0.00242112, 0.00230068, 0.00212821, 0.00011263,
       0.00088418, 0.00461441, 0.00364691]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.00198372, -0.54845279, -0.54856582, -0.        ,
       -0.00198372, -0.54845279, -0.54856582]), 'split1_test_score': array([-0.01214386, -0.025     , -0.54941984, -0.54999957, -0.01214386,
       -0.025     , -0.54941984, -0.54999957]), 'split2_test_score': array([-0.01252401, -0.025     , -0.5494208 , -0.54999828, -0.01252401,
       -0.025     , -0.5494208 , -0.54999828]), 'mean_test_score': array([-0.00822262, -0.01732791, -0.54909781, -0.54952122, -0.00822262,
       -0.01732791, -0.54909781, -0.54952122]), 'std_test_score': array([0.00581634, 0.01084998, 0.0004561 , 0.00067557, 0.00581634,
       0.01084998, 0.0004561 , 0.00067557]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 18:09:43,167 - __main__ - INFO - (30) - BEST_SCORE_: -0.008222623770810546
2020-03-20 18:09:43,169 - __main__ - INFO - (30) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 18:12:26,067 - __main__ - INFO - (30) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.01214386 -0.01252401]
2020-03-20 18:12:26,068 - __main__ - INFO - (30) - NESTED CROSS VALIDATION (mean): -0.008222623770810546
2020-03-20 18:12:26,070 - __main__ - INFO - (31) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:12:26,071 - __main__ - INFO - (31) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:12:26,073 - __main__ - INFO - (31) - DATA_REDUCTION_: t
2020-03-20 18:12:26,074 - __main__ - INFO - (31) - DATA_DIMENSION_: 2
2020-03-20 18:35:09,673 - __main__ - INFO - (31) - CV_RESULTS_: {'mean_fit_time': array([54.44653877, 54.18210665, 54.20333918, 54.31941144, 53.19445976,
       53.01919436, 54.18781575, 55.39455207]), 'std_fit_time': array([0.15290511, 0.21646617, 0.11888193, 0.33243687, 0.10561326,
       0.12437436, 0.24372254, 1.33743934]), 'mean_score_time': array([0.19011521, 0.19186131, 0.19188611, 0.19155447, 0.18970887,
       0.19573498, 0.19108438, 0.19329921]), 'std_score_time': array([0.00085075, 0.00081431, 0.00293097, 0.00145835, 0.00115096,
       0.00107922, 0.00026085, 0.00077938]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00108791, -0.01628857, -0.54873771, -0.54951262, -0.00108791,
       -0.01628857, -0.54873771, -0.54951262]), 'split1_test_score': array([-0.        , -0.01886127, -0.54853995, -0.54966257, -0.        ,
       -0.01886127, -0.54853995, -0.54966257]), 'split2_test_score': array([-0.00074134, -0.01870096, -0.54869857, -0.54966402, -0.00074134,
       -0.01870096, -0.54869857, -0.54966402]), 'mean_test_score': array([-0.00060975, -0.01795026, -0.54865874, -0.54961307, -0.00060975,
       -0.01795026, -0.54865874, -0.54961307]), 'std_test_score': array([4.53777785e-04, 1.17681912e-03, 8.55038462e-05, 7.10325016e-05,
       4.53777785e-04, 1.17681912e-03, 8.55038462e-05, 7.10325016e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 18:35:09,683 - __main__ - INFO - (31) - BEST_SCORE_: -0.0006097477451521815
2020-03-20 18:35:09,686 - __main__ - INFO - (31) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 18:37:51,855 - __main__ - INFO - (31) - NESTED CROSS VALIDATION with 3 fold: [-0.00108791 -0.         -0.00074134]
2020-03-20 18:37:51,857 - __main__ - INFO - (31) - NESTED CROSS VALIDATION (mean): -0.0006097477451521815
2020-03-20 18:37:51,864 - __main__ - INFO - (32) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:37:51,868 - __main__ - INFO - (32) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 18:37:51,872 - __main__ - INFO - (32) - DATA_REDUCTION_: t
2020-03-20 18:37:51,874 - __main__ - INFO - (32) - DATA_DIMENSION_: 2
2020-03-20 19:00:29,314 - __main__ - INFO - (32) - CV_RESULTS_: {'mean_fit_time': array([53.14643184, 53.08149441, 53.76214353, 54.70070378, 53.99834132,
       54.0447313 , 54.04838061, 54.365659  ]), 'std_fit_time': array([0.21940809, 0.07667096, 0.13456142, 0.56943221, 0.13851137,
       0.20758747, 0.35008015, 0.25197301]), 'mean_score_time': array([0.1902314 , 0.19012189, 0.18942006, 0.19259652, 0.18855556,
       0.1912868 , 0.19014223, 0.18924189]), 'std_score_time': array([0.00200255, 0.00109745, 0.0006033 , 0.00129491, 0.00117034,
       0.00119186, 0.00177121, 0.0025024 ]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.02020812, -0.025     , -0.54979326, -0.55      , -0.02020812,
       -0.025     , -0.54979326, -0.55      ]), 'split1_test_score': array([-0.        , -0.01436541, -0.5484719 , -0.54933591, -0.        ,
       -0.01436541, -0.5484719 , -0.54933591]), 'split2_test_score': array([-0.01183603, -0.02498529, -0.54940846, -0.54999828, -0.01183603,
       -0.02498529, -0.54940846, -0.54999828]), 'mean_test_score': array([-0.01068138, -0.02145023, -0.54922454, -0.54977806, -0.01068138,
       -0.02145023, -0.54922454, -0.54977806]), 'std_test_score': array([0.00829023, 0.00500973, 0.0005549 , 0.00031265, 0.00829023,
       0.00500973, 0.0005549 , 0.00031265]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:00:29,319 - __main__ - INFO - (32) - BEST_SCORE_: -0.010681383919045342
2020-03-20 19:00:29,327 - __main__ - INFO - (32) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:03:11,541 - __main__ - INFO - (32) - NESTED CROSS VALIDATION with 3 fold: [-0.02020812 -0.         -0.01183603]
2020-03-20 19:03:11,543 - __main__ - INFO - (32) - NESTED CROSS VALIDATION (mean): -0.010681383919045342
2020-03-20 19:03:11,549 - __main__ - INFO - (33) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:03:11,551 - __main__ - INFO - (33) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:03:11,553 - __main__ - INFO - (33) - DATA_REDUCTION_: t
2020-03-20 19:03:11,558 - __main__ - INFO - (33) - DATA_DIMENSION_: 2
2020-03-20 19:25:40,033 - __main__ - INFO - (33) - CV_RESULTS_: {'mean_fit_time': array([53.54353364, 53.33637404, 54.12380179, 54.13111011, 53.32820463,
       53.38672694, 53.91695086, 53.01944311]), 'std_fit_time': array([0.39797638, 0.18271171, 0.46690059, 0.20306464, 0.12114361,
       0.42930225, 0.09316957, 0.34759251]), 'mean_score_time': array([0.19428031, 0.19141563, 0.19205252, 0.18966468, 0.18873103,
       0.19080027, 0.19211014, 0.18688162]), 'std_score_time': array([0.00733172, 0.00153522, 0.00334732, 0.0007948 , 0.00087728,
       0.00050746, 0.00451142, 0.00384227]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-2.25212040e-04, -5.17884687e-03, -5.48688311e-01, -5.48771844e-01,
       -2.25212040e-04, -5.17884687e-03, -5.48688311e-01, -5.48771844e-01]), 'split1_test_score': array([-0.00086821, -0.0226179 , -0.54876542, -0.54987897, -0.00086821,
       -0.0226179 , -0.54876542, -0.54987897]), 'split2_test_score': array([-0.00488879, -0.02482038, -0.54906251, -0.54998715, -0.00488879,
       -0.02482038, -0.54906251, -0.54998715]), 'mean_test_score': array([-0.00199407, -0.01753904, -0.54883875, -0.54954599, -0.00199407,
       -0.01753904, -0.54883875, -0.54954599]), 'std_test_score': array([0.00206364, 0.00878611, 0.00016132, 0.00054918, 0.00206364,
       0.00878611, 0.00016132, 0.00054918]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:25:40,038 - __main__ - INFO - (33) - BEST_SCORE_: -0.001994068303464938
2020-03-20 19:25:40,047 - __main__ - INFO - (33) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:28:15,649 - __main__ - INFO - (33) - NESTED CROSS VALIDATION with 3 fold: [-0.00022521 -0.00086821 -0.00488879]
2020-03-20 19:28:15,651 - __main__ - INFO - (33) - NESTED CROSS VALIDATION (mean): -0.001994068303464938
2020-03-20 19:28:15,655 - __main__ - INFO - (34) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:28:15,659 - __main__ - INFO - (34) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:28:15,664 - __main__ - INFO - (34) - DATA_REDUCTION_: t
2020-03-20 19:28:15,666 - __main__ - INFO - (34) - DATA_DIMENSION_: 2
2020-03-20 19:50:51,070 - __main__ - INFO - (34) - CV_RESULTS_: {'mean_fit_time': array([52.71750363, 52.75583712, 54.71793103, 54.26035857, 53.49802224,
       53.48893325, 54.23922062, 54.48211217]), 'std_fit_time': array([0.43602253, 0.37700545, 0.28216822, 0.19047618, 0.04844243,
       0.10311395, 0.04053871, 0.33014868]), 'mean_score_time': array([0.188181  , 0.19003916, 0.19029609, 0.1902825 , 0.18745367,
       0.18967438, 0.19018793, 0.19047721]), 'std_score_time': array([0.00290129, 0.00139302, 0.00054964, 0.00133187, 0.00217635,
       0.00228456, 0.00139329, 0.00126171]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.01798551, -0.025     , -0.54969431, -0.55      , -0.01798551,
       -0.025     , -0.54969431, -0.55      ]), 'split1_test_score': array([-0.00921549, -0.02496436, -0.5492563 , -0.54999785, -0.00921549,
       -0.02496436, -0.5492563 , -0.54999785]), 'split2_test_score': array([-3.45491883e-04, -2.28413164e-02, -5.48625724e-01, -5.49880140e-01,
       -3.45491883e-04, -2.28413164e-02, -5.48625724e-01, -5.49880140e-01]), 'mean_test_score': array([-0.00918217, -0.02426856, -0.54919211, -0.54995933, -0.00918217,
       -0.02426856, -0.54919211, -0.54995933]), 'std_test_score': array([7.20154706e-03, 1.00931764e-03, 4.38601684e-04, 5.60022974e-05,
       7.20154706e-03, 1.00931764e-03, 4.38601684e-04, 5.60022974e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 19:50:51,076 - __main__ - INFO - (34) - BEST_SCORE_: -0.009182165539438887
2020-03-20 19:50:51,086 - __main__ - INFO - (34) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 19:53:32,627 - __main__ - INFO - (34) - NESTED CROSS VALIDATION with 3 fold: [-0.01798551 -0.00921549 -0.00034549]
2020-03-20 19:53:32,632 - __main__ - INFO - (34) - NESTED CROSS VALIDATION (mean): -0.009182165539438887
2020-03-20 19:53:32,633 - __main__ - INFO - (35) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:53:32,635 - __main__ - INFO - (35) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 19:53:32,636 - __main__ - INFO - (35) - DATA_REDUCTION_: t
2020-03-20 19:53:32,637 - __main__ - INFO - (35) - DATA_DIMENSION_: 2
2020-03-20 20:16:03,357 - __main__ - INFO - (35) - CV_RESULTS_: {'mean_fit_time': array([53.8395582 , 53.20797316, 54.12974358, 54.07350596, 53.70709674,
       52.92212057, 53.34576575, 53.65602676]), 'std_fit_time': array([0.16415274, 0.04416374, 0.33265574, 0.07987655, 0.32282986,
       0.13594435, 0.10550874, 0.02938834]), 'mean_score_time': array([0.18930697, 0.18912856, 0.18916043, 0.19626959, 0.18803048,
       0.19200047, 0.18942142, 0.19054095]), 'std_score_time': array([0.00093216, 0.00190078, 0.0019087 , 0.00590092, 0.00310635,
       0.00051007, 0.00030344, 0.00174187]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.        , -0.00102418, -0.54848269, -0.54871793, -0.        ,
       -0.00102418, -0.54848269, -0.54871793]), 'split1_test_score': array([-0.025, -0.025, -0.55 , -0.55 , -0.025, -0.025, -0.55 , -0.55 ]), 'split2_test_score': array([-0.00087842, -0.01454057, -0.54879002, -0.54949741, -0.00087842,
       -0.01454057, -0.54879002, -0.54949741]), 'mean_test_score': array([-0.00862614, -0.01352158, -0.5490909 , -0.54940512, -0.00862614,
       -0.01352158, -0.5490909 , -0.54940512]), 'std_test_score': array([0.01158362, 0.00981457, 0.00065496, 0.00052746, 0.01158362,
       0.00981457, 0.00065496, 0.00052746]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 20:16:03,363 - __main__ - INFO - (35) - BEST_SCORE_: -0.008626139652482842
2020-03-20 20:16:03,368 - __main__ - INFO - (35) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 20:18:42,669 - __main__ - INFO - (35) - NESTED CROSS VALIDATION with 3 fold: [-0.         -0.025      -0.00087842]
2020-03-20 20:18:42,674 - __main__ - INFO - (35) - NESTED CROSS VALIDATION (mean): -0.008626139652482842
2020-03-20 20:18:42,675 - __main__ - INFO - (36) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:18:42,676 - __main__ - INFO - (36) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:18:42,677 - __main__ - INFO - (36) - DATA_REDUCTION_: t
2020-03-20 20:18:42,678 - __main__ - INFO - (36) - DATA_DIMENSION_: 2
2020-03-20 20:41:03,181 - __main__ - INFO - (36) - CV_RESULTS_: {'mean_fit_time': array([52.76331631, 52.84338578, 53.1848499 , 53.25684444, 52.95260843,
       52.76812696, 53.69181442, 53.93888807]), 'std_fit_time': array([0.17165496, 0.00877559, 0.12441688, 0.24205317, 0.14319806,
       0.0250672 , 0.39958861, 0.11491043]), 'mean_score_time': array([0.18853974, 0.1931111 , 0.18719292, 0.1930267 , 0.19153794,
       0.19216728, 0.1904792 , 0.19100817]), 'std_score_time': array([0.00111433, 0.00174537, 0.0014421 , 0.00189628, 0.00057723,
       0.00489048, 0.00178675, 0.00070612]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00466754, -0.02471259, -0.54923338, -0.54998211, -0.00466754,
       -0.02471259, -0.54923338, -0.54998211]), 'split1_test_score': array([-0.00919615, -0.02498816, -0.54928114, -0.54999926, -0.00919615,
       -0.02498816, -0.54928114, -0.54999926]), 'split2_test_score': array([-0.00113479, -0.02450241, -0.54870145, -0.549969  , -0.00113479,
       -0.02450241, -0.54870145, -0.549969  ]), 'mean_test_score': array([-0.00499949, -0.02473439, -0.54907199, -0.54998346, -0.00499949,
       -0.02473439, -0.54907199, -0.54998346]), 'std_test_score': array([3.29939499e-03, 1.98904886e-04, 2.62734881e-04, 1.23926940e-05,
       3.29939499e-03, 1.98904886e-04, 2.62734881e-04, 1.23926940e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 20:41:03,186 - __main__ - INFO - (36) - BEST_SCORE_: -0.004999494321429123
2020-03-20 20:41:03,193 - __main__ - INFO - (36) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 20:43:44,377 - __main__ - INFO - (36) - NESTED CROSS VALIDATION with 3 fold: [-0.00466754 -0.00919615 -0.00113479]
2020-03-20 20:43:44,380 - __main__ - INFO - (36) - NESTED CROSS VALIDATION (mean): -0.004999494321429123
2020-03-20 20:43:44,385 - __main__ - INFO - (37) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:43:44,387 - __main__ - INFO - (37) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 20:43:44,388 - __main__ - INFO - (37) - DATA_REDUCTION_: t
2020-03-20 20:43:44,389 - __main__ - INFO - (37) - DATA_DIMENSION_: 2
2020-03-20 21:06:19,487 - __main__ - INFO - (37) - CV_RESULTS_: {'mean_fit_time': array([53.37416291, 53.57646283, 54.66717569, 54.21860441, 53.132773  ,
       53.36471987, 53.9035248 , 53.93272018]), 'std_fit_time': array([0.07424432, 0.22753598, 0.14109628, 0.12493282, 0.18940246,
       0.03063022, 0.15075465, 0.20515974]), 'mean_score_time': array([0.18960023, 0.19496298, 0.18890158, 0.20900679, 0.18917322,
       0.18981481, 0.18973279, 0.19377383]), 'std_score_time': array([0.00152187, 0.00209606, 0.00033651, 0.02790718, 0.0024275 ,
       0.00089953, 0.00151019, 0.00450492]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.02005803, -0.025     , -0.54975407, -0.55      , -0.02005803,
       -0.025     , -0.54975407, -0.55      ]), 'split1_test_score': array([-0.00605956, -0.02499443, -0.54936882, -0.54999965, -0.00605956,
       -0.02499443, -0.54936882, -0.54999965]), 'split2_test_score': array([-0.00906436, -0.02490934, -0.54920359, -0.54999107, -0.00906436,
       -0.02490934, -0.54920359, -0.54999107]), 'mean_test_score': array([-0.01172732, -0.02496792, -0.54944216, -0.54999691, -0.01172732,
       -0.02496792, -0.54944216, -0.54999691]), 'std_test_score': array([6.01707633e-03, 4.14899568e-05, 2.30639722e-04, 4.13237789e-06,
       6.01707633e-03, 4.14899568e-05, 2.30639722e-04, 4.13237789e-06]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-20 21:06:19,492 - __main__ - INFO - (37) - BEST_SCORE_: -0.011727316151140482
2020-03-20 21:06:19,500 - __main__ - INFO - (37) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-20 21:08:59,960 - __main__ - INFO - (37) - NESTED CROSS VALIDATION with 3 fold: [-0.02005803 -0.00605956 -0.00906436]
2020-03-20 21:08:59,962 - __main__ - INFO - (37) - NESTED CROSS VALIDATION (mean): -0.011727316151140482
2020-03-20 23:43:50,743 - __main__ - INFO - (38) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:43:50,745 - __main__ - INFO - (38) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-20 23:43:50,749 - __main__ - INFO - (38) - DATA_REDUCTION_: t
2020-03-20 23:43:50,750 - __main__ - INFO - (38) - DATA_DIMENSION_: 2
2020-03-21 00:06:41,202 - __main__ - INFO - (38) - CV_RESULTS_: {'mean_fit_time': array([52.5490795 , 52.59793798, 53.6963524 , 53.28783862, 53.76927129,
       54.57769831, 56.51149289, 56.90739918]), 'std_fit_time': array([0.50743275, 0.2754336 , 0.77351021, 0.19515725, 1.5574192 ,
       0.90305294, 0.21411377, 0.09062188]), 'mean_score_time': array([0.19328181, 0.19006618, 0.19388707, 0.18836737, 0.18857431,
       0.21695908, 0.20498085, 0.21012632]), 'std_score_time': array([0.0158664 , 0.01271093, 0.0175352 , 0.0178372 , 0.02297054,
       0.00892491, 0.00997757, 0.01013334]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.00087982, -0.01554349, -0.54884941, -0.54954524, -0.00087982,
       -0.01554349, -0.54884941, -0.54954524]), 'split1_test_score': array([-0.00796175, -0.02482828, -0.54933989, -0.54999206, -0.00796175,
       -0.02482828, -0.54933989, -0.54999206]), 'split2_test_score': array([-0.00750646, -0.02482828, -0.54933943, -0.54999206, -0.00750646,
       -0.02482828, -0.54933943, -0.54999206]), 'mean_test_score': array([-0.00544934, -0.02173335, -0.54917624, -0.54984312, -0.00544934,
       -0.02173335, -0.54917624, -0.54984312]), 'std_test_score': array([0.00323648, 0.00437689, 0.0002311 , 0.00021063, 0.00323648,
       0.00437689, 0.0002311 , 0.00021063]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 00:06:41,207 - __main__ - INFO - (38) - BEST_SCORE_: -0.005449342626959436
2020-03-21 00:06:41,216 - __main__ - INFO - (38) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:09:26,878 - __main__ - INFO - (38) - NESTED CROSS VALIDATION with 3 fold: [-0.00087982 -0.00796175 -0.00750646]
2020-03-21 00:09:26,879 - __main__ - INFO - (38) - NESTED CROSS VALIDATION (mean): -0.005449342626959436
2020-03-21 00:09:26,881 - __main__ - INFO - (39) - Started Nested-GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:09:26,882 - __main__ - INFO - (39) - Started GridSearchCV with: {'c': [1, 1000], 'k': [GaussianKernel(0.5), GaussianKernel(0.2)], 'fuzzifier': [<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>]}
2020-03-21 00:09:26,884 - __main__ - INFO - (39) - DATA_REDUCTION_: t
2020-03-21 00:09:26,886 - __main__ - INFO - (39) - DATA_DIMENSION_: 2
2020-03-21 00:32:55,578 - __main__ - INFO - (39) - CV_RESULTS_: {'mean_fit_time': array([55.40568741, 57.26540558, 57.88396621, 54.7494599 , 55.2105821 ,
       55.26189113, 55.48687307, 56.15094495]), 'std_fit_time': array([0.83720169, 0.10443652, 0.40417222, 0.70079422, 0.50219185,
       0.23795569, 0.17010771, 0.33965962]), 'mean_score_time': array([0.20153793, 0.21224149, 0.20155493, 0.20218587, 0.18916925,
       0.18541948, 0.19787653, 0.18286133]), 'std_score_time': array([0.01362352, 0.01077488, 0.01215914, 0.02549238, 0.0070189 ,
       0.00117857, 0.01456298, 0.00052793]), 'param_c': masked_array(data=[1, 1, 1, 1, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fuzzifier': masked_array(data=[<class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>,
                   <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_k': masked_array(data=[GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2),
                   GaussianKernel(0.5), GaussianKernel(0.2)],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.2)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.5)}, {'c': 1000, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.QuantileLinearPiecewiseFuzzifier'>, 'k': GaussianKernel(0.2)}], 'split0_test_score': array([-0.0063825 , -0.02454276, -0.5490232 , -0.54997351, -0.0063825 ,
       -0.02454276, -0.5490232 , -0.54997351]), 'split1_test_score': array([-0.025     , -0.025     , -0.54985753, -0.55      , -0.025     ,
       -0.025     , -0.54985753, -0.55      ]), 'split2_test_score': array([-0.        , -0.02359182, -0.54938972, -0.54992571, -0.        ,
       -0.02359182, -0.54938972, -0.54992571]), 'mean_test_score': array([-0.01046083, -0.0243782 , -0.54942348, -0.54996641, -0.01046083,
       -0.0243782 , -0.54942348, -0.54996641]), 'std_test_score': array([1.06058039e-02, 5.86544571e-04, 3.41451282e-04, 3.07416596e-05,
       1.06058039e-02, 5.86544571e-04, 3.41451282e-04, 3.07416596e-05]), 'rank_test_score': array([1, 3, 5, 7, 1, 3, 5, 7], dtype=int32)}
2020-03-21 00:32:55,584 - __main__ - INFO - (39) - BEST_SCORE_: -0.010460832242423933
2020-03-21 00:32:55,586 - __main__ - INFO - (39) - BEST_PARAMS_: {'c': 1, 'fuzzifier': <class 'fuzzylearn.fuzzifiers.LinearFuzzifier'>, 'k': GaussianKernel(0.5)}
2020-03-21 00:35:42,161 - __main__ - INFO - (39) - NESTED CROSS VALIDATION with 3 fold: [-0.0063825 -0.025     -0.       ]
2020-03-21 00:35:42,166 - __main__ - INFO - (39) - NESTED CROSS VALIDATION (mean): -0.010460832242423933
